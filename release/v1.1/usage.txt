com.yd.photoeditor.view.CaptionImageView
androidx.recyclerview.widget.ThreadUtil
com.eptonic.photocollage.ui.view.frame.FramePhotoLayout$OnQuickActionClickListener:
    public abstract void onEditActionClick(com.eptonic.photocollage.ui.view.frame.FrameImageView)
androidx.core.text.util.FindAddress
com.bumptech.glide.load.model.ByteBufferEncoder:
    private static final java.lang.String TAG
androidx.recyclerview.R$string
com.eptonic.photocollage.presenter.listener.FreeEditInterface:
    public abstract void onSelectRecyclerClose()
    public abstract void onTabUnselected(com.google.android.material.tabs.TabLayout$Tab)
    public abstract void onSave()
androidx.cardview.widget.CardViewBaseImpl:
    private androidx.cardview.widget.RoundRectDrawableWithShadow createBackground(android.content.Context,android.content.res.ColorStateList,float,float,float)
    public void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float)
androidx.annotation.ContentView
com.yd.photoeditor.listener.OnInstallStoreItemListener
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments:
    public java.lang.String getHTMLElement()
androidx.core.provider.FontsContractCompat$4$2
androidx.transition.ViewUtils:
    static void setAnimationMatrix(android.view.View,android.graphics.Matrix)
    private void <init>()
    private static final java.lang.String TAG
androidx.fragment.R$styleable
androidx.cardview.widget.CardViewApi21Impl:
    public void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float)
com.google.android.material.chip.ChipDrawable:
    public static com.google.android.material.chip.ChipDrawable createFromResource(android.content.Context,int)
    public void getChipTouchBounds(android.graphics.RectF)
    boolean isShapeThemingEnabled()
    public void setTextResource(int)
    public boolean isChipIconVisible()
    public boolean isChipIconEnabled()
    public void setChipIconEnabledResource(int)
    public void setChipIconEnabled(boolean)
    public boolean isCloseIconEnabled()
    public void setCloseIconVisible(int)
    public void setCloseIconEnabledResource(int)
    public void setCloseIconEnabled(boolean)
    public boolean isCheckedIconVisible()
    public boolean isCheckedIconEnabled()
    public void setCheckedIconEnabledResource(int)
    public void setCheckedIconEnabled(boolean)
    public int getMaxWidth()
    private static final boolean DEBUG
    private static final java.lang.String NAMESPACE_APP
com.bumptech.glide.request.target.NotificationTarget
com.eptonic.photocollage.ui.view.sticker.TextSticker:
    public void release()
    public com.eptonic.photocollage.ui.view.sticker.TextSticker setAlpha(int)
    public com.eptonic.photocollage.ui.view.sticker.TextSticker setDrawable(android.graphics.drawable.Drawable,android.graphics.Rect)
    public com.eptonic.photocollage.ui.view.sticker.TextSticker setTextAlign(android.text.Layout$Alignment)
    public com.eptonic.photocollage.ui.view.sticker.TextSticker setMaxTextSize(float)
    public com.eptonic.photocollage.ui.view.sticker.TextSticker setMinTextSize(float)
    public com.eptonic.photocollage.ui.view.sticker.TextSticker setLineSpacing(float,float)
    public float getMinTextSizePixels()
    public synthetic bridge com.eptonic.photocollage.ui.view.sticker.Sticker setAlpha(int)
    public synthetic bridge com.eptonic.photocollage.ui.view.sticker.Sticker setDrawable(android.graphics.drawable.Drawable)
    private static final java.lang.String mEllipsis
com.google.android.material.internal.ParcelableSparseIntArray
androidx.recyclerview.widget.MessageThreadUtil$1
androidx.collection.SimpleArrayMap:
    private static final boolean DEBUG
    private static final java.lang.String TAG
    private static final boolean CONCURRENT_MODIFICATION_EXCEPTIONS
    private static final int BASE_SIZE
    private static final int CACHE_SIZE
androidx.core.graphics.TypefaceCompat:
    private void <init>()
com.google.android.material.datepicker.DateSelector:
    public abstract boolean isSelectionComplete()
    public abstract void setSelection(java.lang.Object)
    public abstract java.lang.String getSelectionDisplayString(android.content.Context)
    public abstract int getDefaultTitleResId()
    public abstract int getDefaultThemeResId(android.content.Context)
    public abstract android.view.View onCreateTextInputView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.OnSelectionChangedListener)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView:
    public void clearSelection()
    public synthetic bridge int lookForSelectablePosition(int,boolean)
org.greenrobot.greendao.rx.RxDao$16
androidx.transition.ChangeScroll
androidx.viewpager.R$integer
androidx.appcompat.widget.ActionMenuView$LayoutParams:
    void <init>(int,int,boolean)
androidx.core.text.util.LinkifyCompat$LinkifyMask
com.bumptech.glide.gifdecoder.GifHeader:
    public static final int NETSCAPE_LOOP_COUNT_FOREVER
    public static final int NETSCAPE_LOOP_COUNT_DOES_NOT_EXIST
com.google.android.material.internal.ThemeEnforcement:
    private void <init>()
    public static boolean isAppCompatTheme(android.content.Context)
    public static boolean isMaterialTheme(android.content.Context)
    private static final java.lang.String APPCOMPAT_THEME_NAME
    private static final java.lang.String MATERIAL_THEME_NAME
com.google.android.material.internal.package-info
androidx.appcompat.widget.PopupMenu$OnDismissListener
androidx.vectordrawable.R$layout
androidx.transition.ChangeImageTransform$3
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat
com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener:
    private static final java.lang.String TAG
androidx.drawerlayout.R$string
androidx.appcompat.widget.DrawableUtils:
    private void <init>()
    public static android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable)
    private static final java.lang.String TAG
    private static final java.lang.String VECTOR_DRAWABLE_CLAZZ_NAME
androidx.core.app.ComponentActivity:
    public void putExtraData(androidx.core.app.ComponentActivity$ExtraData)
    public androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class)
    public androidx.lifecycle.Lifecycle getLifecycle()
androidx.core.view.ScrollingView
com.yd.photoeditor.view.FingerPaintView
androidx.appcompat.R$color:
    private void <init>()
com.yd.photoeditor.actions.EffectAction:
    public java.lang.String getActionName()
    public void restoreInstanceState(android.os.Bundle)
    public void onActivityResume()
androidx.lifecycle.MediatorLiveData$Source
com.yd.photoeditor.R$dimen:
    private void <init>()
com.google.android.material.bottomnavigation.BottomNavigationMenuView$1
androidx.savedstate.Recreator:
    static final java.lang.String CLASSES_KEY
    static final java.lang.String COMPONENT_KEY
com.bumptech.glide.util.pool.FactoryPools:
    private void <init>()
    public static androidx.core.util.Pools$Pool simple(int,com.bumptech.glide.util.pool.FactoryPools$Factory)
    private static final java.lang.String TAG
    private static final int DEFAULT_POOL_SIZE
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$Size
com.eptonic.photocollage.util.GeometryUtils:
    public void <init>()
    public static boolean isInCircle(android.graphics.PointF,float,android.graphics.PointF)
    public static void createPathWithCubicCorner(android.graphics.Path,java.util.List,float)
    private static boolean containPoint(java.util.List,android.graphics.PointF)
    public static java.util.Map createPathWithCircleCorner(android.graphics.Path,java.util.List,java.util.List,float)
    public static android.graphics.PointF findMiddlePoint(android.graphics.PointF,android.graphics.PointF,android.graphics.PointF)
    public static android.graphics.PointF findMiddlePoint(android.graphics.PointF,android.graphics.PointF,float,android.graphics.PointF)
    public static double distanceToLine(double[],android.graphics.PointF)
    public static double[] findBisector(android.graphics.PointF,android.graphics.PointF,android.graphics.PointF)
    public static android.graphics.PointF[] findMiddlePoint(android.graphics.PointF,android.graphics.PointF,float)
androidx.core.view.accessibility.AccessibilityManagerCompat
androidx.viewpager2.widget.ViewPager2$OffscreenPageLimit
com.google.android.material.snackbar.SnackbarManager$SnackbarRecord:
    void <init>(int,com.google.android.material.snackbar.SnackbarManager$Callback)
androidx.recyclerview.widget.ThreadUtil$BackgroundCallback
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2
com.google.android.material.snackbar.BaseTransientBottomBar$16
com.bumptech.glide.load.engine.cache.ExternalPreferredCacheDiskCacheFactory
com.google.android.material.navigation.NavigationView$OnNavigationItemSelectedListener
androidx.customview.R$color
com.google.android.material.shape.MaterialShapeUtils:
    private void <init>()
com.bumptech.glide.signature.MediaStoreSignature
androidx.core.view.NestedScrollingChild:
    public abstract void setNestedScrollingEnabled(boolean)
    public abstract boolean startNestedScroll(int)
    public abstract boolean hasNestedScrollingParent()
    public abstract boolean dispatchNestedScroll(int,int,int,int,int[])
    public abstract boolean dispatchNestedPreScroll(int,int,int[],int[])
    public abstract boolean dispatchNestedFling(float,float,boolean)
    public abstract boolean dispatchNestedPreFling(float,float)
com.yd.photoeditor.R$layout:
    private void <init>()
com.bumptech.glide.load.MultiTransformation
androidx.core.view.animation.PathInterpolatorCompat
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments:
    public int getX()
    public int getY()
androidx.core.app.ActivityCompat$SharedElementCallback21Impl
org.greenrobot.greendao.rx.RxDao$2
androidx.transition.TranslationAnimationCreator
com.bumptech.glide.load.engine.prefill.BitmapPreFiller
com.yd.photoeditor.config.Constants:
    public void <init>()
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuHeaderItem
androidx.versionedparcelable.VersionedParcelParcel:
    public void writeByteArray(byte[],int,int)
    public void writeLong(long)
    public void writeFloat(float)
    public void writeDouble(double)
    public void writeStrongBinder(android.os.IBinder)
    public void writeStrongInterface(android.os.IInterface)
    public void writeBundle(android.os.Bundle)
    public long readLong()
    public float readFloat()
    public double readDouble()
    public android.os.IBinder readStrongBinder()
    public android.os.Bundle readBundle()
    private static final boolean DEBUG
    private static final java.lang.String TAG
androidx.recyclerview.widget.AsyncListDiffer$ListListener
androidx.recyclerview.widget.MessageThreadUtil$1$1
com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener
androidx.lifecycle.R
androidx.core.app.RemoteInput$Builder
com.google.android.material.badge.BadgeDrawable$SavedState
androidx.collection.ArrayMap:
    public boolean containsAll(java.util.Collection)
    public boolean removeAll(java.util.Collection)
com.eptonic.photocollage.ui.next.s.xx.xxx.yy.cc.activity.TemplateDetailActivity:
    public boolean isShowingAllTemplates()
    public void onBackgroundColorButtonClick()
    public void onEditActionClick(com.eptonic.photocollage.ui.view.frame.FrameImageView)
    public void onColorChanged(int)
    public void onBackgroundPhotoButtonClick()
    public void onStickerButtonClick()
    public void setRecyclerViewAdapter(int[],int)
    public void resultBackgroundDrawable(int)
    int itemCat
    private static final float MAX_CORNER_PROGRESS
    private static final float MAX_SPACE_PROGRESS
    private static final int REQUEST_SELECT_PHOTO
com.yd.photoeditor.R$style
androidx.viewpager2.widget.ScrollEventAdapter$ScrollEventValues
com.google.android.material.transformation.TransformationChildCard:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.DiffUtil$1
com.yd.photoeditor.ui.activity.ImageProcessingActivity:
    public com.yd.photoeditor.imageprocessing.filter.ImageRender getFilter()
    public java.util.ArrayList setAdapterData(int[])
    public java.util.ArrayList getItemInfo(int)
    public java.util.ArrayList mRotateInfos
    private static final java.lang.String TAG
    private static final int DEFAULT_SELECTED_ACTION_INDEX
    public static final java.lang.String EXTRA_EDITING_IMAGE_PATH
    public static final java.lang.String EXTRA_FLIP_IMAGE
    public static final java.lang.String EXTRA_RETURN_EDITED_IMAGE_PATH
    public static final java.lang.String IMAGE_URI_KEY
    public static final java.lang.String IS_EDITING_IMAGE_KEY
    public static final java.lang.String ROTATION_KEY
androidx.core.content.IntentCompat
androidx.fragment.R$style
androidx.core.database.CursorWindowCompat
com.bumptech.glide.load.resource.bitmap.BitmapEncoder:
    public void <init>()
    private static final java.lang.String TAG
com.bumptech.glide.load.model.stream.BaseGlideUrlLoader
androidx.fragment.app.FragmentStatePagerAdapter
com.google.android.material.snackbar.BaseTransientBottomBar$1
androidx.annotation.InspectableProperty$FlagEntry
com.yd.photoeditor.view.FocusImageView$Line
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat
androidx.core.widget.TextViewCompat$OreoCallback:
    private static final int MENU_ITEM_ORDER_PROCESS_TEXT_INTENT_ACTIONS_START
com.bumptech.glide.load.data.LocalUriFetcher:
    private static final java.lang.String TAG
androidx.core.net.DatagramSocketWrapper
com.google.android.material.tabs.TabLayout$TabLayoutOnPageChangeListener
com.google.android.material.datepicker.MaterialDatePicker:
    public void <init>()
    public static long todayInUtcMilliseconds()
    public static long thisMonthInUtcMilliseconds()
    static com.google.android.material.datepicker.MaterialDatePicker newInstance(com.google.android.material.datepicker.MaterialDatePicker$Builder)
    private int getThemeResId(android.content.Context)
    private void updateHeader()
    private void startPickerFragment()
    private void initHeaderToggle(android.content.Context)
    private void updateToggleContentDescription(com.google.android.material.internal.CheckableImageButton)
    private static android.graphics.drawable.Drawable createHeaderToggleDrawable(android.content.Context)
    private static int getDialogPickerHeight(android.content.Context)
    private static int getPaddedPickerWidth(android.content.Context)
    static synthetic java.util.LinkedHashSet access$000(com.google.android.material.datepicker.MaterialDatePicker)
    static synthetic java.util.LinkedHashSet access$100(com.google.android.material.datepicker.MaterialDatePicker)
    static synthetic void access$200(com.google.android.material.datepicker.MaterialDatePicker)
    static synthetic com.google.android.material.datepicker.DateSelector access$300(com.google.android.material.datepicker.MaterialDatePicker)
    static synthetic android.widget.Button access$400(com.google.android.material.datepicker.MaterialDatePicker)
    static synthetic com.google.android.material.internal.CheckableImageButton access$500(com.google.android.material.datepicker.MaterialDatePicker)
    static synthetic void access$600(com.google.android.material.datepicker.MaterialDatePicker,com.google.android.material.internal.CheckableImageButton)
    static synthetic void access$700(com.google.android.material.datepicker.MaterialDatePicker)
    public java.lang.String getHeaderText()
    public final void onSaveInstanceState(android.os.Bundle)
    public final void onCreate(android.os.Bundle)
    public final android.app.Dialog onCreateDialog(android.os.Bundle)
    public final android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
    public void onStart()
    public void onStop()
    public final void onCancel(android.content.DialogInterface)
    public final void onDismiss(android.content.DialogInterface)
    public final java.lang.Object getSelection()
    public boolean addOnPositiveButtonClickListener(com.google.android.material.datepicker.MaterialPickerOnPositiveButtonClickListener)
    public boolean removeOnPositiveButtonClickListener(com.google.android.material.datepicker.MaterialPickerOnPositiveButtonClickListener)
    public void clearOnPositiveButtonClickListeners()
    public boolean addOnNegativeButtonClickListener(android.view.View$OnClickListener)
    public boolean removeOnNegativeButtonClickListener(android.view.View$OnClickListener)
    public void clearOnNegativeButtonClickListeners()
    public boolean addOnCancelListener(android.content.DialogInterface$OnCancelListener)
    public boolean removeOnCancelListener(android.content.DialogInterface$OnCancelListener)
    public void clearOnCancelListeners()
    public boolean addOnDismissListener(android.content.DialogInterface$OnDismissListener)
    public boolean removeOnDismissListener(android.content.DialogInterface$OnDismissListener)
    public void clearOnDismissListeners()
    private final java.util.LinkedHashSet onPositiveButtonClickListeners
    private final java.util.LinkedHashSet onNegativeButtonClickListeners
    private final java.util.LinkedHashSet onCancelListeners
    private final java.util.LinkedHashSet onDismissListeners
    private int overrideThemeResId
    private com.google.android.material.datepicker.DateSelector dateSelector
    private com.google.android.material.datepicker.PickerFragment pickerFragment
    private com.google.android.material.datepicker.CalendarConstraints calendarConstraints
    private com.google.android.material.datepicker.MaterialCalendar calendar
    private int titleTextResId
    private java.lang.CharSequence titleText
    private boolean fullscreen
    private android.widget.TextView headerSelectionText
    private com.google.android.material.internal.CheckableImageButton headerToggleButton
    private com.google.android.material.shape.MaterialShapeDrawable background
    private android.widget.Button confirmButton
    private static final java.lang.String OVERRIDE_THEME_RES_ID
    private static final java.lang.String DATE_SELECTOR_KEY
    private static final java.lang.String CALENDAR_CONSTRAINTS_KEY
    private static final java.lang.String TITLE_TEXT_RES_ID_KEY
    private static final java.lang.String TITLE_TEXT_KEY
androidx.recyclerview.widget.ItemTouchHelper$Callback$1
androidx.core.view.inputmethod.InputConnectionCompat
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$2
com.bumptech.glide.annotation.GlideExtension
androidx.core.app.NotificationCompat$Style
com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation
androidx.recyclerview.widget.ItemTouchHelper$4
androidx.vectordrawable.graphics.drawable.AndroidResources:
    private void <init>()
    static final int STYLEABLE_VECTOR_DRAWABLE_ALPHA
    static final int STYLEABLE_VECTOR_DRAWABLE_AUTO_MIRRORED
    static final int STYLEABLE_VECTOR_DRAWABLE_HEIGHT
    static final int STYLEABLE_VECTOR_DRAWABLE_NAME
    static final int STYLEABLE_VECTOR_DRAWABLE_TINT
    static final int STYLEABLE_VECTOR_DRAWABLE_TINT_MODE
    static final int STYLEABLE_VECTOR_DRAWABLE_VIEWPORT_HEIGHT
    static final int STYLEABLE_VECTOR_DRAWABLE_VIEWPORT_WIDTH
    static final int STYLEABLE_VECTOR_DRAWABLE_WIDTH
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_NAME
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_PIVOT_X
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_PIVOT_Y
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_ROTATION
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_SCALE_X
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_SCALE_Y
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_TRANSLATE_X
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_TRANSLATE_Y
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_FILL_ALPHA
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_FILL_COLOR
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_NAME
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_PATH_DATA
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_ALPHA
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_COLOR
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_LINE_CAP
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_LINE_JOIN
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_MITER_LIMIT
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_WIDTH
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_END
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_OFFSET
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_START
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_FILLTYPE
    static final int STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH_NAME
    static final int STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH_PATH_DATA
    static final int STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH_FILLTYPE
    static final int STYLEABLE_ANIMATED_VECTOR_DRAWABLE_DRAWABLE
    static final int STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET_ANIMATION
    static final int STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET_NAME
    public static final int STYLEABLE_ANIMATOR_INTERPOLATOR
    public static final int STYLEABLE_ANIMATOR_DURATION
    public static final int STYLEABLE_ANIMATOR_START_OFFSET
    public static final int STYLEABLE_ANIMATOR_REPEAT_COUNT
    public static final int STYLEABLE_ANIMATOR_REPEAT_MODE
    public static final int STYLEABLE_ANIMATOR_VALUE_FROM
    public static final int STYLEABLE_ANIMATOR_VALUE_TO
    public static final int STYLEABLE_ANIMATOR_VALUE_TYPE
    public static final int STYLEABLE_ANIMATOR_SET_ORDERING
    public static final int STYLEABLE_PROPERTY_VALUES_HOLDER_VALUE_FROM
    public static final int STYLEABLE_PROPERTY_VALUES_HOLDER_VALUE_TO
    public static final int STYLEABLE_PROPERTY_VALUES_HOLDER_VALUE_TYPE
    public static final int STYLEABLE_PROPERTY_VALUES_HOLDER_PROPERTY_NAME
    public static final int STYLEABLE_KEYFRAME_VALUE
    public static final int STYLEABLE_KEYFRAME_INTERPOLATOR
    public static final int STYLEABLE_KEYFRAME_VALUE_TYPE
    public static final int STYLEABLE_KEYFRAME_FRACTION
    public static final int STYLEABLE_PROPERTY_ANIMATOR_PROPERTY_NAME
    public static final int STYLEABLE_PROPERTY_ANIMATOR_PATH_DATA
    public static final int STYLEABLE_PROPERTY_ANIMATOR_PROPERTY_X_NAME
    public static final int STYLEABLE_PROPERTY_ANIMATOR_PROPERTY_Y_NAME
    public static final int STYLEABLE_PATH_INTERPOLATOR_CONTROL_X_1
    public static final int STYLEABLE_PATH_INTERPOLATOR_CONTROL_Y_1
    public static final int STYLEABLE_PATH_INTERPOLATOR_CONTROL_X_2
    public static final int STYLEABLE_PATH_INTERPOLATOR_CONTROL_Y_2
    public static final int STYLEABLE_PATH_INTERPOLATOR_PATH_DATA
    public static final int FAST_OUT_LINEAR_IN
    public static final int FAST_OUT_SLOW_IN
    public static final int LINEAR_OUT_SLOW_IN
com.bumptech.glide.request.transition.ViewAnimationFactory
com.google.android.material.appbar.ViewOffsetHelper:
    public int getLeftAndRightOffset()
    public int getLayoutTop()
    public int getLayoutLeft()
    public void setVerticalOffsetEnabled(boolean)
    public boolean isVerticalOffsetEnabled()
    public void setHorizontalOffsetEnabled(boolean)
    public boolean isHorizontalOffsetEnabled()
com.google.android.material.bottomappbar.BottomAppBar:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    static synthetic int access$000(com.google.android.material.bottomappbar.BottomAppBar)
    static synthetic boolean access$100(com.google.android.material.bottomappbar.BottomAppBar)
    static synthetic void access$200(com.google.android.material.bottomappbar.BottomAppBar,int,boolean)
    static synthetic com.google.android.material.shape.MaterialShapeDrawable access$300(com.google.android.material.bottomappbar.BottomAppBar)
    static synthetic com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment access$400(com.google.android.material.bottomappbar.BottomAppBar)
    static synthetic int access$502(com.google.android.material.bottomappbar.BottomAppBar,int)
    public void performHide()
    public void performShow()
    public void replaceMenu(int)
    void addAnimationListener(com.google.android.material.bottomappbar.BottomAppBar$AnimationListener)
    void removeAnimationListener(com.google.android.material.bottomappbar.BottomAppBar$AnimationListener)
    private static final long ANIMATION_DURATION
    public static final int FAB_ALIGNMENT_MODE_CENTER
    public static final int FAB_ALIGNMENT_MODE_END
    public static final int FAB_ANIMATION_MODE_SCALE
    public static final int FAB_ANIMATION_MODE_SLIDE
androidx.core.R$layout
com.bumptech.glide.R$style
com.google.android.material.behavior.HideBottomViewOnScrollBehavior:
    protected static final int ENTER_ANIMATION_DURATION
    protected static final int EXIT_ANIMATION_DURATION
    private static final int STATE_SCROLLED_DOWN
    private static final int STATE_SCROLLED_UP
androidx.lifecycle.Transformations$2
androidx.transition.ViewGroupUtilsApi14:
    private void <init>()
    private static final java.lang.String TAG
    private static final int LAYOUT_TRANSITION_CHANGING
androidx.core.os.EnvironmentCompat
org.greenrobot.greendao.rx.RxUtils
com.bumptech.glide.load.engine.prefill.BitmapPreFillRunner$Clock
org.greenrobot.greendao.rx.RxTransaction$1
com.eptonic.photocollage.ui.quickAction.QuickAction:
    public void <init>(android.content.Context)
    private void showArrow(int,int)
    public com.eptonic.photocollage.ui.quickAction.QuickActionItem getActionItem(int)
    public void setPopupBackgroundColor(int)
    public void setPopupBackground(android.graphics.drawable.Drawable)
    private int mInsertPos
    public static final int ANIM_AUTO
    public static final int ANIM_GROW_FROM_CENTER
    public static final int ANIM_GROW_FROM_LEFT
    public static final int ANIM_GROW_FROM_RIGHT
    public static final int ANIM_REFLECT
    public static final int HORIZONTAL
    public static final int VERTICAL
com.yd.photoeditor.view.MultiTouchHandler:
    public void setMatrices(android.graphics.Matrix,android.graphics.Matrix)
    public void reset()
    public void setMaxPositionOffset(float)
    public void setEnableZoom(boolean)
    public void setEnableTranslateX(boolean)
    public void setEnableTranslateY(boolean)
    private static final int DRAG
    private static final int NONE
    private static final int ZOOM
androidx.transition.Slide$GravityFlag
androidx.core.widget.TintableCompoundDrawablesView:
    public abstract android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
    public abstract android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.google.android.material.internal.TextDrawableHelper:
    public boolean isTextWidthDirty()
androidx.viewpager.widget.ViewPager$SavedState$1
androidx.appcompat.app.ToolbarActionBar$1
androidx.recyclerview.widget.LinearSnapHelper:
    private static final float INVALID_DISTANCE
com.google.android.material.appbar.CollapsingToolbarLayout$1
androidx.vectordrawable.R$styleable
androidx.appcompat.view.ContextThemeWrapper:
    public void applyOverrideConfiguration(android.content.res.Configuration)
androidx.drawerlayout.R$id
androidx.viewpager2.widget.ViewPager2$PagerSnapHelperImpl
org.greenrobot.greendao.rx.RxDao$21
com.eptonic.photocollage.ui.view.frame.FrameImageView:
    private void drawCenterLine(android.graphics.Canvas)
    public void saveInstanceState(android.os.Bundle)
    public void init(float,float,float)
    public void clearMainImage()
androidx.recyclerview.widget.AsyncListUtil$DataCallback
com.google.android.material.appbar.HeaderBehavior:
    private static final int INVALID_POINTER
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl
androidx.loader.content.ModernAsyncTask$4
androidx.recyclerview.widget.AdapterListUpdateCallback
androidx.viewpager.widget.ViewPager$PageTransformer
com.google.android.material.color.MaterialColors:
    public void <init>()
    public static int layer(android.view.View,int,int)
    public static int layer(android.view.View,int,int,float)
    public static final float ALPHA_FULL
    public static final float ALPHA_MEDIUM
    public static final float ALPHA_DISABLED
    public static final float ALPHA_LOW
    public static final float ALPHA_DISABLED_LOW
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener
com.eptonic.photocollage.ui.next.s.xx.xxx.yy.cc.activity.GalleryActivity:
    private static final java.lang.String TAG
    public static final java.lang.String MAX_IMAGE_COUNT
    public static final java.lang.String IS_MAX_IMAGE_COUNT
    public static final java.lang.String SELECT_ITEMS
androidx.transition.Styleable$VisibilityTransition
com.eptonic.photocollage.util.ImageUtils:
    public void <init>()
    public static void saveAndShare(android.content.Context,android.graphics.Bitmap)
    public static float dpFromPx(android.content.Context,float)
    public static long getUsedMemorySize()
    public static void recycleView(android.view.View)
    public static void recycleImageView(android.widget.ImageView)
    public static long getSizeInBytes(android.graphics.Bitmap)
    public static android.graphics.Bitmap loadBitmapFromView(android.view.View)
    public static void takeScreen(android.view.View,java.lang.String)
    public static void saveBitmap(android.graphics.Bitmap,java.lang.String)
    public static int getImageOrientation(android.content.Context,java.lang.String)
    private static int getOrientationFromExif(java.lang.String)
    private static int getOrientationFromMediaStore(android.content.Context,android.net.Uri)
    public static android.graphics.Bitmap fastblur(android.graphics.Bitmap,int)
    public static android.graphics.Bitmap getCircularArea(android.graphics.Bitmap,int,int,int)
    public static android.graphics.Bitmap focus(android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Rect,boolean)
    public static android.graphics.Bitmap getCircularBitmap(android.graphics.Bitmap)
    public static final java.lang.String FOLDER
    private static final float MIN_OUTPUT_IMAGE_SIZE
androidx.appcompat.resources.R$string
androidx.collection.SparseArrayCompat:
    public void delete(int)
    public boolean remove(int,java.lang.Object)
    public void removeAt(int)
    public void removeAtRange(int,int)
    public java.lang.Object replace(int,java.lang.Object)
    public boolean replace(int,java.lang.Object,java.lang.Object)
    public void putAll(androidx.collection.SparseArrayCompat)
    public java.lang.Object putIfAbsent(int,java.lang.Object)
    public boolean isEmpty()
    public void setValueAt(int,java.lang.Object)
    public int indexOfKey(int)
    public boolean containsKey(int)
    public boolean containsValue(java.lang.Object)
androidx.appcompat.R$id:
    private void <init>()
androidx.recyclerview.widget.AsyncListDiffer$1
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments:
    public float getProgress()
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks:
    public void <init>()
androidx.cardview.widget.RoundRectDrawable:
    void <init>(android.content.res.ColorStateList,float)
org.greenrobot.greendao.rx.RxDao$20
androidx.lifecycle.ComputableLiveData$2
com.bumptech.glide.load.engine.prefill.PreFillType
org.intellij.lang.annotations.JdkConstants$AdjustableOrientation
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation$1
androidx.core.util.DebugUtils:
    private void <init>()
androidx.core.app.NotificationCompat
com.bumptech.glide.load.model.ModelCache:
    public void <init>()
    public void clear()
    private static final int DEFAULT_SIZE
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager:
    boolean isListening()
org.greenrobot.greendao.query.WhereCondition$AbstractCondition
com.bumptech.glide.load.engine.cache.MemorySizeCalculator:
    private static final java.lang.String TAG
    static final int BYTES_PER_ARGB_8888_PIXEL
    private static final int LOW_MEMORY_BYTE_ARRAY_POOL_DIVISOR
com.google.android.material.checkbox.MaterialCheckBox:
    public void <init>(android.content.Context)
    public boolean isUseMaterialThemeColors()
com.yd.photoeditor.imageprocessing.filter.ImageRender$5
org.greenrobot.greendao.query.CountQuery
com.bumptech.glide.request.target.Target:
    public static final int SIZE_ORIGINAL
com.bumptech.glide.load.engine.SourceGenerator:
    private static final java.lang.String TAG
com.google.android.material.appbar.ViewOffsetBehavior:
    public boolean setLeftAndRightOffset(int)
    public int getLeftAndRightOffset()
    public void setVerticalOffsetEnabled(boolean)
    public boolean isVerticalOffsetEnabled()
    public void setHorizontalOffsetEnabled(boolean)
    public boolean isHorizontalOffsetEnabled()
androidx.transition.Slide$CalculateSlideHorizontal
com.google.android.material.datepicker.MaterialDatePicker$4
androidx.collection.LongSparseArray:
    public boolean remove(long,java.lang.Object)
    public java.lang.Object replace(long,java.lang.Object)
    public boolean replace(long,java.lang.Object,java.lang.Object)
    public void putAll(androidx.collection.LongSparseArray)
    public java.lang.Object putIfAbsent(long,java.lang.Object)
    public boolean isEmpty()
    public void setValueAt(int,java.lang.Object)
    public int indexOfValue(java.lang.Object)
    public boolean containsKey(long)
    public boolean containsValue(java.lang.Object)
androidx.recyclerview.widget.OrientationHelper$2:
    public void offsetChild(android.view.View,int)
com.bumptech.glide.load.resource.bitmap.TransformationUtils$1
androidx.drawerlayout.widget.DrawerLayout$DrawerListener
androidx.core.view.NestedScrollingChild2:
    public abstract boolean startNestedScroll(int,int)
    public abstract void stopNestedScroll(int)
    public abstract boolean hasNestedScrollingParent(int)
    public abstract boolean dispatchNestedScroll(int,int,int,int,int[],int)
    public abstract boolean dispatchNestedPreScroll(int,int,int[],int[],int)
com.google.android.material.internal.VisibilityAwareImageButton:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.annotation.InterpolatorRes
org.greenrobot.greendao.database.DatabaseOpenHelper:
    public void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int,android.database.DatabaseErrorHandler)
    private org.greenrobot.greendao.database.DatabaseOpenHelper$EncryptedHelper checkEncryptedHelper()
    public void setLoadSQLCipherNativeLibs(boolean)
    public org.greenrobot.greendao.database.Database getWritableDb()
    public org.greenrobot.greendao.database.Database getReadableDb()
    public org.greenrobot.greendao.database.Database getEncryptedWritableDb(java.lang.String)
    public org.greenrobot.greendao.database.Database getEncryptedWritableDb(char[])
    public org.greenrobot.greendao.database.Database getEncryptedReadableDb(java.lang.String)
    public org.greenrobot.greendao.database.Database getEncryptedReadableDb(char[])
    private org.greenrobot.greendao.database.DatabaseOpenHelper$EncryptedHelper encryptedHelper
androidx.core.app.RemoteInput
androidx.core.view.ActionProvider$SubUiVisibilityListener:
    public abstract void onSubUiVisibilityChanged(boolean)
androidx.core.app.NotificationCompatBuilder
com.yd.photoeditor.adapter.CustomItemAdapter:
    public boolean isShaking()
    public void setShaking(boolean)
androidx.appcompat.view.menu.MenuAdapter:
    public boolean getForceShowIcon()
androidx.annotation.RestrictTo
androidx.appcompat.R$drawable:
    private void <init>()
com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener
com.yd.photoeditor.imageprocessing.filter.processing.VVVV
androidx.interpolator.R
androidx.transition.Slide$5
com.yd.photoeditor.imageprocessing.filter.processing.VVVVVVVV
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState:
    int[] mCachedThemeAttrs
com.yd.photoeditor.imageprocessing.filter.effect.F4
com.google.android.material.snackbar.SnackbarContentLayout:
    void updateActionTextColorAlphaIfNeeded(float)
    public void animateContentIn(int,int)
    public void animateContentOut(int,int)
com.bumptech.glide.request.target.FixedSizeDrawable
androidx.loader.content.Loader$ForceLoadContentObserver
android.support.v4.os.IResultReceiver$Stub$Proxy
androidx.transition.R$styleable
androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider
com.google.android.material.bottomsheet.BottomSheetDialog$3
com.bumptech.glide.request.target.CustomViewTarget$1
androidx.appcompat.view.SupportMenuInflater:
    static final java.lang.String LOG_TAG
    private static final java.lang.String XML_MENU
    private static final java.lang.String XML_GROUP
    private static final java.lang.String XML_ITEM
    static final int NO_ID
androidx.drawerlayout.R$drawable
androidx.viewpager2.widget.ViewPager2$4
androidx.appcompat.widget.TintTypedArray:
    public int length()
    public int getIndexCount()
    public int getIndex(int)
    public android.content.res.Resources getResources()
    public java.lang.String getNonResourceString(int)
    public int getLayoutDimension(int,java.lang.String)
    public float getFraction(int,int,int,float)
    public boolean getValue(int,android.util.TypedValue)
    public int getType(int)
    public android.util.TypedValue peekValue(int)
    public java.lang.String getPositionDescription()
    public int getChangingConfigurations()
com.eptonic.photocollage.ui.view.sticker.BitmapStickerIcon:
    public void setIconRadius(float)
    public float getIconExtraRadius()
    public void setIconExtraRadius(float)
    public com.eptonic.photocollage.ui.view.sticker.StickerIconEvent getIconEvent()
    public void setPosition(int)
    public static final float DEFAULT_ICON_RADIUS
    public static final float DEFAULT_ICON_EXTRA_RADIUS
    public static final int LEFT_TOP
    public static final int RIGHT_TOP
    public static final int LEFT_BOTTOM
    public static final int RIGHT_BOTOM
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1
org.greenrobot.greendao.annotation.Generated
com.eptonic.photocollage.resEncryption.AppExtResManager:
    public static void resTest(android.content.res.Resources,android.content.Context)
    private static void getMeta(android.content.Context,java.lang.String)
    private void insertResManager()
    private android.content.res.Resources testNewResNewAss(android.util.DisplayMetrics,android.content.res.Configuration)
    private static void copy(java.io.InputStream,java.io.OutputStream)
    private void extractFile(android.content.Context)
    public void restTest1()
    public static final java.lang.String TAG
    public static final java.lang.String extFileName
com.google.android.material.snackbar.BaseTransientBottomBar$6$1
androidx.appcompat.view.menu.MenuDialogHelper:
    public void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.coordinatorlayout.R$layout
androidx.transition.Scene:
    public static androidx.transition.Scene getSceneForLayout(android.view.ViewGroup,int,android.content.Context)
    public void <init>(android.view.ViewGroup)
    private void <init>(android.view.ViewGroup,int,android.content.Context)
    public void <init>(android.view.ViewGroup,android.view.View)
    public android.view.ViewGroup getSceneRoot()
    public void enter()
    public void setEnterAction(java.lang.Runnable)
    public void setExitAction(java.lang.Runnable)
    boolean isCreatedFromLayoutResource()
    private android.content.Context mContext
    private int mLayoutId
    private android.view.View mLayout
    private java.lang.Runnable mEnterAction
androidx.customview.R
com.bumptech.glide.request.target.CustomViewTarget
androidx.core.app.NotificationCompat$Action$SemanticAction
androidx.appcompat.widget.ActivityChooserModel$ActivityChooserModelClient
androidx.vectordrawable.R$dimen
androidx.annotation.RawRes
androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate
com.eptonic.photocollage.R$animator
androidx.fragment.R$dimen
androidx.annotation.VisibleForTesting
com.bumptech.glide.TransitionOptions:
    private com.bumptech.glide.TransitionOptions self()
    public final com.bumptech.glide.TransitionOptions dontTransition()
    public final com.bumptech.glide.TransitionOptions transition(int)
    public final com.bumptech.glide.TransitionOptions transition(com.bumptech.glide.request.transition.ViewPropertyTransition$Animator)
    public final com.bumptech.glide.TransitionOptions transition(com.bumptech.glide.request.transition.TransitionFactory)
androidx.core.util.Consumer
androidx.lifecycle.Lifecycling:
    static androidx.lifecycle.GenericLifecycleObserver getCallback(java.lang.Object)
    private void <init>()
    private static final int REFLECTIVE_CALLBACK
    private static final int GENERATED_CALLBACK
androidx.appcompat.app.TwilightCalculator:
    public static final int DAY
    public static final int NIGHT
    private static final float DEGREES_TO_RADIANS
    private static final float J0
    private static final float ALTIDUTE_CORRECTION_CIVIL_TWILIGHT
    private static final float C1
    private static final float C2
    private static final float C3
    private static final float OBLIQUITY
    private static final long UTC_2000
com.bumptech.glide.disklrucache.StrictLineReader:
    private static final byte CR
    private static final byte LF
androidx.appcompat.graphics.drawable.StateListDrawable:
    void <init>()
    private void updateStateFromTypedArray(android.content.res.TypedArray)
    private void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public void addState(int[],android.graphics.drawable.Drawable)
    public void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    androidx.appcompat.graphics.drawable.StateListDrawable$StateListState getStateListState()
    int getStateCount()
    int[] getStateSet(int)
    android.graphics.drawable.Drawable getStateDrawable(int)
    int getStateDrawableIndex(int[])
    void clearMutated()
    private static final java.lang.String TAG
    private static final boolean DEBUG
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback$1
androidx.core.view.inputmethod.InputContentInfoCompat
com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory:
    public void <init>(android.content.Context,long)
androidx.core.app.NotificationCompat$BigPictureStyle
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl
androidx.transition.Transition$ArrayListManager
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuTextItem
org.greenrobot.greendao.annotation.apihint.Beta
androidx.activity.R
org.greenrobot.greendao.annotation.ToOne
com.yd.photoeditor.R$attr
com.yd.photoeditor.actions.PackageAction$1
com.google.android.material.tabs.TabLayout$PagerAdapterObserver
androidx.core.app.NotificationCompat$BigTextStyle
androidx.transition.TransitionListenerAdapter:
    public void onTransitionEnd(androidx.transition.Transition)
androidx.core.app.ActivityCompat$PermissionCompatDelegate:
    public abstract boolean requestPermissions(android.app.Activity,java.lang.String[],int)
com.eptonic.photocollage.ui.next.s.xx.xxx.yy.cc.activity.PCBaseTemplateDetailActivity:
    public boolean isShowingAllTemplates()
    public void onBackgroundColorButtonClick()
    public void onBackgroundPhotoButtonClick()
    public void onStickerButtonClick()
    public float calculateScaleRatio(int,int)
    public void onTextButtonClick()
    public void resultAddTextItem(java.lang.String,int,java.lang.String)
    public void resultEditTextItem(java.lang.String,int,java.lang.String)
    public void pickSticker()
    public com.eptonic.photocollage.ui.quickAction.QuickAction mTextQuickAction
androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider$3
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl
androidx.annotation.AnyThread
com.yd.photoeditor.BuildConfig
androidx.core.content.FileProvider$PathStrategy
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate
androidx.core.widget.ImageViewCompat:
    private void <init>()
androidx.appcompat.widget.AppCompatTextHelper:
    private static final int TEXT_FONT_WEIGHT_UNSPECIFIED
    private static final int SANS
    private static final int SERIF
    private static final int MONOSPACE
androidx.transition.Styleable$Transition
androidx.annotation.RestrictTo$Scope
androidx.core.widget.ContentLoadingProgressBar
com.google.android.material.internal.ViewUtils$1
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath:
    public boolean canApplyTheme()
    public void applyTheme(android.content.res.Resources$Theme)
androidx.appcompat.widget.TooltipCompatHandler:
    private static final java.lang.String TAG
    private static final long LONG_CLICK_HIDE_TIMEOUT_MS
    private static final long HOVER_HIDE_TIMEOUT_MS
    private static final long HOVER_HIDE_TIMEOUT_SHORT_MS
androidx.core.app.NotificationCompatJellybean
androidx.constraintlayout.solver.widgets.Analyzer:
    private void <init>()
androidx.constraintlayout.solver.Pools
androidx.appcompat.graphics.drawable.DrawableContainer:
    public void setEnterFadeDuration(int)
    public void setExitFadeDuration(int)
    public boolean isStateful()
    void setCurrentIndex(int)
    void clearMutated()
    private static final boolean DEBUG
    private static final java.lang.String TAG
    private static final boolean DEFAULT_DITHER
androidx.fragment.R$color
androidx.appcompat.widget.ThemedSpinnerAdapter$Helper
androidx.transition.Styleable$TransitionManager
androidx.core.app.JobIntentService
androidx.fragment.app.FragmentManagerImpl$PopBackStackState
com.google.android.material.snackbar.BaseTransientBottomBar$ContentViewCallback
androidx.appcompat.widget.ActivityChooserView$1
androidx.recyclerview.widget.BatchingListUpdateCallback
com.yd.photoeditor.imageprocessing.filter.blend.P2
androidx.core.os.HandlerCompat
androidx.constraintlayout.solver.widgets.ResolutionNode:
    public void invalidateAnchors()
    public void remove(androidx.constraintlayout.solver.widgets.ResolutionDimension)
    public static final int UNRESOLVED
    public static final int RESOLVED
    public static final int REMOVED
com.bumptech.glide.load.resource.bitmap.CircleCrop
com.bumptech.glide.gifdecoder.GifDecoder:
    public abstract int getWidth()
    public abstract int getHeight()
    public abstract int getStatus()
    public abstract int getDelay(int)
    public abstract int getLoopCount()
    public abstract int getNetscapeLoopCount()
    public abstract int getTotalIterationCount()
    public abstract int read(java.io.InputStream,int)
    public abstract void setData(com.bumptech.glide.gifdecoder.GifHeader,byte[])
    public abstract void setData(com.bumptech.glide.gifdecoder.GifHeader,java.nio.ByteBuffer)
    public abstract void setData(com.bumptech.glide.gifdecoder.GifHeader,java.nio.ByteBuffer,int)
    public abstract int read(byte[])
    public static final int STATUS_OK
    public static final int STATUS_FORMAT_ERROR
    public static final int STATUS_OPEN_ERROR
    public static final int STATUS_PARTIAL_DECODE
    public static final int TOTAL_ITERATION_COUNT_FOREVER
com.yd.photoeditor.R$anim
com.bumptech.glide.manager.RequestTracker:
    void addRequest(com.bumptech.glide.request.Request)
    public boolean isPaused()
    private static final java.lang.String TAG
org.intellij.lang.annotations.JdkConstants$FlowLayoutAlignment
com.eptonic.photocollage.presenter.listener.DoubleClickDetector:
    public void reset()
    private static final long DOUBLE_CLICK_TIME_INTERVAL
androidx.loader.R$id
com.yd.photoeditor.view.FingerPaintView$1
androidx.viewpager.widget.ViewPager$2
androidx.fragment.R$attr
com.bumptech.glide.util.ViewPreloadSizeProvider$SizeViewTarget
androidx.core.view.accessibility.AccessibilityClickableSpanCompat:
    public static final java.lang.String SPAN_ID
androidx.customview.widget.ViewDragHelper:
    public void setMinVelocity(float)
    public float getMinVelocity()
    public int getViewDragState()
    public void setEdgeTrackingEnabled(int)
    public int getEdgeSize()
    public android.view.View getCapturedView()
    public int getActivePointerId()
    public void abort()
    public void flingCapturedView(int,int,int,int)
    protected boolean canScroll(android.view.View,boolean,int,int,int,int)
    public boolean checkTouchSlop(int)
    public boolean checkTouchSlop(int,int)
    public boolean isEdgeTouched(int)
    public boolean isEdgeTouched(int,int)
    private static final java.lang.String TAG
    public static final int INVALID_POINTER
    public static final int STATE_IDLE
    public static final int STATE_DRAGGING
    public static final int STATE_SETTLING
    public static final int EDGE_LEFT
    public static final int EDGE_RIGHT
    public static final int EDGE_TOP
    public static final int EDGE_BOTTOM
    public static final int EDGE_ALL
    public static final int DIRECTION_HORIZONTAL
    public static final int DIRECTION_VERTICAL
    public static final int DIRECTION_ALL
    private static final int EDGE_SIZE
    private static final int BASE_SETTLE_DURATION
    private static final int MAX_SETTLE_DURATION
androidx.cardview.widget.RoundRectDrawableWithShadow:
    void <init>(android.content.res.Resources,android.content.res.ColorStateList,float,float,float)
    private static final float SHADOW_MULTIPLIER
androidx.transition.R$string
androidx.customview.R$style
androidx.appcompat.widget.LinearLayoutCompat:
    public boolean isBaselineAligned()
    public boolean isMeasureWithLargestChildEnabled()
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int SHOW_DIVIDER_NONE
    public static final int SHOW_DIVIDER_BEGINNING
    public static final int SHOW_DIVIDER_MIDDLE
    public static final int SHOW_DIVIDER_END
    private static final int VERTICAL_GRAVITY_COUNT
    private static final int INDEX_CENTER_VERTICAL
    private static final int INDEX_TOP
    private static final int INDEX_BOTTOM
    private static final int INDEX_FILL
    private static final java.lang.String ACCESSIBILITY_CLASS_NAME
org.greenrobot.greendao.rx.RxTransaction$2
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat:
    public static androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat create(android.content.Context,int,android.content.res.Resources$Theme)
    public void addState(int[],android.graphics.drawable.Drawable,int)
    public void addTransition(int,int,android.graphics.drawable.Drawable,boolean)
    void clearMutated()
    public synthetic bridge void addState(int[],android.graphics.drawable.Drawable)
    public synthetic bridge void setExitFadeDuration(int)
    public synthetic bridge void setEnterFadeDuration(int)
    private static final java.lang.String ELEMENT_TRANSITION
    private static final java.lang.String ELEMENT_ITEM
    private static final java.lang.String TRANSITION_MISSING_DRAWABLE_ERROR
    private static final java.lang.String TRANSITION_MISSING_FROM_TO_ID
    private static final java.lang.String ITEM_MISSING_DRAWABLE_ERROR
com.eptonic.photocollage.ui.mutitouchh.MultiTouchEntity:
    public boolean containsPoint(float,float)
    public boolean grabAreaContainsPoint(float,float)
    public void reload(android.content.Context)
    public float getMinX()
    public float getMaxX()
    public float getMinY()
    public float getMaxY()
    public void setIsGrabAreaSelected(boolean)
    public boolean isGrabAreaSelected()
    protected static final int GRAB_AREA_SIZE
    private static final int UI_MODE_ANISOTROPIC_SCALE
    private static final int UI_MODE_ROTATE
androidx.appcompat.app.ActionBarDrawerToggle
com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool:
    public abstract long getMaxSize()
    public abstract void setSizeMultiplier(float)
androidx.viewpager2.widget.ViewPager2$RecyclerViewImpl
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams:
    public void setAnchorId(int)
    void invalidateAnchor()
androidx.cardview.R$styleable
androidx.collection.ContainerHelpers:
    private void <init>()
com.yd.photoeditor.imageprocessing.filter.colour.P3:
    public void <init>()
    public static final java.lang.String AAAA
com.bumptech.glide.load.model.UriLoader$AssetFileDescriptorFactory:
    public void teardown()
com.google.android.material.internal.NavigationMenuPresenter$SubheaderViewHolder
androidx.core.R$styleable:
    private void <init>()
com.google.android.material.textfield.TextInputLayout$EndIconMode
androidx.core.view.ViewCompat$ScrollAxis
androidx.annotation.HalfFloat
org.greenrobot.greendao.rx.RxDao$15
androidx.viewpager.widget.PagerTabStrip
androidx.annotation.LayoutRes
com.google.android.material.datepicker.MaterialDatePicker$Builder
com.google.android.material.canvas.CanvasCompat:
    private void <init>()
    public static int saveLayerAlpha(android.graphics.Canvas,android.graphics.RectF,int)
androidx.core.provider.FontsContractCompat$4$3
com.bumptech.glide.load.resource.transcode.BitmapDrawableTranscoder:
    public void <init>(android.content.Context)
    public void <init>(android.content.res.Resources,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)
androidx.core.app.RemoteActionCompat:
    public void <init>(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)
    public void <init>(androidx.core.app.RemoteActionCompat)
    public static androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)
    public void setEnabled(boolean)
    public boolean isEnabled()
    public void setShouldShowIcon(boolean)
    public boolean shouldShowIcon()
    public androidx.core.graphics.drawable.IconCompat getIcon()
    public java.lang.CharSequence getTitle()
    public java.lang.CharSequence getContentDescription()
    public android.app.PendingIntent getActionIntent()
    public android.app.RemoteAction toRemoteAction()
androidx.core.graphics.BitmapCompat
org.greenrobot.greendao.query.Join:
    public void <init>(java.lang.String,org.greenrobot.greendao.Property,org.greenrobot.greendao.AbstractDao,org.greenrobot.greendao.Property,java.lang.String)
    public varargs org.greenrobot.greendao.query.Join where(org.greenrobot.greendao.query.WhereCondition,org.greenrobot.greendao.query.WhereCondition[])
    public varargs org.greenrobot.greendao.query.Join whereOr(org.greenrobot.greendao.query.WhereCondition,org.greenrobot.greendao.query.WhereCondition,org.greenrobot.greendao.query.WhereCondition[])
    public varargs org.greenrobot.greendao.query.WhereCondition or(org.greenrobot.greendao.query.WhereCondition,org.greenrobot.greendao.query.WhereCondition,org.greenrobot.greendao.query.WhereCondition[])
    public varargs org.greenrobot.greendao.query.WhereCondition and(org.greenrobot.greendao.query.WhereCondition,org.greenrobot.greendao.query.WhereCondition,org.greenrobot.greendao.query.WhereCondition[])
    public java.lang.String getTablePrefix()
androidx.core.provider.SelfDestructiveThread:
    public boolean isRunning()
    public int getGeneration()
    private static final int MSG_INVOKE_RUNNABLE
    private static final int MSG_DESTRUCTION
androidx.fragment.R$string
com.google.android.material.snackbar.BaseTransientBottomBar$15
com.bumptech.glide.request.transition.ViewTransition
com.bumptech.glide.load.model.StringLoader$AssetFileDescriptorFactory:
    public void teardown()
androidx.vectordrawable.R$style
com.bumptech.glide.load.Key:
    public static final java.lang.String STRING_CHARSET_NAME
androidx.annotation.UiThread
androidx.appcompat.app.TwilightManager:
    static void setInstance(androidx.appcompat.app.TwilightManager)
    private static final java.lang.String TAG
    private static final int SUNRISE
    private static final int SUNSET
com.eptonic.photocollage.R$bool
androidx.transition.Slide
androidx.transition.ChangeBounds:
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void setResizeClip(boolean)
    public boolean getResizeClip()
    private static final java.lang.String PROPNAME_BOUNDS
    private static final java.lang.String PROPNAME_CLIP
    private static final java.lang.String PROPNAME_PARENT
    private static final java.lang.String PROPNAME_WINDOW_X
    private static final java.lang.String PROPNAME_WINDOW_Y
com.eptonic.photocollage.adapter.PhotosAdapter:
    public void <init>(android.content.Context,int)
    public void <init>(android.content.Context,int,int)
    public void <init>(android.content.Context,int,java.lang.String[])
    public void <init>(android.content.Context,int,int,java.lang.String[])
    public void <init>(android.content.Context,int,java.util.List)
    public void <init>(android.content.Context,int,int,java.util.List)
    public void setImageFitCenter(boolean)
com.bumptech.glide.load.model.AssetUriLoader$StreamFactory:
    public void teardown()
androidx.appcompat.widget.VectorEnabledTintResources:
    public static void setCompatVectorFromResourcesEnabled(boolean)
    public static final int MAX_SDK_WHERE_REQUIRED
com.yd.photoeditor.R$drawable:
    private void <init>()
androidx.viewpager2.R$dimen
com.eptonic.photocollage.ui.quickAction.QuickActionItem:
    public void <init>()
    public void <init>(android.graphics.drawable.Drawable)
    public void <init>(int,android.graphics.drawable.Drawable)
    public void setTitle(java.lang.String)
    public java.lang.String getTitle()
    public void setIcon(android.graphics.drawable.Drawable)
    public android.graphics.drawable.Drawable getIcon()
    public void setActionId(int)
    public int getActionId()
    public void setSticky(boolean)
    public boolean isSticky()
    public void setSelected(boolean)
    public boolean isSelected()
    public void setThumb(android.graphics.Bitmap)
    public android.graphics.Bitmap getThumb()
    private boolean selected
    private boolean sticky
    private android.graphics.Bitmap thumb
androidx.cursoradapter.widget.ResourceCursorAdapter:
    public void <init>(android.content.Context,int,android.database.Cursor)
    public void <init>(android.content.Context,int,android.database.Cursor,int)
    public void setViewResource(int)
    public void setDropDownViewResource(int)
androidx.constraintlayout.solver.widgets.Barrier:
    public boolean allowsGoneWidget()
    public static final int LEFT
    public static final int RIGHT
    public static final int TOP
    public static final int BOTTOM
com.eptonic.photocollage.ui.view.frame.TwoFrameImage:
    public void <init>()
org.greenrobot.greendao.query.CountQuery$QueryData
com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource:
    public static com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource obtain(android.content.Context,android.graphics.Bitmap)
    public static com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource obtain(android.content.res.Resources,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap)
androidx.viewpager.widget.ViewPager$OnAdapterChangeListener
org.greenrobot.greendao.database.Database:
    public abstract boolean inTransaction()
    public abstract void execSQL(java.lang.String,java.lang.Object[])
    public abstract boolean isOpen()
    public abstract void close()
androidx.arch.core.executor.ArchTaskExecutor:
    public static java.util.concurrent.Executor getMainThreadExecutor()
    public static java.util.concurrent.Executor getIOThreadExecutor()
    public void setDelegate(androidx.arch.core.executor.TaskExecutor)
com.google.android.material.bottomnavigation.BottomNavigationView$1
androidx.annotation.InspectableProperty
org.greenrobot.greendao.AbstractDao:
    public void <init>(org.greenrobot.greendao.internal.DaoConfig)
    private void executeInsertInTx(org.greenrobot.greendao.database.DatabaseStatement,java.lang.Iterable,boolean)
    private void deleteByKeyInsideSynchronized(java.lang.Object,org.greenrobot.greendao.database.DatabaseStatement)
    private void deleteInTxInternal(java.lang.Iterable,java.lang.Iterable)
    public org.greenrobot.greendao.AbstractDaoSession getSession()
    org.greenrobot.greendao.internal.TableStatements getStatements()
    public org.greenrobot.greendao.Property[] getProperties()
    public org.greenrobot.greendao.Property getPkProperty()
    public java.lang.String[] getPkColumns()
    public java.lang.String[] getNonPkColumns()
    public java.lang.Object load(java.lang.Object)
    public java.lang.Object loadByRowId(long)
    protected java.lang.Object loadUniqueAndCloseCursor(android.database.Cursor)
    protected java.lang.Object loadUnique(android.database.Cursor)
    public java.util.List loadAll()
    public boolean detach(java.lang.Object)
    public void detachAll()
    public void insertInTx(java.lang.Iterable)
    public varargs void insertInTx(java.lang.Object[])
    public void insertInTx(java.lang.Iterable,boolean)
    public void insertOrReplaceInTx(java.lang.Iterable,boolean)
    public void insertOrReplaceInTx(java.lang.Iterable)
    public varargs void insertOrReplaceInTx(java.lang.Object[])
    public long insertWithoutSettingPk(java.lang.Object)
    public long insertOrReplace(java.lang.Object)
    public void save(java.lang.Object)
    public varargs void saveInTx(java.lang.Object[])
    public void saveInTx(java.lang.Iterable)
    protected final java.lang.Object loadCurrentOther(org.greenrobot.greendao.AbstractDao,android.database.Cursor,int)
    public varargs java.util.List queryRaw(java.lang.String,java.lang.String[])
    public varargs org.greenrobot.greendao.query.Query queryRawCreate(java.lang.String,java.lang.Object[])
    public org.greenrobot.greendao.query.Query queryRawCreateListArgs(java.lang.String,java.util.Collection)
    public void deleteAll()
    public void delete(java.lang.Object)
    public void deleteByKey(java.lang.Object)
    public void deleteInTx(java.lang.Iterable)
    public varargs void deleteInTx(java.lang.Object[])
    public void deleteByKeyInTx(java.lang.Iterable)
    public varargs void deleteByKeyInTx(java.lang.Object[])
    public void refresh(java.lang.Object)
    public void update(java.lang.Object)
    protected void updateInsideSynchronized(java.lang.Object,org.greenrobot.greendao.database.DatabaseStatement,boolean)
    protected void updateInsideSynchronized(java.lang.Object,android.database.sqlite.SQLiteStatement,boolean)
    public void updateInTx(java.lang.Iterable)
    public varargs void updateInTx(java.lang.Object[])
    protected void assertSinglePk()
    public long count()
    protected java.lang.Object getKeyVerified(java.lang.Object)
    public org.greenrobot.greendao.rx.RxDao rxPlain()
    public org.greenrobot.greendao.rx.RxDao rx()
    protected abstract void readEntity(android.database.Cursor,java.lang.Object,int)
    protected abstract java.lang.Object getKey(java.lang.Object)
    protected abstract boolean hasKey(java.lang.Object)
    protected abstract boolean isEntityUpdateable()
    private volatile org.greenrobot.greendao.rx.RxDao rxDao
    private volatile org.greenrobot.greendao.rx.RxDao rxDaoPlain
org.greenrobot.greendao.test.AbstractDaoTestLongPk
com.bumptech.glide.R$integer
com.bumptech.glide.request.FutureTarget
com.yd.photoeditor.vv.WindowUtils
com.eptonic.photocollage.R$drawable
androidx.appcompat.widget.DecorToolbar:
    public abstract java.lang.CharSequence getSubtitle()
    public abstract void setSubtitle(java.lang.CharSequence)
    public abstract boolean hasIcon()
    public abstract boolean hasLogo()
    public abstract void setLogo(android.graphics.drawable.Drawable)
    public abstract boolean hasEmbeddedTabs()
    public abstract boolean isTitleTruncated()
    public abstract void setNavigationMode(int)
    public abstract void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener)
    public abstract void setDropdownSelectedPosition(int)
    public abstract int getDropdownSelectedPosition()
    public abstract int getDropdownItemCount()
    public abstract void setCustomView(android.view.View)
    public abstract android.view.View getCustomView()
    public abstract void animateToVisibility(int)
    public abstract void setNavigationIcon(android.graphics.drawable.Drawable)
    public abstract void setNavigationIcon(int)
    public abstract void setNavigationContentDescription(java.lang.CharSequence)
    public abstract void setNavigationContentDescription(int)
    public abstract void setDefaultNavigationContentDescription(int)
    public abstract void setDefaultNavigationIcon(android.graphics.drawable.Drawable)
    public abstract void saveHierarchyState(android.util.SparseArray)
    public abstract void restoreHierarchyState(android.util.SparseArray)
    public abstract void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public abstract int getHeight()
    public abstract int getVisibility()
    public abstract void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
    public abstract android.view.Menu getMenu()
androidx.core.os.LocaleListInterface
androidx.core.widget.ContentLoadingProgressBar$2
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior:
    public void setAutoHideEnabled(boolean)
    public boolean isAutoHideEnabled()
    public void setInternalAutoHideListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)
    private static final boolean AUTO_HIDE_DEFAULT
com.bumptech.glide.load.model.ResourceLoader$FileDescriptorFactory:
    public void teardown()
androidx.transition.ViewUtilsBase:
    public void setAnimationMatrix(android.view.View,android.graphics.Matrix)
    private float[] mMatrixValues
    private static final java.lang.String TAG
    private static final int VISIBILITY_MASK
androidx.appcompat.widget.AppCompatPopupWindow:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.transition.TransitionPropagation:
    public void <init>()
org.greenrobot.greendao.annotation.NotNull
androidx.recyclerview.widget.ChildHelper$Bucket:
    static final int BITS_PER_WORD
    static final long LAST_BIT
androidx.annotation.BinderThread
org.greenrobot.greendao.rx.RxDao$1
com.google.android.material.shape.CutCornerTreatment:
    public void <init>(float)
androidx.recyclerview.widget.PagerSnapHelper$1
androidx.fragment.app.FragmentTabHost$SavedState
com.bumptech.glide.load.model.StreamEncoder:
    private static final java.lang.String TAG
com.google.android.material.appbar.CollapsingToolbarLayout$2
androidx.core.content.pm.ShortcutManagerCompat$1
androidx.core.app.JobIntentService$CompatWorkItem
org.greenrobot.greendao.async.AsyncSession
androidx.core.text.TextDirectionHeuristicsCompat:
    private void <init>()
    private static final int STATE_TRUE
    private static final int STATE_FALSE
    private static final int STATE_UNKNOWN
androidx.annotation.Nullable
androidx.transition.ViewGroupUtils:
    static int getChildDrawingOrder(android.view.ViewGroup,int)
    private void <init>()
    private static java.lang.reflect.Method sGetChildDrawingOrderMethod
    private static boolean sGetChildDrawingOrderMethodFetched
androidx.coordinatorlayout.R$styleable:
    private void <init>()
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver:
    public void onItemRangeChanged(int,int,java.lang.Object)
    public void onItemRangeRemoved(int,int)
    public void onItemRangeMoved(int,int,int)
com.bumptech.glide.request.target.CustomViewTarget$SizeDeterminer$SizeDeterminerLayoutListener
com.google.android.material.badge.BadgeDrawable$BadgeGravity
com.bumptech.glide.load.model.ModelLoaderFactory:
    public abstract void teardown()
androidx.coordinatorlayout.widget.ViewGroupUtils:
    private void <init>()
com.yd.photoeditor.imageprocessing.filter.processing.WWWV
org.intellij.lang.annotations.JdkConstants$TabPlacement
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$1
com.google.android.material.datepicker.DaysOfWeekAdapter:
    private static final int NARROW_FORMAT
androidx.recyclerview.widget.ItemTouchUIUtil
androidx.core.internal.package-info
com.bumptech.glide.load.engine.Engine:
    public void clearDiskCache()
    public void shutdown()
    private static final java.lang.String TAG
    private static final int JOB_POOL_SIZE
com.bumptech.glide.load.engine.cache.ExternalCacheDiskCacheFactory
androidx.annotation.AttrRes
androidx.core.content.pm.ActivityInfoCompat
org.intellij.lang.annotations.MagicConstant
androidx.core.view.GestureDetectorCompat
androidx.transition.PathMotion:
    public void <init>(android.content.Context,android.util.AttributeSet)
androidx.core.app.Person
org.greenrobot.greendao.test.AbstractDaoTestSinglePk
androidx.annotation.ArrayRes
org.greenrobot.greendao.query.LazyList
androidx.annotation.StyleRes
androidx.core.content.MimeTypeFilter
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ShowStrategy
androidx.core.app.NotificationCompat$NotificationVisibility
androidx.transition.TransitionSet:
    public void <init>(android.content.Context,android.util.AttributeSet)
    public int getOrdering()
    public androidx.transition.TransitionSet addTarget(int)
    public androidx.transition.TransitionSet addTarget(java.lang.String)
    public androidx.transition.TransitionSet addTarget(java.lang.Class)
    public androidx.transition.TransitionSet removeTarget(int)
    public androidx.transition.TransitionSet removeTarget(java.lang.Class)
    public androidx.transition.TransitionSet removeTarget(java.lang.String)
    public androidx.transition.Transition excludeTarget(android.view.View,boolean)
    public androidx.transition.Transition excludeTarget(java.lang.String,boolean)
    public androidx.transition.Transition excludeTarget(int,boolean)
    public androidx.transition.Transition excludeTarget(java.lang.Class,boolean)
    public androidx.transition.TransitionSet removeTransition(androidx.transition.Transition)
    void forceToEnd(android.view.ViewGroup)
    androidx.transition.TransitionSet setSceneRoot(android.view.ViewGroup)
    void setCanRemoveViews(boolean)
    synthetic bridge androidx.transition.Transition setSceneRoot(android.view.ViewGroup)
    public synthetic bridge androidx.transition.Transition removeTarget(java.lang.Class)
    public synthetic bridge androidx.transition.Transition removeTarget(java.lang.String)
    public synthetic bridge androidx.transition.Transition removeTarget(int)
    public synthetic bridge androidx.transition.Transition addTarget(java.lang.Class)
    public synthetic bridge androidx.transition.Transition addTarget(java.lang.String)
    public synthetic bridge androidx.transition.Transition addTarget(int)
    private static final int FLAG_CHANGE_INTERPOLATOR
    private static final int FLAG_CHANGE_PROPAGATION
    private static final int FLAG_CHANGE_PATH_MOTION
    private static final int FLAG_CHANGE_EPICENTER
    public static final int ORDERING_TOGETHER
    public static final int ORDERING_SEQUENTIAL
com.bumptech.glide.load.model.StringLoader$FileDescriptorFactory:
    public void teardown()
androidx.recyclerview.widget.MessageThreadUtil$2
com.eptonic.photocollage.R$interpolator
androidx.appcompat.widget.ActivityChooserView
com.bumptech.glide.request.target.CustomViewTarget$SizeDeterminer
androidx.core.view.VelocityTrackerCompat
com.bumptech.glide.load.engine.prefill.BitmapPreFillRunner$UniqueKey
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback
androidx.recyclerview.widget.SortedList$BatchedCallback
com.bumptech.glide.load.data.ExifOrientationStream:
    private static final int SEGMENT_START_POSITION
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat
com.google.android.material.snackbar.BaseTransientBottomBar$2
com.eptonic.photocollage.ui.next.s.xx.xxx.yy.cc.activity.FrameActivity:
    public static final int REQUEST_SELECT_PHOTO
com.yd.photoeditor.imageprocessing.filter.processing.VVVVVV
androidx.viewpager.R$drawable
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3:
    void <init>(androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer)
com.google.android.material.R$bool
androidx.core.R$color
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler
androidx.recyclerview.widget.RecyclerView$Recycler:
    public void bindViewToPosition(android.view.View,int)
    static final int DEFAULT_CACHE_SIZE
com.bumptech.glide.provider.EncoderRegistry:
    public synchronized void prepend(java.lang.Class,com.bumptech.glide.load.Encoder)
com.eptonic.photocollage.ui.view.sticker.StickerUtils:
    void <init>()
    public static java.io.File saveImageToGallery(java.io.File,android.graphics.Bitmap)
    public static void notifySystemGallery(android.content.Context,java.io.File)
    public static android.graphics.RectF trapToRect(float[])
    private static final java.lang.String TAG
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool:
    public void <init>(long,java.util.Set)
    public long hitCount()
    public long missCount()
    public long evictionCount()
    public long getCurrentSize()
    public synchronized void setSizeMultiplier(float)
    private static final java.lang.String TAG
com.bumptech.glide.load.engine.bitmap_recycle.IntegerArrayAdapter:
    private static final java.lang.String TAG
androidx.recyclerview.widget.ItemTouchHelper$3
androidx.appcompat.app.ActionBarDrawerToggle$1
org.greenrobot.greendao.annotation.Index
androidx.core.text.util.LinkifyCompat$LinkSpec
com.yd.photoeditor.config.PLog:
    public void <init>()
    public static void e(java.lang.String,java.lang.String)
    public static void i(java.lang.String,java.lang.String)
    public static void println(int,java.lang.String,java.lang.String)
    public static void v(java.lang.String,java.lang.String)
    public static void w(java.lang.String,java.lang.String)
androidx.core.app.NotificationCompat$WearableExtender
com.google.android.material.internal.NavigationMenuPresenter
androidx.annotation.BoolRes
com.google.android.material.circularreveal.CircularRevealFrameLayout:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void actualDraw(android.graphics.Canvas)
    public boolean actualIsOpaque()
androidx.lifecycle.AndroidViewModel
org.greenrobot.greendao.InternalUnitTestDaoAccess
androidx.transition.R
com.yd.photoeditor.model.Language
androidx.loader.app.LoaderManagerImpl$LoaderViewModel:
    void startCreatingLoader()
    boolean isCreatingLoader()
    void finishCreatingLoader()
    void putLoader(int,androidx.loader.app.LoaderManagerImpl$LoaderInfo)
    androidx.loader.app.LoaderManagerImpl$LoaderInfo getLoader(int)
    void removeLoader(int)
    boolean hasRunningLoaders()
androidx.core.app.NotificationBuilderWithBuilderAccessor
androidx.viewpager.widget.ViewPager$3
androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl
com.eptonic.photocollage.ui.view.PhotoLayout$3:
    public void onItemClick(com.eptonic.photocollage.ui.quickAction.QuickAction,int,int)
androidx.constraintlayout.solver.widgets.WidgetContainer:
    public void <init>(int,int,int,int)
    public void <init>(int,int)
    public static androidx.constraintlayout.solver.widgets.Rectangle getBounds(java.util.ArrayList)
    public varargs void add(androidx.constraintlayout.solver.widgets.ConstraintWidget[])
    public java.util.ArrayList getChildren()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget findWidget(float,float)
    public java.util.ArrayList findWidgets(int,int,int,int)
androidx.appcompat.widget.ActionMenuView:
    private static final java.lang.String TAG
    static final int MIN_CELL_SIZE
    static final int GENERATED_ITEM_PADDING
androidx.annotation.FontRes
com.bumptech.glide.disklrucache.DiskLruCache$Value:
    public com.bumptech.glide.disklrucache.DiskLruCache$Editor edit()
    public java.lang.String getString(int)
    public long getLength(int)
androidx.core.app.AppLaunchChecker
androidx.recyclerview.widget.ViewInfoStore:
    private static final boolean DEBUG
com.google.android.material.card.MaterialCardViewHelper:
    public void <init>(com.google.android.material.card.MaterialCardView,android.util.AttributeSet,int,int)
    private void updateInsetForeground(android.graphics.drawable.Drawable)
    private android.graphics.drawable.Drawable insetDrawable(android.graphics.drawable.Drawable)
    private float calculateVerticalBackgroundPadding()
    private float calculateHorizontalBackgroundPadding()
    private boolean canClipToOutline()
    private float getParentCardViewCalculatedCornerPadding()
    private boolean shouldAddCornerPaddingInsideCardBackground()
    private boolean shouldAddCornerPaddingOutsideCardBackground()
    private float calculateActualCornerPadding()
    private float calculateCornerPaddingForCornerTreatment(com.google.android.material.shape.CornerTreatment,float)
    private android.graphics.drawable.Drawable getClickableForeground()
    private android.graphics.drawable.Drawable createForegroundRippleDrawable()
    private android.graphics.drawable.Drawable createCompatRippleDrawable()
    private void updateRippleColor()
    private android.graphics.drawable.Drawable createCheckedIconLayer()
    private com.google.android.material.shape.MaterialShapeDrawable createForegroundShapeDrawable()
    void loadFromAttributes(android.content.res.TypedArray)
    void setUserContentPadding(int,int,int,int)
    void updateStroke()
    private final com.google.android.material.card.MaterialCardView materialCardView
    private final android.graphics.Rect userContentPadding
    private final com.google.android.material.shape.MaterialShapeDrawable bgDrawable
    private final com.google.android.material.shape.MaterialShapeDrawable foregroundContentDrawable
    private final int checkedIconMargin
    private final int checkedIconSize
    private int strokeWidth
    private android.graphics.drawable.Drawable fgDrawable
    private android.graphics.drawable.Drawable checkedIcon
    private android.content.res.ColorStateList rippleColor
    private android.content.res.ColorStateList checkedIconTint
    private com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel
    private android.content.res.ColorStateList strokeColor
    private android.graphics.drawable.Drawable rippleDrawable
    private android.graphics.drawable.LayerDrawable clickableForegroundDrawable
    private com.google.android.material.shape.MaterialShapeDrawable compatRippleDrawable
    private com.google.android.material.shape.MaterialShapeDrawable foregroundShapeDrawable
    private boolean isBackgroundOverwritten
    private boolean checkable
    private static final int DEFAULT_STROKE_VALUE
    private static final float CARD_VIEW_SHADOW_MULTIPLIER
    private static final int CHECKED_ICON_LAYER_INDEX
androidx.loader.content.ModernAsyncTask$3
com.yd.photoeditor.vv.DialogUtils$6
androidx.viewpager2.adapter.FragmentStateAdapter$DataSetChangeObserver
com.yd.photoeditor.imageprocessing.temp.ImageFilter3$OnPictureSavedListener
com.google.android.material.chip.ChipGroup:
    public void check(int)
    public boolean isSingleSelection()
androidx.viewpager2.widget.ViewPager2$AccessibilityProvider
com.yd.photoeditor.listener.OnBackPressListener
androidx.recyclerview.widget.LinearSmoothScroller:
    private static final boolean DEBUG
    private static final float MILLISECONDS_PER_INCH
    private static final int TARGET_SEEK_SCROLL_DISTANCE_PX
    public static final int SNAP_TO_START
    public static final int SNAP_TO_END
    public static final int SNAP_TO_ANY
    private static final float TARGET_SEEK_EXTRA_SCROLL_RATIO
com.yd.photoeditor.actions.RotationAction$7
androidx.core.text.util.LinkifyCompat$1
com.google.android.material.R$layout:
    private void <init>()
androidx.core.util.Pools
androidx.annotation.MenuRes
com.google.android.material.appbar.AppBarLayout$LayoutParams:
    public void <init>(int,int,float)
    public void <init>(com.google.android.material.appbar.AppBarLayout$LayoutParams)
    public void setScrollFlags(int)
    public void setScrollInterpolator(android.view.animation.Interpolator)
    public static final int SCROLL_FLAG_NO_SCROLL
    public static final int SCROLL_FLAG_SCROLL
    public static final int SCROLL_FLAG_EXIT_UNTIL_COLLAPSED
    public static final int SCROLL_FLAG_ENTER_ALWAYS
    public static final int SCROLL_FLAG_ENTER_ALWAYS_COLLAPSED
    public static final int SCROLL_FLAG_SNAP
    public static final int SCROLL_FLAG_SNAP_MARGINS
    static final int FLAG_QUICK_RETURN
    static final int FLAG_SNAP
    static final int COLLAPSIBLE_FLAGS
com.google.android.material.dialog.MaterialAlertDialogBuilder
com.bumptech.glide.load.engine.EngineJob:
    synchronized boolean isCancelled()
androidx.constraintlayout.solver.widgets.ResolutionAnchor:
    public void remove(androidx.constraintlayout.solver.widgets.ResolutionDimension)
    public static final int UNCONNECTED
    public static final int DIRECT_CONNECTION
    public static final int CENTER_CONNECTION
    public static final int MATCH_CONNECTION
    public static final int CHAIN_CONNECTION
    public static final int BARRIER_CONNECTION
com.eptonic.photocollage.ui.next.s.xx.xxx.yy.cc.activity.FirstActivity:
    private static final int START_NEXT
    private static final int TIME_DELAY
com.google.android.material.bottomsheet.BottomSheetDialog$4
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$2
com.google.android.material.transformation.TransformationChildLayout:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
com.bumptech.glide.MemoryCategory:
    public float getMultiplier()
androidx.lifecycle.ComputableLiveData
org.greenrobot.greendao.query.DeleteQuery
com.bumptech.glide.load.model.UriLoader$FileDescriptorFactory:
    public void teardown()
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable
androidx.recyclerview.widget.AsyncListUtil$ViewCallback
androidx.coordinatorlayout.R$drawable
com.google.android.material.shape.Shapeable:
    public abstract com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
androidx.recyclerview.widget.SimpleItemAnimator:
    public boolean getSupportsChangeAnimations()
    public void setSupportsChangeAnimations(boolean)
    private static final boolean DEBUG
    private static final java.lang.String TAG
androidx.core.app.JobIntentService$CommandProcessor
com.eptonic.photocollage.presenter.listener.OnChooseColorListener
androidx.transition.Styleable$TransitionTarget
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior:
    public synthetic bridge void setInternalAutoHideListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)
    public synthetic bridge boolean isAutoHideEnabled()
    public synthetic bridge void setAutoHideEnabled(boolean)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl
com.google.android.material.internal.NavigationMenuPresenter$ViewHolder
androidx.core.view.accessibility.AccessibilityNodeProviderCompat:
    public static final int HOST_VIEW_ID
com.bumptech.glide.R$styleable
androidx.annotation.AnimatorRes
androidx.versionedparcelable.ParcelField
com.google.android.material.floatingactionbutton.BorderDrawable$BorderState
androidx.transition.PatternPathMotion
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$HideStrategy
androidx.appcompat.app.AlertDialog$Builder:
    public androidx.appcompat.app.AlertDialog$Builder setTitle(int)
    public androidx.appcompat.app.AlertDialog$Builder setMessage(int)
    public androidx.appcompat.app.AlertDialog$Builder setMessage(java.lang.CharSequence)
    public androidx.appcompat.app.AlertDialog$Builder setIcon(int)
    public androidx.appcompat.app.AlertDialog$Builder setIconAttribute(int)
    public androidx.appcompat.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setPositiveButtonIcon(android.graphics.drawable.Drawable)
    public androidx.appcompat.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setNegativeButtonIcon(android.graphics.drawable.Drawable)
    public androidx.appcompat.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setNeutralButtonIcon(android.graphics.drawable.Drawable)
    public androidx.appcompat.app.AlertDialog$Builder setCancelable(boolean)
    public androidx.appcompat.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)
    public androidx.appcompat.app.AlertDialog$Builder setOnDismissListener(android.content.DialogInterface$OnDismissListener)
    public androidx.appcompat.app.AlertDialog$Builder setItems(int,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setCursor(android.database.Cursor,android.content.DialogInterface$OnClickListener,java.lang.String)
    public androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(int,boolean[],android.content.DialogInterface$OnMultiChoiceClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(android.database.Cursor,java.lang.String,java.lang.String,android.content.DialogInterface$OnMultiChoiceClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(int,int,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.database.Cursor,int,java.lang.String,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
    public androidx.appcompat.app.AlertDialog$Builder setView(int)
    public androidx.appcompat.app.AlertDialog$Builder setView(android.view.View)
    public androidx.appcompat.app.AlertDialog$Builder setView(android.view.View,int,int,int,int)
    public androidx.appcompat.app.AlertDialog$Builder setInverseBackgroundForced(boolean)
    public androidx.appcompat.app.AlertDialog$Builder setRecycleOnMeasureEnabled(boolean)
    public androidx.appcompat.app.AlertDialog show()
androidx.core.provider.FontsContractCompat$FontRequestCallback
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord
com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter:
    public long getMaxSize()
    public void setSizeMultiplier(float)
com.eptonic.photocollage.model.DaoMaster$OpenHelper:
    public void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory)
androidx.core.view.MenuItemCompat$OnActionExpandListener
androidx.constraintlayout.widget.ConstraintHelper:
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
com.bumptech.glide.request.transition.ViewPropertyAnimationFactory
com.google.android.material.bottomnavigation.BottomNavigationView$SavedState$1
androidx.loader.app.LoaderManagerImpl$LoaderObserver:
    void <init>(androidx.loader.content.Loader,androidx.loader.app.LoaderManager$LoaderCallbacks)
    public void onChanged(java.lang.Object)
    public java.lang.String toString()
    private final androidx.loader.content.Loader mLoader
    private final androidx.loader.app.LoaderManager$LoaderCallbacks mCallback
    private boolean mDeliveredData
androidx.coordinatorlayout.R$color
com.google.android.material.tabs.TabLayoutMediator$PagerAdapterObserver
androidx.viewpager.widget.ViewPager$SavedState
androidx.recyclerview.widget.RecyclerView$ItemAnimator$AdapterChanges
androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider$2
androidx.loader.content.Loader$OnLoadCanceledListener
androidx.core.graphics.TypefaceCompatBaseImpl:
    private static final java.lang.String TAG
    private static final int INVALID_KEY
androidx.core.view.ViewCompat$NestedScrollType
com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback:
    public void <init>()
androidx.transition.FloatArrayEvaluator
com.google.android.material.floatingactionbutton.BaseMotionStrategy
androidx.loader.R$styleable
androidx.recyclerview.widget.RecyclerView$ViewHolder:
    public final int getPosition()
    void stopIgnoring()
    static final int FLAG_BOUND
    static final int FLAG_UPDATE
    static final int FLAG_INVALID
    static final int FLAG_REMOVED
    static final int FLAG_NOT_RECYCLABLE
    static final int FLAG_RETURNED_FROM_SCRAP
    static final int FLAG_IGNORE
    static final int FLAG_TMP_DETACHED
    static final int FLAG_ADAPTER_POSITION_UNKNOWN
    static final int FLAG_ADAPTER_FULLUPDATE
    static final int FLAG_MOVED
    static final int FLAG_APPEARED_IN_PRE_LAYOUT
    static final int PENDING_ACCESSIBILITY_STATE_NOT_SET
    static final int FLAG_BOUNCED_FROM_HIDDEN_LIST
androidx.core.view.NestedScrollingChild3:
    public abstract void dispatchNestedScroll(int,int,int,int,int[],int,int[])
com.google.android.material.tabs.TabLayout$SlidingTabIndicator$1
com.eptonic.photocollage.ui.next.s.xx.xxx.yy.cc.activity.WatchSaveActivity:
    public static final java.lang.String IMAGE_URI_KEY
androidx.transition.GhostViewPort
androidx.constraintlayout.solver.widgets.Optimizer:
    public void <init>()
    public static final int OPTIMIZATION_NONE
    public static final int OPTIMIZATION_DIRECT
    public static final int OPTIMIZATION_BARRIER
    public static final int OPTIMIZATION_CHAIN
    public static final int OPTIMIZATION_DIMENSIONS
    public static final int OPTIMIZATION_RATIO
    public static final int OPTIMIZATION_GROUPS
    public static final int OPTIMIZATION_STANDARD
    static final int FLAG_USE_OPTIMIZE
    static final int FLAG_CHAIN_DANGLING
    static final int FLAG_RECOMPUTE_BOUNDS
com.bumptech.glide.RequestManager$ClearTarget
android.support.v4.os.ResultReceiver
androidx.core.app.JobIntentService$JobWorkEnqueuer
com.yd.photoeditor.R$animator
androidx.arch.core.R
androidx.transition.Slide$4
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory
androidx.lifecycle.LifecycleRegistry:
    public int getObserverCount()
com.yd.photoeditor.R$styleable
com.eptonic.photocollage.util.DialogUtils2$onClickListener
com.bumptech.glide.load.model.FileLoader:
    private static final java.lang.String TAG
androidx.appcompat.widget.ActionBarContextView:
    public boolean hideOverflowMenu()
    public boolean isOverflowMenuShowing()
    public synthetic bridge void dismissPopupMenus()
    public synthetic bridge boolean canShowOverflowMenu()
    public synthetic bridge boolean isOverflowReserved()
    public synthetic bridge boolean isOverflowMenuShowPending()
    public synthetic bridge void postShowOverflowMenu()
    public synthetic bridge void animateToVisibility(int)
    private static final java.lang.String TAG
androidx.fragment.app.FragmentHostCallback:
    public void <init>(android.content.Context,android.os.Handler,int)
    public void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
    public void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
    public void onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
    public void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int)
    public boolean onShouldShowRequestPermissionRationale(java.lang.String)
com.eptonic.photocollage.model.TemplateItem:
    public void <init>(com.eptonic.photocollage.model.ImageTemplate)
    public void setHeader(java.lang.String)
    public void setSectionFirstPosition(int)
    public int getSectionFirstPosition()
    public void setSectionManager(int)
    public int getSectionManager()
    public boolean isHeader()
    public void setIsHeader(boolean)
    public void setIsAds(boolean)
    public boolean isAds()
    private int mSectionFirstPosition
    private int mSectionManager
com.bumptech.glide.ListPreloader$PreloadModelProvider
androidx.fragment.app.FragmentTransaction:
    public androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String)
    public androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment,java.lang.String)
    public androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction attach(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State)
    public boolean isEmpty()
    public androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int)
    public androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int,int,int)
    public androidx.fragment.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String)
    public androidx.fragment.app.FragmentTransaction setTransition(int)
    public androidx.fragment.app.FragmentTransaction setTransitionStyle(int)
    public androidx.fragment.app.FragmentTransaction addToBackStack(java.lang.String)
    public boolean isAddToBackStackAllowed()
    public androidx.fragment.app.FragmentTransaction disallowAddToBackStack()
    public androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(int)
    public androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence)
    public androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(int)
    public androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence)
    public androidx.fragment.app.FragmentTransaction setReorderingAllowed(boolean)
    public androidx.fragment.app.FragmentTransaction setAllowOptimization(boolean)
    public androidx.fragment.app.FragmentTransaction runOnCommit(java.lang.Runnable)
    public abstract int commit()
    public abstract void commitNow()
    public abstract void commitNowAllowingStateLoss()
    static final int OP_NULL
    static final int OP_ADD
    static final int OP_REPLACE
    static final int OP_REMOVE
    static final int OP_HIDE
    static final int OP_SHOW
    static final int OP_DETACH
    static final int OP_ATTACH
    static final int OP_SET_PRIMARY_NAV
    static final int OP_UNSET_PRIMARY_NAV
    static final int OP_SET_MAX_LIFECYCLE
    public static final int TRANSIT_ENTER_MASK
    public static final int TRANSIT_EXIT_MASK
    public static final int TRANSIT_UNSET
    public static final int TRANSIT_NONE
    public static final int TRANSIT_FRAGMENT_OPEN
    public static final int TRANSIT_FRAGMENT_CLOSE
    public static final int TRANSIT_FRAGMENT_FADE
androidx.core.app.AppComponentFactory
org.greenrobot.greendao.annotation.Keep
androidx.core.app.NotificationCompatExtras
androidx.core.R$attr:
    private void <init>()
androidx.appcompat.R$integer
com.google.android.material.button.MaterialButtonToggleGroup$PressedStateTracker
androidx.annotation.ColorRes
androidx.core.content.res.GrowingArrayUtils:
    public static long[] append(long[],int,long)
    public static boolean[] append(boolean[],int,boolean)
    public static java.lang.Object[] insert(java.lang.Object[],int,int,java.lang.Object)
    public static int[] insert(int[],int,int,int)
    public static long[] insert(long[],int,int,long)
    public static boolean[] insert(boolean[],int,int,boolean)
androidx.annotation.IdRes
androidx.appcompat.view.menu.MenuItemWrapperICS:
    static final java.lang.String LOG_TAG
androidx.drawerlayout.widget.DrawerLayout
org.greenrobot.greendao.query.Query:
    public static org.greenrobot.greendao.query.Query internalCreate(org.greenrobot.greendao.AbstractDao,java.lang.String,java.lang.Object[])
    public org.greenrobot.greendao.query.Query forCurrentThread()
    public org.greenrobot.greendao.query.LazyList listLazy()
    public org.greenrobot.greendao.query.LazyList listLazyUncached()
    public org.greenrobot.greendao.query.CloseableListIterator listIterator()
    public java.lang.Object unique()
    public java.lang.Object uniqueOrThrow()
    public org.greenrobot.greendao.query.Query setParameter(int,java.lang.Object)
    public org.greenrobot.greendao.query.Query setParameter(int,java.util.Date)
    public org.greenrobot.greendao.query.Query setParameter(int,java.lang.Boolean)
    public org.greenrobot.greendao.rx.RxQuery __internalRxPlain()
    public org.greenrobot.greendao.rx.RxQuery __InternalRx()
    public synthetic bridge void setOffset(int)
    public synthetic bridge void setLimit(int)
    public synthetic bridge org.greenrobot.greendao.query.AbstractQueryWithLimit setParameter(int,java.lang.Object)
    public synthetic bridge org.greenrobot.greendao.query.AbstractQuery setParameter(int,java.lang.Boolean)
    public synthetic bridge org.greenrobot.greendao.query.AbstractQuery setParameter(int,java.util.Date)
    public synthetic bridge org.greenrobot.greendao.query.AbstractQuery setParameter(int,java.lang.Object)
    private volatile org.greenrobot.greendao.rx.RxQuery rxTxPlain
    private volatile org.greenrobot.greendao.rx.RxQuery rxTxIo
androidx.appcompat.resources.R$dimen
com.google.android.material.datepicker.MaterialDatePicker$3
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream$InvalidMarkException:
    private static final long serialVersionUID
androidx.core.text.ICUCompat:
    private void <init>()
    private static final java.lang.String TAG
org.greenrobot.greendao.database.EncryptedDatabaseStatement:
    public void execute()
    public long simpleQueryForLong()
    public void bindNull(int)
    public void bindBlob(int,byte[])
    public void bindDouble(int,double)
androidx.core.os.ParcelableCompatCreatorCallbacks
androidx.core.util.Pair:
    public void <init>(java.lang.Object,java.lang.Object)
    public static androidx.core.util.Pair create(java.lang.Object,java.lang.Object)
androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor
com.eptonic.photocollage.R$plurals
androidx.coordinatorlayout.R$id
androidx.collection.CircularIntArray
com.bumptech.glide.request.target.ThumbnailImageViewTarget
androidx.versionedparcelable.VersionedParcelStream$1
com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener
com.bumptech.glide.GlideBuilder$2
androidx.loader.content.AsyncTaskLoader$LoadTask
androidx.core.os.LocaleListCompatWrapper
androidx.core.content.pm.ShortcutInfoCompat$Builder
androidx.appcompat.R$dimen:
    private void <init>()
androidx.fragment.app.FragmentManager:
    public static void enableDebugLogging(boolean)
    public androidx.fragment.app.FragmentTransaction openTransaction()
    public abstract boolean executePendingTransactions()
    public abstract androidx.fragment.app.Fragment findFragmentById(int)
    public abstract void popBackStack()
    public abstract void popBackStack(java.lang.String,int)
    public abstract boolean popBackStackImmediate(java.lang.String,int)
    public abstract void popBackStack(int,int)
    public abstract boolean popBackStackImmediate(int,int)
    public abstract int getBackStackEntryCount()
    public abstract androidx.fragment.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)
    public abstract void addOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
    public abstract void removeOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
    public abstract void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment)
    public abstract androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)
    public abstract androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment)
    public abstract boolean isDestroyed()
    public abstract void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)
    public abstract void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks)
    public abstract androidx.fragment.app.Fragment getPrimaryNavigationFragment()
    public abstract boolean isStateSaved()
    public static final int POP_BACK_STACK_INCLUSIVE
androidx.core.widget.ListPopupWindowCompat
androidx.core.app.AlarmManagerCompat
androidx.lifecycle.ComputableLiveData$3
androidx.core.graphics.drawable.RoundedBitmapDrawable21
com.google.android.material.navigation.NavigationView
androidx.transition.GhostViewPlatform
androidx.fragment.app.FragmentTransition:
    static boolean supportsTransition()
    private void <init>()
com.google.android.material.bottomappbar.BottomAppBar$1
com.google.android.material.appbar.CollapsingToolbarLayout$LayoutParams
androidx.core.os.ParcelableCompat
com.eptonic.photocollage.ui.view.sticker.FlipVerticallyEvent
com.google.android.material.textfield.ClearTextEndIconDelegate:
    private static final int ANIMATION_FADE_DURATION
    private static final int ANIMATION_SCALE_DURATION
    private static final float ANIMATION_SCALE_FROM_VALUE
androidx.appcompat.widget.AppCompatSeekBar:
    public void <init>(android.content.Context)
org.greenrobot.greendao.query.QueryBuilder:
    private void checkOrderBuilder()
    private org.greenrobot.greendao.query.Join addJoin(java.lang.String,org.greenrobot.greendao.Property,org.greenrobot.greendao.AbstractDao,org.greenrobot.greendao.Property)
    private varargs void orderAscOrDesc(java.lang.String,org.greenrobot.greendao.Property[])
    public org.greenrobot.greendao.query.QueryBuilder distinct()
    public org.greenrobot.greendao.query.QueryBuilder preferLocalizedStringOrder()
    public org.greenrobot.greendao.query.QueryBuilder stringOrderCollation(java.lang.String)
    public varargs org.greenrobot.greendao.query.QueryBuilder where(org.greenrobot.greendao.query.WhereCondition,org.greenrobot.greendao.query.WhereCondition[])
    public varargs org.greenrobot.greendao.query.QueryBuilder whereOr(org.greenrobot.greendao.query.WhereCondition,org.greenrobot.greendao.query.WhereCondition,org.greenrobot.greendao.query.WhereCondition[])
    public varargs org.greenrobot.greendao.query.WhereCondition or(org.greenrobot.greendao.query.WhereCondition,org.greenrobot.greendao.query.WhereCondition,org.greenrobot.greendao.query.WhereCondition[])
    public varargs org.greenrobot.greendao.query.WhereCondition and(org.greenrobot.greendao.query.WhereCondition,org.greenrobot.greendao.query.WhereCondition,org.greenrobot.greendao.query.WhereCondition[])
    public org.greenrobot.greendao.query.Join join(java.lang.Class,org.greenrobot.greendao.Property)
    public org.greenrobot.greendao.query.Join join(org.greenrobot.greendao.Property,java.lang.Class)
    public org.greenrobot.greendao.query.Join join(org.greenrobot.greendao.Property,java.lang.Class,org.greenrobot.greendao.Property)
    public org.greenrobot.greendao.query.Join join(org.greenrobot.greendao.query.Join,org.greenrobot.greendao.Property,java.lang.Class,org.greenrobot.greendao.Property)
    public varargs org.greenrobot.greendao.query.QueryBuilder orderAsc(org.greenrobot.greendao.Property[])
    public varargs org.greenrobot.greendao.query.QueryBuilder orderDesc(org.greenrobot.greendao.Property[])
    public org.greenrobot.greendao.query.QueryBuilder orderCustom(org.greenrobot.greendao.Property,java.lang.String)
    public org.greenrobot.greendao.query.QueryBuilder orderRaw(java.lang.String)
    protected java.lang.StringBuilder append(java.lang.StringBuilder,org.greenrobot.greendao.Property)
    public org.greenrobot.greendao.query.QueryBuilder limit(int)
    public org.greenrobot.greendao.query.QueryBuilder offset(int)
    public org.greenrobot.greendao.query.CursorQuery buildCursor()
    public org.greenrobot.greendao.query.DeleteQuery buildDelete()
    public org.greenrobot.greendao.query.CountQuery buildCount()
    public java.util.List list()
    public org.greenrobot.greendao.rx.RxQuery rx()
    public org.greenrobot.greendao.rx.RxQuery rxPlain()
    public org.greenrobot.greendao.query.LazyList listLazy()
    public org.greenrobot.greendao.query.LazyList listLazyUncached()
    public org.greenrobot.greendao.query.CloseableListIterator listIterator()
    public java.lang.Object unique()
    public java.lang.Object uniqueOrThrow()
    public long count()
androidx.loader.R$attr
com.google.android.material.internal.TextScale$1
com.bumptech.glide.disklrucache.DiskLruCache$Editor:
    private java.io.InputStream newInputStream(int)
    public java.lang.String getString(int)
    public void set(int,java.lang.String)
androidx.core.os.BuildCompat
com.eptonic.photocollage.ui.view.frame.FrameTouch:
    public void setImageFrameMoving(boolean)
androidx.appcompat.widget.ShareActionProvider$ShareActivityChooserModelPolicy
com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback$DismissEvent
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback:
    public void <init>()
    public void onShown(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public void onHidden(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public void onExtended(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public void onShrunken(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
com.google.android.material.datepicker.CalendarConstraints:
    static synthetic com.google.android.material.datepicker.Month access$100(com.google.android.material.datepicker.CalendarConstraints)
    static synthetic com.google.android.material.datepicker.Month access$200(com.google.android.material.datepicker.CalendarConstraints)
    static synthetic com.google.android.material.datepicker.Month access$300(com.google.android.material.datepicker.CalendarConstraints)
    static synthetic com.google.android.material.datepicker.CalendarConstraints$DateValidator access$400(com.google.android.material.datepicker.CalendarConstraints)
    boolean isWithinBounds(long)
com.google.android.material.bottomnavigation.BottomNavigationView$2
org.greenrobot.greendao.query.DeleteQuery$QueryData
androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback
androidx.viewpager.R
com.eptonic.photocollage.R$string
com.google.android.material.bottomnavigation.BottomNavigationMenuView
org.greenrobot.greendao.query.WhereCondition$PropertyCondition
androidx.fragment.app.Fragment$SavedState$1
com.yd.photoeditor.view.CaptionImageView$OnDrawCaptionListener
com.google.android.material.R$xml
androidx.customview.R$string
com.bumptech.glide.request.BaseRequestOptions:
    private com.bumptech.glide.request.BaseRequestOptions scaleOnlyTransform(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.Transformation)
    public com.bumptech.glide.request.BaseRequestOptions useUnlimitedSourceGeneratorsPool(boolean)
    public com.bumptech.glide.request.BaseRequestOptions onlyRetrieveFromCache(boolean)
    public com.bumptech.glide.request.BaseRequestOptions placeholder(android.graphics.drawable.Drawable)
    public com.bumptech.glide.request.BaseRequestOptions placeholder(int)
    public com.bumptech.glide.request.BaseRequestOptions fallback(android.graphics.drawable.Drawable)
    public com.bumptech.glide.request.BaseRequestOptions fallback(int)
    public com.bumptech.glide.request.BaseRequestOptions error(android.graphics.drawable.Drawable)
    public com.bumptech.glide.request.BaseRequestOptions error(int)
    public com.bumptech.glide.request.BaseRequestOptions theme(android.content.res.Resources$Theme)
    public com.bumptech.glide.request.BaseRequestOptions override(int)
    public final boolean isLocked()
    public com.bumptech.glide.request.BaseRequestOptions encodeFormat(android.graphics.Bitmap$CompressFormat)
    public com.bumptech.glide.request.BaseRequestOptions encodeQuality(int)
    public com.bumptech.glide.request.BaseRequestOptions frame(long)
    public com.bumptech.glide.request.BaseRequestOptions format(com.bumptech.glide.load.DecodeFormat)
    public com.bumptech.glide.request.BaseRequestOptions disallowHardwareConfig()
    public com.bumptech.glide.request.BaseRequestOptions timeout(int)
    public com.bumptech.glide.request.BaseRequestOptions centerCrop()
    public com.bumptech.glide.request.BaseRequestOptions fitCenter()
    public com.bumptech.glide.request.BaseRequestOptions centerInside()
    public com.bumptech.glide.request.BaseRequestOptions optionalCircleCrop()
    public com.bumptech.glide.request.BaseRequestOptions circleCrop()
    public varargs com.bumptech.glide.request.BaseRequestOptions transform(com.bumptech.glide.load.Transformation[])
    public varargs com.bumptech.glide.request.BaseRequestOptions transforms(com.bumptech.glide.load.Transformation[])
    public com.bumptech.glide.request.BaseRequestOptions optionalTransform(com.bumptech.glide.load.Transformation)
    public com.bumptech.glide.request.BaseRequestOptions optionalTransform(java.lang.Class,com.bumptech.glide.load.Transformation)
    public com.bumptech.glide.request.BaseRequestOptions transform(java.lang.Class,com.bumptech.glide.load.Transformation)
    public com.bumptech.glide.request.BaseRequestOptions dontTransform()
    public com.bumptech.glide.request.BaseRequestOptions dontAnimate()
    protected boolean isAutoCloneEnabled()
    public final boolean isDiskCacheStrategySet()
    public final boolean isSkipMemoryCacheSet()
    private static final int UNSET
    private static final int SIZE_MULTIPLIER
    private static final int DISK_CACHE_STRATEGY
    private static final int PRIORITY
    private static final int ERROR_PLACEHOLDER
    private static final int ERROR_ID
    private static final int PLACEHOLDER
    private static final int PLACEHOLDER_ID
    private static final int IS_CACHEABLE
    private static final int OVERRIDE
    private static final int SIGNATURE
    private static final int TRANSFORMATION
    private static final int RESOURCE_CLASS
    private static final int FALLBACK
    private static final int FALLBACK_ID
    private static final int THEME
    private static final int TRANSFORMATION_ALLOWED
    private static final int TRANSFORMATION_REQUIRED
    private static final int USE_UNLIMITED_SOURCE_GENERATORS_POOL
    private static final int ONLY_RETRIEVE_FROM_CACHE
    private static final int USE_ANIMATION_POOL
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb
androidx.recyclerview.widget.DiffUtil$PostponedUpdate
com.google.android.material.snackbar.BaseTransientBottomBar$14
com.google.android.material.circularreveal.coordinatorlayout.CircularRevealCoordinatorLayout
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior:
    private void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar)
    static synthetic void access$1000(com.google.android.material.snackbar.BaseTransientBottomBar$Behavior,com.google.android.material.snackbar.BaseTransientBottomBar)
androidx.constraintlayout.solver.SolverVariable:
    private static java.lang.String getUniqueName(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String)
    public void <init>(java.lang.String,androidx.constraintlayout.solver.SolverVariable$Type)
    void clearStrengths()
    java.lang.String strengthsToString()
    public java.lang.String getName()
    public void setName(java.lang.String)
    private static final boolean INTERNAL_DEBUG
    public static final int STRENGTH_NONE
    public static final int STRENGTH_LOW
    public static final int STRENGTH_MEDIUM
    public static final int STRENGTH_HIGH
    public static final int STRENGTH_HIGHEST
    public static final int STRENGTH_EQUALITY
    public static final int STRENGTH_FIXED
    public static final int STRENGTH_BARRIER
    static final int MAX_STRENGTH
org.greenrobot.greendao.database.DatabaseOpenHelper$EncryptedHelper
androidx.constraintlayout.widget.Constraints$LayoutParams:
    public void <init>(androidx.constraintlayout.widget.Constraints$LayoutParams)
androidx.drawerlayout.R$dimen
com.google.android.material.appbar.CollapsingToolbarLayout
androidx.recyclerview.widget.OrientationHelper:
    public androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
    public abstract void offsetChild(android.view.View,int)
    private static final int INVALID_SIZE
    public static final int HORIZONTAL
    public static final int VERTICAL
com.google.android.material.tabs.TabLayoutMediator$TabLayoutOnPageChangeCallback
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback
org.intellij.lang.annotations.JdkConstants$TabLayoutPolicy
androidx.appcompat.widget.PopupMenu$OnMenuItemClickListener
com.google.android.material.floatingactionbutton.BorderDrawable:
    void <init>(com.google.android.material.shape.ShapeAppearanceModel)
    private android.graphics.Shader createGradientShader()
    public void setBorderWidth(float)
    public void setColorFilter(android.graphics.ColorFilter)
    void setGradientColors(int,int,int,int)
    public void draw(android.graphics.Canvas)
    public void getOutline(android.graphics.Outline)
    public boolean getPadding(android.graphics.Rect)
    protected android.graphics.RectF getBoundsAsRectF()
    public com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
    public void setAlpha(int)
    public int getOpacity()
    protected void onBoundsChange(android.graphics.Rect)
    public boolean isStateful()
    protected boolean onStateChange(int[])
    public android.graphics.drawable.Drawable$ConstantState getConstantState()
    private final com.google.android.material.shape.ShapeAppearancePathProvider pathProvider
    private final android.graphics.Paint paint
    private final android.graphics.Path shapePath
    private final android.graphics.Rect rect
    private final android.graphics.RectF rectF
    private final android.graphics.RectF boundsRectF
    private final com.google.android.material.floatingactionbutton.BorderDrawable$BorderState state
    float borderWidth
    private int topOuterStrokeColor
    private int topInnerStrokeColor
    private int bottomOuterStrokeColor
    private int bottomInnerStrokeColor
    private int currentBorderTintColor
    private boolean invalidateShader
    private com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel
    private android.content.res.ColorStateList borderTint
    private static final float DRAW_STROKE_WIDTH_MULTIPLE
androidx.drawerlayout.widget.DrawerLayout$SavedState
androidx.core.math.MathUtils:
    private void <init>()
    public static double clamp(double,double,double)
androidx.core.os.TraceCompat:
    private void <init>()
com.bumptech.glide.load.resource.bitmap.VideoDecoder:
    private static final java.lang.String TAG
    public static final long DEFAULT_FRAME
    static final int DEFAULT_FRAME_OPTION
androidx.viewpager2.R$integer
androidx.core.app.ActivityCompat:
    protected void <init>()
    public static void setPermissionCompatDelegate(androidx.core.app.ActivityCompat$PermissionCompatDelegate)
    public static boolean invalidateOptionsMenu(android.app.Activity)
    public static void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)
    public static void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
    public static void finishAfterTransition(android.app.Activity)
    public static android.net.Uri getReferrer(android.app.Activity)
    public static android.view.View requireViewById(android.app.Activity,int)
    public static void setEnterSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback)
    public static void setExitSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback)
    public static void postponeEnterTransition(android.app.Activity)
    public static void startPostponedEnterTransition(android.app.Activity)
    public static void requestPermissions(android.app.Activity,java.lang.String[],int)
    public static boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
    public static androidx.core.view.DragAndDropPermissionsCompat requestDragAndDropPermissions(android.app.Activity,android.view.DragEvent)
com.eptonic.photocollage.ui.view.sticker.DrawableSticker:
    public com.eptonic.photocollage.ui.view.sticker.DrawableSticker setDrawable(android.graphics.drawable.Drawable)
    public com.eptonic.photocollage.ui.view.sticker.DrawableSticker setAlpha(int)
    public void release()
    public synthetic bridge com.eptonic.photocollage.ui.view.sticker.Sticker setAlpha(int)
    public synthetic bridge com.eptonic.photocollage.ui.view.sticker.Sticker setDrawable(android.graphics.drawable.Drawable)
androidx.viewpager.widget.PagerTitleStrip$SingleLineAllCapsTransform
androidx.appcompat.app.AlertController$AlertParams:
    public boolean mForceInverseBackground
com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState
androidx.recyclerview.widget.StaggeredGridLayoutManager:
    public void <init>(int,int)
    public int getGapStrategy()
    public void setGapStrategy(int)
    public int getSpanCount()
    public boolean getReverseLayout()
    public int[] findFirstVisibleItemPositions(int[])
    public int[] findFirstCompletelyVisibleItemPositions(int[])
    public int[] findLastVisibleItemPositions(int[])
    public int[] findLastCompletelyVisibleItemPositions(int[])
    public void scrollToPositionWithOffset(int,int)
    public int getOrientation()
    private static final java.lang.String TAG
    static final boolean DEBUG
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int GAP_HANDLING_NONE
    public static final int GAP_HANDLING_LAZY
    public static final int GAP_HANDLING_MOVE_ITEMS_BETWEEN_SPANS
    static final int INVALID_OFFSET
    private static final float MAX_SCROLL_FACTOR
androidx.core.widget.ContentLoadingProgressBar$1
androidx.viewpager.widget.ViewPager$PagerObserver
androidx.appcompat.widget.ActivityChooserModel
androidx.core.util.ObjectsCompat:
    private void <init>()
    public static int hashCode(java.lang.Object)
android.support.v4.os.ResultReceiver$1
androidx.annotation.WorkerThread
com.google.android.material.shape.ShapeAppearanceModel$Builder:
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCorners(int,float)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCorners(com.google.android.material.shape.CornerTreatment)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCornerSizes(com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(int,float)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(int,float)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(int,float)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(int,float)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setAllEdges(com.google.android.material.shape.EdgeTreatment)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setLeftEdge(com.google.android.material.shape.EdgeTreatment)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopEdge(com.google.android.material.shape.EdgeTreatment)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setRightEdge(com.google.android.material.shape.EdgeTreatment)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomEdge(com.google.android.material.shape.EdgeTreatment)
com.google.android.material.snackbar.Snackbar$1
com.google.android.material.bottomappbar.BottomAppBar$FabAnimationMode
androidx.coordinatorlayout.R$integer
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory
com.bumptech.glide.load.resource.gif.GifFrameLoader:
    com.bumptech.glide.load.Transformation getFrameTransformation()
    int getLoopCount()
    void setNextStartFromFirstFrame()
    void setOnEveryFrameReadyListener(com.bumptech.glide.load.resource.gif.GifFrameLoader$OnEveryFrameListener)
com.bumptech.glide.load.engine.DecodePath:
    private static final java.lang.String TAG
androidx.fragment.app.FragmentTabHost$SavedState$1
com.yd.photoeditor.vv.DialogUtils$InputDialogOnClickListener
com.google.android.material.datepicker.DateValidatorPointForward$1
androidx.recyclerview.widget.RecyclerView$State:
    public boolean isMeasuring()
    public boolean willRunSimpleAnimations()
    public void remove(int)
    public java.lang.Object get(int)
    public void put(int,java.lang.Object)
    public boolean didStructureChange()
    public int getRemainingScrollHorizontal()
    public int getRemainingScrollVertical()
    static final int STEP_START
    static final int STEP_LAYOUT
    static final int STEP_ANIMATIONS
androidx.core.app.ServiceCompat$StopForegroundFlags
androidx.loader.R$style
com.bumptech.glide.load.resource.bitmap.TransformationUtils$DrawRoundedCornerFn
androidx.viewpager2.widget.ViewPager2$SavedState
com.google.android.material.card.MaterialCardView:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public void setContentPadding(int,int,int,int)
    void setAncestorContentPadding(int,int,int,int)
    private static final java.lang.String LOG_TAG
com.bumptech.glide.load.model.stream.HttpGlideUrlLoader:
    public void <init>()
androidx.core.net.ConnectivityManagerCompat
androidx.customview.R$styleable
com.google.android.material.tabs.TabLayout$LabelVisibility
androidx.cardview.R
org.intellij.lang.annotations.JdkConstants
androidx.transition.TransitionManager:
    public void <init>()
    private androidx.transition.Transition getTransition(androidx.transition.Scene)
    private static void changeScene(androidx.transition.Scene,androidx.transition.Transition)
    public static void go(androidx.transition.Scene)
    public static void go(androidx.transition.Scene,androidx.transition.Transition)
    public static void beginDelayedTransition(android.view.ViewGroup)
    public static void endTransitions(android.view.ViewGroup)
    public void setTransition(androidx.transition.Scene,androidx.transition.Transition)
    public void setTransition(androidx.transition.Scene,androidx.transition.Scene,androidx.transition.Transition)
    public void transitionTo(androidx.transition.Scene)
    private androidx.collection.ArrayMap mSceneTransitions
    private androidx.collection.ArrayMap mScenePairTransitions
    private static final java.lang.String LOG_TAG
androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem
androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub
androidx.activity.R$integer
org.intellij.lang.annotations.PrintFormatPattern
com.yd.photoeditor.imageprocessing.temp.ImageFilter2$1
com.yd.photoeditor.vv.PhotoUtils:
    public void <init>()
    public static void addImageToGallery(java.lang.String,android.content.Context)
    public static android.graphics.Bitmap fillBackgroundColorToImage(android.graphics.Bitmap,int)
    public static android.graphics.Bitmap rotateImage(android.graphics.Bitmap,float)
    public static int getCameraPhotoOrientation(android.content.Context,java.lang.String)
    public static void loadImageWithGlide(android.content.Context,android.widget.ImageView,java.lang.String)
    public static android.graphics.Bitmap flip(android.graphics.Bitmap,int)
    public static int[] calculateThumbnailSize(int,int,int,int)
    public static android.graphics.Bitmap createBitmapMask(java.util.ArrayList,int,int)
    public static android.graphics.Bitmap cropImage(android.graphics.Bitmap,android.graphics.Bitmap)
    public static android.graphics.Bitmap getCircularBitmap(android.graphics.Bitmap)
    public static final java.lang.String ASSET_PREFIX
    public static final java.lang.String DRAWABLE_PREFIX
    public static final java.lang.String EDITED_WHITE_IMAGE_SUFFIX
    public static final int FLIP_HORIZONTAL
    public static final int FLIP_VERTICAL
com.bumptech.glide.annotation.GlideType
com.google.android.material.appbar.AppBarLayout$BaseBehavior:
    public void setDragCallback(com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback)
    boolean isOffsetAnimatorRunning()
    private static final int MAX_OFFSET_ANIMATION_DURATION
    private static final int INVALID_POSITION
androidx.appcompat.view.menu.MenuPresenter:
    public abstract androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
    public abstract int getId()
    public abstract android.os.Parcelable onSaveInstanceState()
    public abstract void onRestoreInstanceState(android.os.Parcelable)
androidx.drawerlayout.R$integer
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver:
    public void onItemRangeChanged(int,int)
    public void onItemRangeChanged(int,int,java.lang.Object)
    public void onItemRangeRemoved(int,int)
    public void onItemRangeMoved(int,int,int)
com.bumptech.glide.gifdecoder.R
androidx.core.content.SharedPreferencesCompat
androidx.transition.CanvasUtils
androidx.appcompat.widget.LinearLayoutCompat$OrientationMode
com.google.android.material.bottomsheet.BottomSheetDialogFragment
com.google.android.material.internal.NavigationMenuPresenter$NormalViewHolder
com.bumptech.glide.request.transition.BitmapTransitionFactory
androidx.drawerlayout.widget.DrawerLayout$SavedState$1
androidx.cardview.widget.CardView:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    static synthetic void access$001(androidx.cardview.widget.CardView,int,int,int,int)
    static synthetic void access$101(androidx.cardview.widget.CardView,int)
    static synthetic void access$201(androidx.cardview.widget.CardView,int)
    public void setContentPadding(int,int,int,int)
    final android.graphics.Rect mShadowBounds
androidx.transition.Slide$CalculateSlideVertical
androidx.core.hardware.fingerprint.FingerprintManagerCompat
androidx.lifecycle.livedata.R
androidx.viewpager.widget.PagerTabStrip$2
com.yd.photoeditor.imageprocessing.filter.colour.P8:
    public static final java.lang.String SSSSSSSSSSS
org.greenrobot.greendao.rx.RxDao$23
androidx.transition.ViewUtilsApi29:
    public void setAnimationMatrix(android.view.View,android.graphics.Matrix)
androidx.appcompat.widget.ActionMenuPresenter:
    public void setWidthLimit(int,boolean)
    public void setItemLimit(int)
    public boolean isOverflowReserved()
    public android.os.Parcelable onSaveInstanceState()
    public void onRestoreInstanceState(android.os.Parcelable)
    public void onSubUiVisibilityChanged(boolean)
    private static final java.lang.String TAG
androidx.viewpager2.widget.AnimateLayoutChangeDetector
androidx.constraintlayout.solver.Metrics:
    public void <init>()
    public java.lang.String toString()
    public void reset()
    public long variables
    public long oldresolvedWidgets
    public java.util.ArrayList problematicLayouts
com.eptonic.photocollage.util.PhotoUtils:
    public void <init>()
    public static android.graphics.Bitmap fillBackgroundColorToImage(android.graphics.Bitmap,int)
    public static android.graphics.Bitmap rotateImage(android.graphics.Bitmap,float,boolean)
    public static android.graphics.Bitmap rotateImage(android.graphics.Bitmap,float)
    public static int getCameraPhotoOrientation(android.content.Context,java.lang.String)
    public static android.graphics.Bitmap flip(android.graphics.Bitmap,int)
    public static android.graphics.Bitmap blurImage(android.graphics.Bitmap,float)
    public static android.graphics.Bitmap fastblur(android.graphics.Bitmap,int)
    public static float calculateScaleRatio(int,int,int,int)
    public static int[] calculateThumbnailSize(int,int,int,int)
    public static android.graphics.Bitmap cleanImage(android.graphics.Bitmap)
    private static boolean isTransparentRow(android.graphics.Bitmap,int)
    private static boolean isTransparentColumn(android.graphics.Bitmap,int)
    public static android.graphics.Bitmap transparentPadding(android.graphics.Bitmap,float)
    public static android.graphics.Bitmap createBitmapMask(java.util.ArrayList,int,int)
    public static android.graphics.Bitmap cropImage(android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Matrix)
    public static android.graphics.Bitmap cropImage(android.graphics.Bitmap,android.graphics.Bitmap)
    public static android.graphics.Bitmap getCircularBitmap(android.graphics.Bitmap)
    public static final java.lang.String ASSET_PREFIX
    public static final java.lang.String DRAWABLE_PREFIX
    public static final java.lang.String EDITED_WHITE_IMAGE_SUFFIX
    public static final int FLIP_HORIZONTAL
    public static final int FLIP_VERTICAL
com.bumptech.glide.provider.ResourceDecoderRegistry:
    public synchronized void prepend(java.lang.String,com.bumptech.glide.load.ResourceDecoder,java.lang.Class,java.lang.Class)
androidx.fragment.app.BackStackRecord:
    public int getId()
    public int getBreadCrumbTitleRes()
    public int getBreadCrumbShortTitleRes()
    public java.lang.CharSequence getBreadCrumbTitle()
    public java.lang.CharSequence getBreadCrumbShortTitle()
    public androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State)
    public int commit()
    public void commitNow()
    public void commitNowAllowingStateLoss()
    public boolean isEmpty()
    static final java.lang.String TAG
com.eptonic.photocollage.ui.view.frame.FramePhotoLayout$2:
    public void onItemClick(com.eptonic.photocollage.ui.quickAction.QuickAction,int,int)
org.greenrobot.greendao.rx.RxDao$10
com.google.android.material.internal.NavigationSubMenu
com.bumptech.glide.util.pool.StateVerifier:
    private static final boolean DEBUG
com.bumptech.glide.annotation.GlideModule
com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader$Factory:
    public void teardown()
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo:
    public int changeFlags
androidx.versionedparcelable.VersionedParcel$ParcelException
com.google.android.material.internal.CheckableImageButton:
    public boolean isPressable()
com.google.android.material.textfield.DropdownMenuEndIconDelegate:
    private static final int ANIMATION_FADE_OUT_DURATION
    private static final int ANIMATION_FADE_IN_DURATION
androidx.core.app.ActivityCompat$1
com.yd.photoeditor.imageprocessing.filter.ImageRender$7
com.google.android.material.R$id:
    private void <init>()
com.eptonic.photocollage.R$layout
com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLockPool:
    private static final int MAX_POOL_SIZE
com.yd.photoeditor.imageprocessing.filter.colour.P11:
    public static final java.lang.String JJJJJJJJJJ
com.yd.photoeditor.imageprocessing.util.TextureRotationUtil$AnonymousClass1:
    void <init>()
androidx.appcompat.app.ActionBar$NavigationMode
androidx.appcompat.widget.AbsActionBarView$1
androidx.appcompat.view.menu.MenuPopupHelper:
    public void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
    public void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View)
    public int getGravity()
    public void show(int,int)
    public android.widget.ListView getListView()
    private static final int TOUCH_EPICENTER_SIZE_DP
com.bumptech.glide.request.transition.ViewPropertyTransition$Animator
androidx.viewpager2.widget.FakeDrag
com.google.android.material.internal.ViewUtils:
    private void <init>()
    public static boolean isLayoutRtl(android.view.View)
    public static void requestFocusAndShowKeyboard(android.view.View)
    public static void doOnApplyWindowInsets(android.view.View,com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener)
    public static void requestApplyInsetsWhenAttached(android.view.View)
androidx.appcompat.widget.TooltipCompat:
    private void <init>()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    private boolean isOrWillBeShown()
    private boolean isOrWillBeHidden()
    static synthetic boolean access$602(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,boolean)
    static synthetic boolean access$600(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    static synthetic int access$702(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,int)
    static synthetic boolean access$800(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    static synthetic boolean access$900(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public final boolean isExtended()
    public void addOnShowAnimationListener(android.animation.Animator$AnimatorListener)
    public void removeOnShowAnimationListener(android.animation.Animator$AnimatorListener)
    public void addOnHideAnimationListener(android.animation.Animator$AnimatorListener)
    public void removeOnHideAnimationListener(android.animation.Animator$AnimatorListener)
    public void addOnShrinkAnimationListener(android.animation.Animator$AnimatorListener)
    public void removeOnShrinkAnimationListener(android.animation.Animator$AnimatorListener)
    public void addOnExtendAnimationListener(android.animation.Animator$AnimatorListener)
    public void removeOnExtendAnimationListener(android.animation.Animator$AnimatorListener)
    public void hide()
    public void hide(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)
    public void show()
    public void show(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)
    public void extend()
    public void extend(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)
    public void shrink()
    public void shrink(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)
    private int animState
    private final com.google.android.material.floatingactionbutton.AnimatorTracker changeVisibilityTracker
    private static final int ANIM_STATE_NONE
    private static final int ANIM_STATE_HIDING
    private static final int ANIM_STATE_SHOWING
org.greenrobot.greendao.test.AbstractDaoTestStringPk
androidx.viewpager.widget.ViewPager$OnPageChangeListener
androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener
androidx.core.view.MenuCompat
com.bumptech.glide.ListPreloader$PreloadSizeProvider
androidx.appcompat.widget.ResourceManagerInternal:
    private void removeDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate)
    private static boolean arrayContains(int[],int)
    private static final java.lang.String TAG
    private static final boolean DEBUG
    private static final java.lang.String SKIP_DRAWABLE_TAG
    private static final java.lang.String PLATFORM_VD_CLAZZ
androidx.recyclerview.widget.ViewBoundsCheck$ViewBounds
androidx.appcompat.widget.ActivityChooserView$3
androidx.lifecycle.Transformations
com.yd.photoeditor.imageprocessing.filter.effect.F2:
    public static final java.lang.String HALFTONE_FRAGMENT_SHADER
androidx.customview.R$integer
androidx.recyclerview.widget.MessageThreadUtil
androidx.cardview.R$dimen
com.eptonic.photocollage.model.GalleryAlbum:
    public void setAlbumId(long)
    public void setAlbumName(java.lang.String)
    public long getAlbumId()
    public java.lang.String getTakenDate()
androidx.core.app.TaskStackBuilder:
    public static androidx.core.app.TaskStackBuilder from(android.content.Context)
    public androidx.core.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent)
    public androidx.core.app.TaskStackBuilder addParentStack(java.lang.Class)
    public int getIntentCount()
    public android.content.Intent getIntent(int)
    public android.content.Intent editIntentAt(int)
    public android.app.PendingIntent getPendingIntent(int,int)
    public android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle)
    public android.content.Intent[] getIntents()
    private static final java.lang.String TAG
androidx.recyclerview.widget.ViewBoundsCheck:
    static final int GT
    static final int EQ
    static final int LT
    static final int CVS_PVS_POS
    static final int FLAG_CVS_GT_PVS
    static final int FLAG_CVS_EQ_PVS
    static final int FLAG_CVS_LT_PVS
    static final int CVS_PVE_POS
    static final int FLAG_CVS_GT_PVE
    static final int FLAG_CVS_EQ_PVE
    static final int FLAG_CVS_LT_PVE
    static final int CVE_PVS_POS
    static final int FLAG_CVE_GT_PVS
    static final int FLAG_CVE_EQ_PVS
    static final int FLAG_CVE_LT_PVS
    static final int CVE_PVE_POS
    static final int FLAG_CVE_GT_PVE
    static final int FLAG_CVE_EQ_PVE
    static final int FLAG_CVE_LT_PVE
    static final int MASK
androidx.recyclerview.widget.ItemTouchHelper$Callback
androidx.recyclerview.R$integer
androidx.viewpager2.widget.ViewPager2$2
androidx.recyclerview.widget.TileList$Tile
com.eptonic.photocollage.ui.view.PhotoLayout$2
com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$1
androidx.constraintlayout.widget.Barrier:
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public boolean allowsGoneWidget()
    public static final int LEFT
    public static final int TOP
    public static final int RIGHT
    public static final int BOTTOM
    public static final int START
    public static final int END
androidx.loader.R$dimen
androidx.lifecycle.Transformations$2$1
androidx.viewpager.widget.PagerTitleStrip$PageListener
androidx.appcompat.app.ActionBar$DisplayOptions
com.bumptech.glide.load.engine.cache.DiskCache$Factory:
    public static final int DEFAULT_DISK_CACHE_SIZE
    public static final java.lang.String DEFAULT_DISK_CACHE_DIR
androidx.vectordrawable.animated.R$integer
com.google.android.material.bottomnavigation.BottomNavigationView
com.yd.photoeditor.view.TouchBlurView$1
com.yd.photoeditor.vv.DialogUtils$5
org.intellij.lang.annotations.JdkConstants$HorizontalAlignment
com.google.android.material.bottomsheet.BottomSheetBehavior$State
androidx.annotation.RequiresFeature
androidx.core.os.ParcelCompat
com.bumptech.glide.R$attr
androidx.core.R$id:
    private void <init>()
androidx.viewpager.widget.PagerTabStrip$1
com.bumptech.glide.load.model.StringLoader$StreamFactory:
    public void teardown()
androidx.core.content.PermissionChecker$PermissionResult
com.eptonic.photocollage.util.DialogUtils2$X5X6Lis
androidx.customview.R$drawable
androidx.core.util.Supplier
androidx.core.view.WindowCompat
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$Factory:
    public final void teardown()
androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate
com.google.android.material.snackbar.BaseTransientBottomBar$8
org.greenrobot.greendao.internal.SqlUtils:
    public void <init>()
    public static java.lang.StringBuilder appendColumn(java.lang.StringBuilder,java.lang.String)
    public static java.lang.StringBuilder appendColumnsEqualPlaceholders(java.lang.StringBuilder,java.lang.String[])
    public static java.lang.StringBuilder appendColumnsEqValue(java.lang.StringBuilder,java.lang.String,java.lang.String[])
    public static java.lang.String createSqlSelectCountStar(java.lang.String,java.lang.String)
    public static java.lang.String createSqlDelete(java.lang.String,java.lang.String[])
    public static java.lang.String createSqlUpdate(java.lang.String,java.lang.String[],java.lang.String[])
    public static java.lang.String createSqlCount(java.lang.String)
    public static java.lang.String escapeBlobArgument(byte[])
    public static java.lang.String toHex(byte[])
androidx.appcompat.widget.ActionMenuPresenter$SavedState
androidx.vectordrawable.animated.R$attr
androidx.recyclerview.widget.RecyclerView$LayoutParams:
    public boolean viewNeedsUpdate()
    public int getViewPosition()
    public int getViewAdapterPosition()
com.bumptech.glide.load.engine.cache.MemoryCacheAdapter
androidx.fragment.R
com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener
org.greenrobot.greendao.rx.RxDao$5
androidx.appcompat.app.ActionBar$OnNavigationListener
org.jetbrains.annotations.NonNls
androidx.core.content.SharedPreferencesCompat$EditorCompat$Helper
com.google.android.material.snackbar.Snackbar$Callback
com.google.android.material.card.MaterialCardViewHelper$1
androidx.core.view.DragStartHelper$1
com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory:
    public void teardown()
com.bumptech.glide.load.model.ResourceLoader$UriFactory:
    public void teardown()
com.bumptech.glide.load.data.mediastore.ThumbFetcher$VideoThumbnailQuery:
    private static final java.lang.String PATH_SELECTION
com.google.android.material.tabs.TabLayout$Mode
com.eptonic.photocollage.ui.view.sticker.StickerView$OnStickerOperationListener:
    public abstract void onStickerFlipped(com.eptonic.photocollage.ui.view.sticker.Sticker)
androidx.vectordrawable.R$id
androidx.appcompat.widget.SearchView:
    public boolean isIconfiedByDefault()
    public boolean isSubmitButtonEnabled()
    public boolean isQueryRefinementEnabled()
    static final boolean DBG
    static final java.lang.String LOG_TAG
    private static final java.lang.String IME_OPTION_NO_MICROPHONE
org.greenrobot.greendao.InternalQueryDaoAccess:
    public static org.greenrobot.greendao.internal.TableStatements getStatements(org.greenrobot.greendao.AbstractDao)
    public java.lang.Object loadCurrent(android.database.Cursor,int,boolean)
    public java.lang.Object loadUniqueAndCloseCursor(android.database.Cursor)
    public org.greenrobot.greendao.internal.TableStatements getStatements()
androidx.appcompat.resources.R$attr
androidx.customview.widget.FocusStrategy:
    private void <init>()
androidx.appcompat.widget.ViewUtils:
    private void <init>()
    private static final java.lang.String TAG
com.eptonic.photocollage.ui.view.sticker.BitmapStickerIcon$Gravity
com.eptonic.photocollage.ui.view.sticker.AbstractFlipEvent
androidx.core.provider.FontsContractCompat$FontFamilyResult:
    public static final int STATUS_OK
    public static final int STATUS_WRONG_CERTIFICATES
    public static final int STATUS_UNEXPECTED_DATA_PROVIDED
com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory:
    public void teardown()
androidx.core.R$style
androidx.recyclerview.widget.LayoutState:
    static final int LAYOUT_START
    static final int LAYOUT_END
    static final int INVALID_LAYOUT
    static final int ITEM_DIRECTION_HEAD
    static final int ITEM_DIRECTION_TAIL
com.google.android.material.bottomsheet.BottomSheetDialog$1
com.eptonic.photocollage.ui.view.sticker.StickerView:
    public void configDefaultIcons()
    public void swapLayers(int,int)
    public void sendToLayer(int,int)
    public void flipCurrentSticker(int)
    public void flip(com.eptonic.photocollage.ui.view.sticker.Sticker,int)
    public boolean replace(com.eptonic.photocollage.ui.view.sticker.Sticker)
    public boolean replace(com.eptonic.photocollage.ui.view.sticker.Sticker,boolean)
    public void removeAllStickers()
    public float[] getStickerPoints(com.eptonic.photocollage.ui.view.sticker.Sticker)
    public void save(java.io.File)
    public android.graphics.Bitmap createBitmap()
    public boolean isNoneSticker()
    public com.eptonic.photocollage.ui.view.sticker.StickerView setMinClickDelayTime(int)
    public boolean isConstrained()
    private static final java.lang.String TAG
    private static final int DEFAULT_MIN_CLICK_DELAY_TIME
    public static final int FLIP_HORIZONTALLY
    public static final int FLIP_VERTICALLY
androidx.viewpager.R$styleable
com.google.android.material.bottomappbar.BottomAppBar$FabAlignmentMode
com.eptonic.photocollage.util.DialogUtils2$ConfirmDialogOnClickListener
androidx.core.app.JobIntentService$CompatWorkEnqueuer
androidx.activity.R$dimen
androidx.core.view.ViewCompat$FocusDirection
com.google.android.material.internal.CollapsingTextHelper$2
com.google.android.material.math.MathUtils:
    private void <init>()
    public static boolean geq(float,float,float)
    public static final float DEFAULT_EPSILON
androidx.appcompat.view.menu.CascadingMenuPopup$HorizPosition
androidx.activity.ComponentActivity:
    public void <init>(int)
    public java.lang.Object getLastCustomNonConfigurationInstance()
com.google.android.material.datepicker.DateFormatTextWatcher
androidx.annotation.StyleableRes
androidx.transition.R$color
androidx.core.provider.FontsContractCompat$4
com.yd.photoeditor.view.CropImageView:
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public android.graphics.Bitmap cropImage(android.graphics.Bitmap)
    public boolean isPaintMode()
    public boolean isSlideMode()
com.yd.photoeditor.R$bool
androidx.transition.Visibility$Mode
androidx.transition.GhostViewPort$1
androidx.core.text.HtmlCompat
androidx.core.view.accessibility.AccessibilityRecordCompat:
    public void <init>(java.lang.Object)
    public static androidx.core.view.accessibility.AccessibilityRecordCompat obtain(androidx.core.view.accessibility.AccessibilityRecordCompat)
    public static androidx.core.view.accessibility.AccessibilityRecordCompat obtain()
    public static int getMaxScrollX(android.view.accessibility.AccessibilityRecord)
    public static int getMaxScrollY(android.view.accessibility.AccessibilityRecord)
    public java.lang.Object getImpl()
    public void setSource(android.view.View)
    public void setSource(android.view.View,int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getSource()
    public int getWindowId()
    public boolean isChecked()
    public void setChecked(boolean)
    public boolean isEnabled()
    public void setEnabled(boolean)
    public boolean isPassword()
    public void setPassword(boolean)
    public boolean isFullScreen()
    public void setFullScreen(boolean)
    public boolean isScrollable()
    public void setScrollable(boolean)
    public int getItemCount()
    public void setItemCount(int)
    public int getCurrentItemIndex()
    public void setCurrentItemIndex(int)
    public int getFromIndex()
    public void setFromIndex(int)
    public int getToIndex()
    public void setToIndex(int)
    public int getScrollX()
    public void setScrollX(int)
    public int getScrollY()
    public void setScrollY(int)
    public int getMaxScrollX()
    public void setMaxScrollX(int)
    public int getMaxScrollY()
    public void setMaxScrollY(int)
    public int getAddedCount()
    public void setAddedCount(int)
    public int getRemovedCount()
    public void setRemovedCount(int)
    public java.lang.CharSequence getClassName()
    public void setClassName(java.lang.CharSequence)
    public java.util.List getText()
    public java.lang.CharSequence getBeforeText()
    public void setBeforeText(java.lang.CharSequence)
    public java.lang.CharSequence getContentDescription()
    public void setContentDescription(java.lang.CharSequence)
    public android.os.Parcelable getParcelableData()
    public void setParcelableData(android.os.Parcelable)
    public void recycle()
    public int hashCode()
    public boolean equals(java.lang.Object)
    private final android.view.accessibility.AccessibilityRecord mRecord
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat:
    private static void dumpKeyframes(java.lang.Object[],java.lang.String)
    private void <init>()
    private static final java.lang.String TAG
    private static final int TOGETHER
    private static final int MAX_NUM_POINTS
    private static final int VALUE_TYPE_FLOAT
    private static final int VALUE_TYPE_INT
    private static final int VALUE_TYPE_PATH
    private static final int VALUE_TYPE_COLOR
    private static final int VALUE_TYPE_UNDEFINED
    private static final boolean DBG_ANIMATOR_INFLATER
androidx.versionedparcelable.VersionedParcelStream$FieldBuffer
com.yd.photoeditor.view.colorpicker.ColorPickerView$OnColorChangedListener
org.greenrobot.greendao.query.CursorQuery
androidx.appcompat.app.ActionBar$Tab:
    public abstract int getPosition()
    public abstract androidx.appcompat.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable)
    public abstract androidx.appcompat.app.ActionBar$Tab setIcon(int)
    public abstract androidx.appcompat.app.ActionBar$Tab setText(java.lang.CharSequence)
    public abstract androidx.appcompat.app.ActionBar$Tab setText(int)
    public abstract androidx.appcompat.app.ActionBar$Tab setCustomView(android.view.View)
    public abstract androidx.appcompat.app.ActionBar$Tab setCustomView(int)
    public abstract androidx.appcompat.app.ActionBar$Tab setTag(java.lang.Object)
    public abstract java.lang.Object getTag()
    public abstract androidx.appcompat.app.ActionBar$Tab setTabListener(androidx.appcompat.app.ActionBar$TabListener)
    public abstract androidx.appcompat.app.ActionBar$Tab setContentDescription(int)
    public abstract androidx.appcompat.app.ActionBar$Tab setContentDescription(java.lang.CharSequence)
    public static final int INVALID_POSITION
androidx.core.provider.FontsContractCompat$4$4
com.bumptech.glide.request.target.BaseTarget:
    public void setRequest(com.bumptech.glide.request.Request)
    public com.bumptech.glide.request.Request getRequest()
    private com.bumptech.glide.request.Request request
androidx.transition.Transition:
    public void <init>(android.content.Context,android.util.AttributeSet)
    private static int[] parseMatchOrder(java.lang.String)
    private static boolean isValidMatch(int)
    private static boolean alreadyContains(int[],int)
    private static java.util.ArrayList excludeObject(java.util.ArrayList,java.lang.Object,boolean)
    private java.util.ArrayList excludeId(java.util.ArrayList,int,boolean)
    private java.util.ArrayList excludeView(java.util.ArrayList,android.view.View,boolean)
    private java.util.ArrayList excludeType(java.util.ArrayList,java.lang.Class,boolean)
    public varargs void setMatchOrder(int[])
    public androidx.transition.Transition addTarget(int)
    public androidx.transition.Transition addTarget(java.lang.String)
    public androidx.transition.Transition addTarget(java.lang.Class)
    public androidx.transition.Transition removeTarget(int)
    public androidx.transition.Transition removeTarget(java.lang.String)
    public androidx.transition.Transition removeTarget(java.lang.Class)
    public androidx.transition.Transition excludeTarget(android.view.View,boolean)
    public androidx.transition.Transition excludeTarget(int,boolean)
    public androidx.transition.Transition excludeTarget(java.lang.String,boolean)
    public androidx.transition.Transition excludeChildren(android.view.View,boolean)
    public androidx.transition.Transition excludeChildren(int,boolean)
    public androidx.transition.Transition excludeTarget(java.lang.Class,boolean)
    public androidx.transition.Transition excludeChildren(java.lang.Class,boolean)
    void forceToEnd(android.view.ViewGroup)
    public android.graphics.Rect getEpicenter()
    androidx.transition.Transition setSceneRoot(android.view.ViewGroup)
    void setCanRemoveViews(boolean)
    private static final java.lang.String LOG_TAG
    static final boolean DBG
    public static final int MATCH_INSTANCE
    private static final int MATCH_FIRST
    public static final int MATCH_NAME
    public static final int MATCH_ID
    public static final int MATCH_ITEM_ID
    private static final int MATCH_LAST
    private static final java.lang.String MATCH_INSTANCE_STR
    private static final java.lang.String MATCH_NAME_STR
    private static final java.lang.String MATCH_ID_STR
    private static final java.lang.String MATCH_ITEM_ID_STR
com.bumptech.glide.request.transition.ViewPropertyTransition
com.bumptech.glide.load.engine.GlideException:
    public java.lang.Exception getOrigin()
    private static final long serialVersionUID
androidx.annotation.FloatRange
com.google.android.material.R
androidx.appcompat.graphics.drawable.DrawerArrowDrawable$ArrowDirection
androidx.transition.TransitionUtils:
    private void <init>()
    private static final int MAX_IMAGE_SIZE
com.bumptech.glide.load.data.mediastore.ThumbFetcher$ImageThumbnailQuery:
    private static final java.lang.String PATH_SELECTION
androidx.core.view.ViewPropertyAnimatorCompat:
    public androidx.core.view.ViewPropertyAnimatorCompat alphaBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat translationX(float)
    public androidx.core.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable)
    public android.view.animation.Interpolator getInterpolator()
    public long getStartDelay()
    public androidx.core.view.ViewPropertyAnimatorCompat rotation(float)
    public androidx.core.view.ViewPropertyAnimatorCompat rotationBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat rotationX(float)
    public androidx.core.view.ViewPropertyAnimatorCompat rotationXBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat rotationY(float)
    public androidx.core.view.ViewPropertyAnimatorCompat rotationYBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat scaleX(float)
    public androidx.core.view.ViewPropertyAnimatorCompat scaleXBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat scaleY(float)
    public androidx.core.view.ViewPropertyAnimatorCompat scaleYBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat x(float)
    public androidx.core.view.ViewPropertyAnimatorCompat xBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat y(float)
    public androidx.core.view.ViewPropertyAnimatorCompat yBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat translationXBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat translationYBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat translationZBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat translationZ(float)
    public androidx.core.view.ViewPropertyAnimatorCompat z(float)
    public androidx.core.view.ViewPropertyAnimatorCompat zBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat withLayer()
    public androidx.core.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable)
    static final int LISTENER_TAG_ID
com.google.android.material.snackbar.ContentViewCallback
androidx.core.content.res.ComplexColorCompat:
    private static final java.lang.String LOG_TAG
androidx.fragment.app.FragmentTabHost
androidx.viewpager2.R$styleable
org.greenrobot.greendao.rx.RxDao$18
com.google.android.material.datepicker.MaterialCalendar:
    static com.google.android.material.datepicker.MaterialCalendar newInstance(com.google.android.material.datepicker.DateSelector,int,com.google.android.material.datepicker.CalendarConstraints)
    private static final java.lang.String THEME_RES_ID_KEY
    private static final java.lang.String GRID_SELECTOR_KEY
    private static final java.lang.String CALENDAR_CONSTRAINTS_KEY
    private static final java.lang.String CURRENT_MONTH_KEY
    private static final int SMOOTH_SCROLL_MAX
com.google.android.material.datepicker.MaterialDatePicker$2
com.bumptech.glide.util.MarkEnforcingInputStream:
    private static final int UNSET
    private static final int END_OF_STREAM
androidx.appcompat.widget.AppCompatCheckedTextView:
    public void <init>(android.content.Context)
androidx.viewpager.widget.ViewPager$ViewPositionComparator
androidx.viewpager2.adapter.FragmentStateAdapter:
    public void <init>(androidx.fragment.app.FragmentActivity)
    public void <init>(androidx.fragment.app.Fragment)
    public void <init>(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle)
    private boolean isFragmentViewBound(long)
    private java.lang.Long itemForViewHolder(int)
    private void ensureFragment(int)
    private void scheduleViewAttach(androidx.fragment.app.Fragment,android.widget.FrameLayout)
    private void removeFragment(long)
    private void scheduleGracePeriodEnd()
    private static java.lang.String createKey(java.lang.String,long)
    private static boolean isValidKey(java.lang.String,java.lang.String)
    private static long parseIdFromKey(java.lang.String,java.lang.String)
    public void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView)
    public void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView)
    public abstract androidx.fragment.app.Fragment createFragment(int)
    public final androidx.viewpager2.adapter.FragmentViewHolder onCreateViewHolder(android.view.ViewGroup,int)
    public final void onBindViewHolder(androidx.viewpager2.adapter.FragmentViewHolder,int)
    void gcFragments()
    public final void onViewAttachedToWindow(androidx.viewpager2.adapter.FragmentViewHolder)
    void addViewToContainer(android.view.View,android.widget.FrameLayout)
    public final void onViewRecycled(androidx.viewpager2.adapter.FragmentViewHolder)
    public final boolean onFailedToRecycleView(androidx.viewpager2.adapter.FragmentViewHolder)
    public long getItemId(int)
    public boolean containsItem(long)
    public final void setHasStableIds(boolean)
    public final android.os.Parcelable saveState()
    public final void restoreState(android.os.Parcelable)
    public synthetic bridge void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public synthetic bridge boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public synthetic bridge void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public synthetic bridge void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
    public synthetic bridge androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int)
    final androidx.lifecycle.Lifecycle mLifecycle
    final androidx.fragment.app.FragmentManager mFragmentManager
    final androidx.collection.LongSparseArray mFragments
    private final androidx.collection.LongSparseArray mSavedStates
    private final androidx.collection.LongSparseArray mItemIdToViewHolder
    private androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer mFragmentMaxLifecycleEnforcer
    boolean mIsInGracePeriod
    private boolean mHasStaleFragments
    private static final java.lang.String KEY_PREFIX_FRAGMENT
    private static final java.lang.String KEY_PREFIX_STATE
    private static final long GRACE_WINDOW_TIME_MS
androidx.recyclerview.widget.ItemTouchUIUtilImpl
com.bumptech.glide.request.target.FixedSizeDrawable$State
androidx.customview.widget.ExploreByTouchHelper:
    public final void invalidateRoot()
    public final void invalidateVirtualView(int)
    public final void invalidateVirtualView(int,int)
    public int getFocusedVirtualView()
    public static final int INVALID_ID
    public static final int HOST_ID
    private static final java.lang.String DEFAULT_CLASS_NAME
com.google.android.material.snackbar.BaseTransientBottomBar$13
androidx.annotation.CheckResult
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ChangeSizeStrategy
androidx.core.graphics.drawable.WrappedDrawableApi21:
    private static final java.lang.String TAG
com.google.android.material.resources.TextAppearanceConfig:
    public void <init>()
    public static void setShouldLoadFontSynchronously(boolean)
androidx.core.app.NotificationCompat$Action
com.eptonic.photocollage.ui.view.sticker.StickerView$ActionMode
androidx.appcompat.R$style:
    private void <init>()
androidx.recyclerview.widget.AsyncDifferConfig
org.greenrobot.greendao.rx.RxDao$17
com.google.android.material.internal.ParcelableSparseIntArray$1
androidx.core.content.res.ConfigurationHelper
androidx.appcompat.resources.R$id
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments:
    public int getRow()
    public int getColumn()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon:
    protected void onBoundsChange(android.graphics.Rect)
androidx.viewpager.widget.ViewPager
com.bumptech.glide.R$color
com.bumptech.glide.load.resource.gif.GifOptions:
    private void <init>()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper:
    private static final java.lang.String TAG
    private static final int DEFAULT_AUTO_SIZE_MIN_TEXT_SIZE_IN_SP
    private static final int DEFAULT_AUTO_SIZE_MAX_TEXT_SIZE_IN_SP
    private static final int DEFAULT_AUTO_SIZE_GRANULARITY_IN_PX
    static final float UNSET_AUTO_SIZE_UNIFORM_CONFIGURATION_VALUE
    private static final int VERY_WIDE
com.google.android.material.internal.ScrimInsetsFrameLayout
androidx.vectordrawable.graphics.drawable.Animatable2Compat:
    public abstract void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public abstract boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public abstract void clearAnimationCallbacks()
org.jetbrains.annotations.Nls$Capitalization
androidx.core.app.FrameMetricsAggregator
com.google.android.material.internal.NavigationMenuPresenter$SeparatorViewHolder
androidx.fragment.R$drawable
androidx.core.graphics.PaintCompat
androidx.recyclerview.R$attr:
    private void <init>()
androidx.constraintlayout.solver.widgets.Rectangle:
    public void setBounds(int,int,int,int)
    void grow(int,int)
    boolean intersects(androidx.constraintlayout.solver.widgets.Rectangle)
    public boolean contains(int,int)
    public int getCenterX()
    public int getCenterY()
    public int x
    public int y
    public int width
    public int height
com.google.android.material.chip.Chip:
    public boolean isChipIconVisible()
    public boolean isChipIconEnabled()
    public boolean isCloseIconEnabled()
    public boolean isCheckedIconVisible()
    public boolean isCheckedIconEnabled()
    private static final java.lang.String TAG
    private static final int CHIP_BODY_VIRTUAL_ID
    private static final int CLOSE_ICON_VIRTUAL_ID
    private static final java.lang.String NAMESPACE_ANDROID
    private static final int MIN_TOUCH_TARGET_DP
    private static final java.lang.String BUTTON_ACCESSIBILITY_CLASS_NAME
    private static final java.lang.String COMPOUND_BUTTON_ACCESSIBILITY_CLASS_NAME
    private static final java.lang.String GENERIC_VIEW_ACCESSIBILITY_CLASS_NAME
androidx.viewpager.R$layout
androidx.viewpager2.R
androidx.appcompat.R$anim
org.greenrobot.greendao.annotation.apihint.Internal
androidx.transition.ChangeTransform$PathAnimatorMatrix
com.bumptech.glide.request.transition.DrawableCrossFadeFactory
com.bumptech.glide.load.engine.LoadPath:
    public java.lang.Class getDataClass()
androidx.viewpager.R$string
com.eptonic.photocollage.adapter.TemplateAdapter:
    private void notifyHeaderChanges()
    public void setData(java.util.ArrayList)
    public void setHeaderDisplay(int)
    public void setMarginsFixed(boolean)
    private boolean mMarginsFixed
    private static final int LINEAR
    public static final int VIEW_TYPE_CONTENT
    public static final int VIEW_TYPE_HEADER
androidx.core.app.ActivityRecreator:
    private void <init>()
    private static final java.lang.String LOG_TAG
com.google.android.material.tabs.TabLayout$AdapterChangeListener
com.bumptech.glide.load.engine.DataCacheKey:
    com.bumptech.glide.load.Key getSourceKey()
androidx.fragment.app.FragmentPagerAdapter
com.google.android.material.shape.MaterialShapeDrawable$CompatibilityShadowMode
androidx.annotation.IntegerRes
com.bumptech.glide.R$layout
com.eptonic.photocollage.R$xml
androidx.core.R
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat:
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean)
    public int getColumnIndex()
    public int getColumnSpan()
    public int getRowIndex()
    public int getRowSpan()
    public boolean isHeading()
    public boolean isSelected()
com.yd.photoeditor.vv.DialogUtils$OnSelectPaintSizeListener
org.greenrobot.greendao.annotation.Convert
androidx.core.view.ViewPropertyAnimatorListenerAdapter:
    public void onAnimationEnd(android.view.View)
androidx.constraintlayout.widget.R
androidx.transition.PropertyValuesHolderUtils:
    private void <init>()
com.google.android.material.internal.Experimental
androidx.fragment.app.FragmentManagerImpl:
    public boolean executePendingTransactions()
    public void popBackStack()
    public void popBackStack(java.lang.String,int)
    public boolean popBackStackImmediate(java.lang.String,int)
    public void popBackStack(int,int)
    public boolean popBackStackImmediate(int,int)
    public androidx.fragment.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)
    public void addOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
    public void removeOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
    java.util.List getActiveFragments()
    int getActiveFragmentCount()
    public androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment)
    public void execSingleAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean)
    androidx.fragment.app.FragmentManagerNonConfig retainNonConfig()
    void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)
    public void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)
    public void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks)
    static final java.lang.String TAG
    static final java.lang.String TARGET_REQUEST_CODE_STATE_TAG
    static final java.lang.String TARGET_STATE_TAG
    static final java.lang.String VIEW_STATE_TAG
    static final java.lang.String USER_VISIBLE_HINT_TAG
    static final int ANIM_DUR
    public static final int ANIM_STYLE_OPEN_ENTER
    public static final int ANIM_STYLE_OPEN_EXIT
    public static final int ANIM_STYLE_CLOSE_ENTER
    public static final int ANIM_STYLE_CLOSE_EXIT
    public static final int ANIM_STYLE_FADE_ENTER
    public static final int ANIM_STYLE_FADE_EXIT
androidx.core.content.pm.ShortcutInfoCompat
androidx.core.app.NotificationCompat$Extender
com.yd.photoeditor.particle.Particle
androidx.core.graphics.TypefaceCompatApi24Impl:
    private static final java.lang.String TAG
    private static final java.lang.String FONT_FAMILY_CLASS
    private static final java.lang.String ADD_FONT_WEIGHT_STYLE_METHOD
    private static final java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup:
    private static final int MIN_SIZE
com.google.android.material.datepicker.Month:
    static com.google.android.material.datepicker.Month create(long)
androidx.core.view.LayoutInflaterCompat$Factory2Wrapper
androidx.appcompat.widget.DropDownListView:
    public int lookForSelectablePosition(int,boolean)
    public static final int INVALID_POSITION
    public static final int NO_POSITION
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter
androidx.appcompat.graphics.drawable.DrawerArrowDrawable
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder
androidx.coordinatorlayout.widget.CoordinatorLayout:
    public boolean doViewsOverlap(android.view.View,android.view.View)
    static final java.lang.String TAG
    private static final int TYPE_ON_INTERCEPT
    private static final int TYPE_ON_TOUCH
    static final int EVENT_PRE_DRAW
    static final int EVENT_NESTED_SCROLL
    static final int EVENT_VIEW_REMOVED
androidx.transition.Styleable
androidx.transition.Styleable$ChangeBounds
com.google.android.material.R$animator:
    private void <init>()
com.bumptech.glide.ListPreloader$PreloadTarget
androidx.appcompat.R$attr:
    private void <init>()
androidx.appcompat.view.menu.ListMenuItemView:
    public boolean showsIcon()
    private static final java.lang.String TAG
com.google.android.material.shape.CornerTreatment:
    public void getCornerPath(float,float,com.google.android.material.shape.ShapePath)
org.intellij.lang.annotations.JdkConstants$FontStyle
com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider:
    synchronized void clearDiskCacheIfCreated()
com.bumptech.glide.load.resource.ImageDecoderResourceDecoder:
    private static final java.lang.String TAG
com.bumptech.glide.request.target.BitmapThumbnailImageViewTarget
androidx.loader.R
androidx.viewpager.widget.ViewPager$DecorView
androidx.appcompat.resources.R$drawable:
    private void <init>()
androidx.cardview.widget.CardViewImpl:
    public abstract void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float)
    public abstract void updatePadding(androidx.cardview.widget.CardViewDelegate)
com.eptonic.photocollage.R
org.greenrobot.greendao.rx.RxDao$3
com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool:
    public abstract void put(java.lang.Object,java.lang.Class)
    public static final int STANDARD_BUFFER_SIZE_BYTES
androidx.cursoradapter.R
androidx.appcompat.widget.ActivityChooserModel$ActivitySorter
com.eptonic.photocollage.resEncryption.ResUtils:
    public void <init>()
    public static android.content.res.AssetManager buildOnlyExtAsset()
    public static android.content.res.AssetManager newExtPathAssert()
    public static void replaceExtAssert(android.content.res.Resources)
    public static void replaceAssert(android.content.res.Resources,android.content.res.AssetManager)
androidx.core.provider.FontsContractCompat:
    private void <init>()
    public static void resetCache()
    public static void requestFont(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)
    private static void requestFontInternal(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)
    public static android.graphics.Typeface buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[])
    public static final java.lang.String PARCEL_FONT_RESULTS
    static final int RESULT_CODE_PROVIDER_NOT_FOUND
    static final int RESULT_CODE_WRONG_CERTIFICATES
    private static final int BACKGROUND_THREAD_KEEP_ALIVE_DURATION_MS
androidx.core.content.FileProvider$SimplePathStrategy
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior:
    public void setAutoHideEnabled(boolean)
    public boolean isAutoHideEnabled()
    public void setAutoShrinkEnabled(boolean)
    public boolean isAutoShrinkEnabled()
    void setInternalAutoHideCallback(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)
    void setInternalAutoShrinkCallback(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)
    private static final boolean AUTO_HIDE_DEFAULT
    private static final boolean AUTO_SHRINK_DEFAULT
androidx.core.app.AppOpsManagerCompat:
    private void <init>()
    public static int noteOp(android.content.Context,java.lang.String,int,java.lang.String)
    public static int noteOpNoThrow(android.content.Context,java.lang.String,int,java.lang.String)
    public static int noteProxyOp(android.content.Context,java.lang.String,java.lang.String)
    public static final int MODE_ALLOWED
    public static final int MODE_IGNORED
    public static final int MODE_ERRORED
    public static final int MODE_DEFAULT
androidx.recyclerview.widget.LinearLayoutManager:
    private void logChildren()
    public boolean getRecycleChildrenOnDetach()
    public void setRecycleChildrenOnDetach(boolean)
    public boolean getStackFromEnd()
    public boolean getReverseLayout()
    public void scrollToPositionWithOffset(int,int)
    public void setSmoothScrollbarEnabled(boolean)
    public void setInitialPrefetchItemCount(int)
    public int getInitialPrefetchItemCount()
    public int findFirstCompletelyVisibleItemPosition()
    public int findLastCompletelyVisibleItemPosition()
    void validateChildOrder()
    public void prepareForDrop(android.view.View,android.view.View,int,int)
    private static final java.lang.String TAG
    static final boolean DEBUG
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int INVALID_OFFSET
    private static final float MAX_SCROLL_FACTOR
androidx.core.app.Person$Builder
androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2
com.yd.photoeditor.view.FingerPaintView$FingerPath$1
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat:
    private void printGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,int)
    public float getPixelSize()
    static final java.lang.String LOGTAG
    private static final java.lang.String SHAPE_CLIP_PATH
    private static final java.lang.String SHAPE_GROUP
    private static final java.lang.String SHAPE_PATH
    private static final java.lang.String SHAPE_VECTOR
    private static final int LINECAP_BUTT
    private static final int LINECAP_ROUND
    private static final int LINECAP_SQUARE
    private static final int LINEJOIN_MITER
    private static final int LINEJOIN_ROUND
    private static final int LINEJOIN_BEVEL
    private static final int MAX_CACHED_BITMAP_SIZE
    private static final boolean DBG_VECTOR_DRAWABLE
androidx.core.text.util.FindAddress$ZipRange
androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup:
    public abstract int getHorizontalOriginalOffset()
androidx.viewpager2.widget.ViewPager2$SmoothScrollToPosition
com.google.android.material.button.MaterialButton:
    public void addOnCheckedChangeListener(com.google.android.material.button.MaterialButton$OnCheckedChangeListener)
    public void removeOnCheckedChangeListener(com.google.android.material.button.MaterialButton$OnCheckedChangeListener)
    public void clearOnCheckedChangeListeners()
    public static final int ICON_GRAVITY_START
    public static final int ICON_GRAVITY_TEXT_START
    public static final int ICON_GRAVITY_END
    public static final int ICON_GRAVITY_TEXT_END
    private static final java.lang.String LOG_TAG
androidx.appcompat.app.ToolbarActionBar$2
androidx.transition.Explode
androidx.transition.Visibility:
    public void <init>(android.content.Context,android.util.AttributeSet)
    public int getMode()
    public boolean isVisible(androidx.transition.TransitionValues)
    static final java.lang.String PROPNAME_VISIBILITY
    private static final java.lang.String PROPNAME_PARENT
    private static final java.lang.String PROPNAME_SCREEN_LOCATION
    public static final int MODE_IN
    public static final int MODE_OUT
com.google.android.material.tabs.TabItem
com.yd.photoeditor.imageprocessing.filter.colour.P9:
    public void <init>()
    public static final java.lang.String HHHHHHHHHHH
com.eptonic.photocollage.ui.wrapper.dah.interfaces.TemplateInterface:
    public abstract void loadTemplateImages()
androidx.constraintlayout.solver.LinearSystem$Row:
    public abstract boolean isEmpty()
org.greenrobot.greendao.rx.RxDao$22
androidx.recyclerview.widget.RecyclerView$Orientation
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior:
    public synthetic bridge boolean isHorizontalOffsetEnabled()
    public synthetic bridge void setHorizontalOffsetEnabled(boolean)
    public synthetic bridge boolean isVerticalOffsetEnabled()
    public synthetic bridge void setVerticalOffsetEnabled(boolean)
    public synthetic bridge int getLeftAndRightOffset()
    public synthetic bridge boolean setLeftAndRightOffset(int)
androidx.core.app.NotificationCompat$MessagingStyle$Message
androidx.transition.SidePropagation
androidx.transition.MatrixUtils$1
androidx.appcompat.widget.Toolbar$SavedState:
    public void <init>(android.os.Parcel)
com.google.android.material.shape.MaterialShapeDrawable:
    public static com.google.android.material.shape.MaterialShapeDrawable createWithElevationOverlay(android.content.Context)
    public void <init>(com.google.android.material.shape.ShapePathModel)
    public void setShapedViewModel(com.google.android.material.shape.ShapePathModel)
    public com.google.android.material.shape.ShapePathModel getShapedViewModel()
    public android.content.res.ColorStateList getStrokeColor()
    public android.content.res.ColorStateList getStrokeTintList()
    public void setStrokeTint(android.content.res.ColorStateList)
    public void setStrokeTint(int)
    public float getStrokeWidth()
    public void setCornerSize(float)
    public void setCornerSize(com.google.android.material.shape.CornerSize)
    public boolean isPointInTransparentRegion(int,int)
    public int getShadowCompatibilityMode()
    public void setShadowCompatibilityMode(int)
    public boolean isShadowEnabled()
    public void setShadowEnabled(boolean)
    public boolean isElevationOverlayInitialized()
    public float getInterpolation()
    public void setTranslationZ(float)
    public void setZ(float)
    public int getShadowElevation()
    public void setShadowElevation(int)
    public int getShadowVerticalOffset()
    public void setShadowVerticalOffset(int)
    public int getShadowCompatRotation()
    public void setShadowRadius(int)
    public float getScale()
    public void setScale(float)
    public void setUseTintColorForShadow(boolean)
    public void setShadowColor(int)
    public android.graphics.Paint$Style getPaintStyle()
    public void setPaintStyle(android.graphics.Paint$Style)
    public void getPathForSize(int,int,android.graphics.Path)
    private static final float SHADOW_RADIUS_MULTIPLIER
    private static final float SHADOW_OFFSET_MULTIPLIER
    public static final int SHADOW_COMPAT_MODE_DEFAULT
    public static final int SHADOW_COMPAT_MODE_NEVER
    public static final int SHADOW_COMPAT_MODE_ALWAYS
androidx.recyclerview.widget.RecyclerView$ItemAnimator:
    public void setMoveDuration(long)
    public void setAddDuration(long)
    public void setRemoveDuration(long)
    public void setChangeDuration(long)
    public final void dispatchAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void onAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final boolean isRunning(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener)
    public static final int FLAG_CHANGED
    public static final int FLAG_REMOVED
    public static final int FLAG_INVALIDATED
    public static final int FLAG_MOVED
    public static final int FLAG_APPEARED_IN_PRE_LAYOUT
com.yd.photoeditor.imageprocessing.filter.effect.F1:
    public static final java.lang.String FRAGMENT_SHADER_1
    public static final java.lang.String FRAGMENT_SHADER_2
    public static final java.lang.String FRAGMENT_SHADER_3
    public static final java.lang.String FRAGMENT_SHADER_4
    public static final java.lang.String VERTEX_SHADER_1
    public static final java.lang.String VERTEX_SHADER_2
    public static final java.lang.String VERTEX_SHADER_3
    public static final java.lang.String VERTEX_SHADER_4
com.google.android.material.tabs.TabLayoutMediator$ViewPagerOnTabSelectedListener
androidx.recyclerview.widget.ItemTouchHelper$Callback$2
androidx.constraintlayout.solver.widgets.Chain:
    void <init>()
    private static final boolean DEBUG
com.eptonic.photocollage.ui.quickAction.PopupWindows:
    public void onDismiss()
    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public void setContentView(int)
    public void dismiss()
androidx.core.internal.view.SupportMenu:
    public abstract void setGroupDividerEnabled(boolean)
    public static final int USER_MASK
    public static final int USER_SHIFT
    public static final int CATEGORY_MASK
    public static final int CATEGORY_SHIFT
    public static final int SUPPORTED_MODIFIERS_MASK
    public static final int FLAG_KEEP_OPEN_ON_SUBMENU_OPENED
com.google.android.material.button.MaterialButtonToggleGroup
com.google.android.material.internal.ParcelableSparseArray
com.google.android.material.textfield.TextInputLayout:
    public void setBoxCornerRadiiResources(int,int,int,int)
    public void setBoxCornerRadii(float,float,float,float)
    public boolean isHintEnabled()
    public boolean isErrorEnabled()
    public boolean isCounterEnabled()
    public boolean isHintAnimationEnabled()
    public boolean isStartIconCheckable()
    public boolean isEndIconCheckable()
    public void removeOnEndIconChangedListener(com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener)
    public void clearOnEndIconChangedListeners()
    public void removeOnEditTextAttachedListener(com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener)
    public void clearOnEditTextAttachedListeners()
    public boolean isPasswordVisibilityToggleEnabled()
    public void passwordVisibilityToggleRequested(boolean)
    boolean cutoutIsOpen()
    final boolean isHintExpanded()
    final boolean isHelperTextDisplayed()
    private static final int LABEL_SCALE_ANIMATION_DURATION
    private static final int INVALID_MAX_LENGTH
    private static final java.lang.String LOG_TAG
    public static final int BOX_BACKGROUND_NONE
    public static final int BOX_BACKGROUND_FILLED
    public static final int BOX_BACKGROUND_OUTLINE
    public static final int END_ICON_CUSTOM
    public static final int END_ICON_NONE
    public static final int END_ICON_PASSWORD_TOGGLE
    public static final int END_ICON_CLEAR_TEXT
    public static final int END_ICON_DROPDOWN_MENU
org.greenrobot.greendao.query.AbstractQueryWithLimit:
    public org.greenrobot.greendao.query.AbstractQueryWithLimit setParameter(int,java.lang.Object)
    public void setLimit(int)
    public void setOffset(int)
    public synthetic bridge org.greenrobot.greendao.query.AbstractQuery setParameter(int,java.lang.Object)
com.google.android.material.datepicker.DateValidatorPointForward
androidx.core.view.LayoutInflaterFactory
com.eptonic.photocollage.ui.quickAction.QuickAction$OnActionItemClickListener:
    public abstract void onItemClick(com.eptonic.photocollage.ui.quickAction.QuickAction,int,int)
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup:
    public void setSpanIndexCacheEnabled(boolean)
    public void setSpanGroupIndexCacheEnabled(boolean)
    public boolean isSpanIndexCacheEnabled()
    public boolean isSpanGroupIndexCacheEnabled()
com.bumptech.glide.gifdecoder.GifFrame:
    static final int DISPOSAL_UNSPECIFIED
    static final int DISPOSAL_NONE
    static final int DISPOSAL_BACKGROUND
    static final int DISPOSAL_PREVIOUS
com.yd.photoeditor.imageprocessing.filter.ImageRender$6
androidx.recyclerview.widget.FastScroller:
    public boolean isDragging()
    boolean isVisible()
    android.graphics.drawable.Drawable getHorizontalTrackDrawable()
    android.graphics.drawable.Drawable getHorizontalThumbDrawable()
    android.graphics.drawable.Drawable getVerticalTrackDrawable()
    android.graphics.drawable.Drawable getVerticalThumbDrawable()
    private static final int STATE_HIDDEN
    private static final int STATE_VISIBLE
    private static final int STATE_DRAGGING
    private static final int DRAG_NONE
    private static final int DRAG_X
    private static final int DRAG_Y
    private static final int ANIMATION_STATE_OUT
    private static final int ANIMATION_STATE_FADING_IN
    private static final int ANIMATION_STATE_IN
    private static final int ANIMATION_STATE_FADING_OUT
    private static final int SHOW_DURATION_MS
    private static final int HIDE_DELAY_AFTER_VISIBLE_MS
    private static final int HIDE_DELAY_AFTER_DRAGGING_MS
    private static final int HIDE_DURATION_MS
    private static final int SCROLLBAR_FULL_OPAQUE
com.eptonic.photocollage.resEncryption.utils.XLog:
    private void <init>()
    public static int v(java.lang.String,java.lang.String)
    public static int v(java.lang.String,java.lang.String,java.lang.Throwable)
    public static int d(java.lang.String,java.lang.String)
    public static int d(java.lang.String,java.lang.String,java.lang.Throwable)
    public static int i(java.lang.String,java.lang.String)
    public static int i(java.lang.String,java.lang.String,java.lang.Throwable)
    public static int w(java.lang.String,java.lang.String)
    public static int w(java.lang.String,java.lang.String,java.lang.Throwable)
    public static int w(java.lang.String,java.lang.Throwable)
    public static int e(java.lang.String,java.lang.String)
    public static int e(java.lang.String,java.lang.String,java.lang.Throwable)
    public static int wtf(java.lang.String,java.lang.String,java.lang.Throwable)
    public static java.lang.String getStackTraceString(java.lang.Throwable)
    public static int println(int,java.lang.String,java.lang.String)
    public static final int VERBOSE
    public static final int DEBUG
    public static final int INFO
    public static final int WARN
    public static final int ERROR
    public static final int ASSERT
androidx.core.R$drawable
androidx.core.view.InputDeviceCompat
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener
com.google.android.material.bottomnavigation.BottomNavigationItemView
androidx.transition.TranslationAnimationCreator$TransitionPositionListener
androidx.core.provider.FontRequest:
    public void <init>(java.lang.String,java.lang.String,java.lang.String,int)
androidx.core.graphics.TypefaceCompatApi28Impl:
    private static final java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
    private static final int RESOLVE_BY_FONT_TABLE
    private static final java.lang.String DEFAULT_FAMILY
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span:
    public int findFirstVisibleItemPosition()
    public int findFirstCompletelyVisibleItemPosition()
    public int findLastVisibleItemPosition()
    public int findLastCompletelyVisibleItemPosition()
    int findOneVisibleChild(int,int,boolean)
    static final int INVALID_LINE
com.bumptech.glide.load.data.mediastore.ThumbFetcher:
    private static final java.lang.String TAG
com.bumptech.glide.load.model.GlideUrl:
    public java.lang.String toStringUrl()
    private static final java.lang.String ALLOWED_URI_CHARS
androidx.core.content.pm.PermissionInfoCompat$ProtectionFlags
androidx.loader.app.LoaderManagerImpl$LoaderInfo:
    void <init>(int,android.os.Bundle,androidx.loader.content.Loader,androidx.loader.content.Loader)
    androidx.loader.content.Loader setCallback(androidx.lifecycle.LifecycleOwner,androidx.loader.app.LoaderManager$LoaderCallbacks)
    boolean isCallbackWaitingForData()
    public void onLoadComplete(androidx.loader.content.Loader,java.lang.Object)
androidx.core.provider.FontsContractCompat$FontRequestCallback$FontRequestFailReason
androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream
com.bumptech.glide.request.RequestFutureTarget$Waiter
androidx.recyclerview.widget.ItemTouchHelper$5
org.greenrobot.greendao.async.AsyncOperationListener
androidx.core.net.ConnectivityManagerCompat$RestrictBackgroundStatus
com.google.android.material.R$integer:
    private void <init>()
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB:
    public void refreshVisibility()
com.eptonic.photocollage.ui.wrapper.dah.ghjf.gfhs.fhsj.ghsj.hfjsh.fhsj.fhsj.hfjs.fdj.sjhfs.fgsj.jgks.vbb.uiManager.BaseTemplateManager
androidx.versionedparcelable.VersionedParcelize
com.google.android.material.shape.CornerFamily
androidx.recyclerview.widget.ChildHelper:
    private static final boolean DEBUG
    private static final java.lang.String TAG
com.bumptech.glide.RequestBuilder:
    protected void <init>(java.lang.Class,com.bumptech.glide.RequestBuilder)
    public com.bumptech.glide.RequestBuilder transition(com.bumptech.glide.TransitionOptions)
    public com.bumptech.glide.RequestBuilder listener(com.bumptech.glide.request.RequestListener)
    public com.bumptech.glide.RequestBuilder error(com.bumptech.glide.RequestBuilder)
    public com.bumptech.glide.RequestBuilder thumbnail(com.bumptech.glide.RequestBuilder)
    public varargs com.bumptech.glide.RequestBuilder thumbnail(com.bumptech.glide.RequestBuilder[])
    public com.bumptech.glide.RequestBuilder thumbnail(float)
    public com.bumptech.glide.RequestBuilder load(android.graphics.Bitmap)
    public com.bumptech.glide.RequestBuilder load(android.graphics.drawable.Drawable)
    public com.bumptech.glide.RequestBuilder load(java.net.URL)
    public com.bumptech.glide.RequestBuilder load(byte[])
    public com.bumptech.glide.request.FutureTarget into(int,int)
    public com.bumptech.glide.request.FutureTarget submit()
    public com.bumptech.glide.request.FutureTarget submit(int,int)
    public com.bumptech.glide.request.target.Target preload(int,int)
    public com.bumptech.glide.request.target.Target preload()
    public com.bumptech.glide.request.target.Target downloadOnly(com.bumptech.glide.request.target.Target)
    public com.bumptech.glide.request.FutureTarget downloadOnly(int,int)
    protected com.bumptech.glide.RequestBuilder getDownloadOnlyRequest()
    public synthetic bridge java.lang.Object load(java.lang.Object)
    public synthetic bridge java.lang.Object load(byte[])
    public synthetic bridge java.lang.Object load(java.net.URL)
    public synthetic bridge java.lang.Object load(java.lang.Integer)
    public synthetic bridge java.lang.Object load(java.io.File)
    public synthetic bridge java.lang.Object load(android.net.Uri)
    public synthetic bridge java.lang.Object load(java.lang.String)
    public synthetic bridge java.lang.Object load(android.graphics.drawable.Drawable)
    public synthetic bridge java.lang.Object load(android.graphics.Bitmap)
androidx.recyclerview.widget.ThreadUtil$MainThreadCallback
com.bumptech.glide.request.transition.BitmapContainerTransitionFactory
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator:
    void <init>(androidx.core.graphics.PathParser$PathDataNode[])
com.google.android.material.shape.ShapePath$PathQuadOperation
androidx.lifecycle.ViewModelProvider$NewInstanceFactory
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams:
    public void <init>(androidx.constraintlayout.widget.ConstraintLayout$LayoutParams)
    public void reset()
    public static final int MATCH_CONSTRAINT
    public static final int PARENT_ID
    public static final int UNSET
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int LEFT
    public static final int RIGHT
    public static final int TOP
    public static final int BOTTOM
    public static final int BASELINE
    public static final int START
    public static final int END
    public static final int MATCH_CONSTRAINT_WRAP
    public static final int MATCH_CONSTRAINT_SPREAD
    public static final int MATCH_CONSTRAINT_PERCENT
    public static final int CHAIN_SPREAD
    public static final int CHAIN_SPREAD_INSIDE
    public static final int CHAIN_PACKED
androidx.viewpager2.widget.ViewPager2$3
androidx.lifecycle.ViewModelProvider:
    public void <init>(androidx.lifecycle.ViewModelStoreOwner,androidx.lifecycle.ViewModelProvider$Factory)
    private static final java.lang.String DEFAULT_KEY
org.greenrobot.greendao.rx.RxDao$4
androidx.loader.app.LoaderManagerImpl:
    private androidx.loader.content.Loader createAndInstallLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks,androidx.loader.content.Loader)
    public androidx.loader.content.Loader initLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
    public androidx.loader.content.Loader restartLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
    public void destroyLoader(int)
    public androidx.loader.content.Loader getLoader(int)
    public boolean hasRunningLoaders()
    static final java.lang.String TAG
androidx.loader.app.LoaderManager:
    public static void enableDebugLogging(boolean)
    public abstract androidx.loader.content.Loader initLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
    public abstract androidx.loader.content.Loader restartLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
    public abstract void destroyLoader(int)
    public abstract androidx.loader.content.Loader getLoader(int)
    public boolean hasRunningLoaders()
com.google.android.material.shape.TriangleEdgeTreatment
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl:
    public void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
    public boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
    public void onCloseSubMenu(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.loader.R$integer
androidx.core.graphics.TypefaceCompatApi26Impl:
    private static final java.lang.String TAG
    private static final java.lang.String FONT_FAMILY_CLASS
    private static final java.lang.String ADD_FONT_FROM_ASSET_MANAGER_METHOD
    private static final java.lang.String ADD_FONT_FROM_BUFFER_METHOD
    private static final java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
    private static final java.lang.String FREEZE_METHOD
    private static final java.lang.String ABORT_CREATION_METHOD
    private static final int RESOLVE_BY_FONT_TABLE
androidx.core.view.DragStartHelper$2
androidx.arch.core.util.Function
androidx.recyclerview.widget.OrientationHelper$1:
    public void offsetChild(android.view.View,int)
org.intellij.lang.annotations.JdkConstants$CursorType
androidx.annotation.RequiresPermission$Write
androidx.core.graphics.drawable.IconCompat:
    public static androidx.core.graphics.drawable.IconCompat createWithResource(android.content.Context,int)
    public static androidx.core.graphics.drawable.IconCompat createWithResource(android.content.res.Resources,java.lang.String,int)
    public static androidx.core.graphics.drawable.IconCompat createWithBitmap(android.graphics.Bitmap)
    public static androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmap(android.graphics.Bitmap)
    public static androidx.core.graphics.drawable.IconCompat createWithData(byte[],int,int)
    public static androidx.core.graphics.drawable.IconCompat createWithContentUri(java.lang.String)
    public static androidx.core.graphics.drawable.IconCompat createWithContentUri(android.net.Uri)
    private void <init>(int)
    private android.graphics.drawable.Drawable loadDrawableInner(android.content.Context)
    private static android.content.res.Resources getResources(android.content.Context,java.lang.String)
    public static androidx.core.graphics.drawable.IconCompat createFromBundle(android.os.Bundle)
    public static androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon)
    public static androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)
    private static int getType(android.graphics.drawable.Icon)
    private static android.net.Uri getUri(android.graphics.drawable.Icon)
    static android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)
    public int getType()
    public android.graphics.Bitmap getBitmap()
    public android.net.Uri getUri()
    public androidx.core.graphics.drawable.IconCompat setTint(int)
    public androidx.core.graphics.drawable.IconCompat setTintList(android.content.res.ColorStateList)
    public androidx.core.graphics.drawable.IconCompat setTintMode(android.graphics.PorterDuff$Mode)
    public android.graphics.drawable.Icon toIcon()
    public void checkResource(android.content.Context)
    public android.graphics.drawable.Drawable loadDrawable(android.content.Context)
    public void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context)
    public android.os.Bundle toBundle()
    private static final java.lang.String TAG
    public static final int TYPE_UNKNOWN
    private static final float ADAPTIVE_ICON_INSET_FACTOR
    private static final float DEFAULT_VIEW_PORT_SCALE
    private static final float ICON_DIAMETER_FACTOR
    private static final float BLUR_FACTOR
    private static final float KEY_SHADOW_OFFSET_FACTOR
    private static final int KEY_SHADOW_ALPHA
    private static final int AMBIENT_SHADOW_ALPHA
    private static final java.lang.String EXTRA_TYPE
    private static final java.lang.String EXTRA_OBJ
    private static final java.lang.String EXTRA_INT1
    private static final java.lang.String EXTRA_INT2
    private static final java.lang.String EXTRA_TINT_LIST
    private static final java.lang.String EXTRA_TINT_MODE
com.google.android.material.bottomnavigation.BottomNavigationMenu
org.greenrobot.greendao.annotation.apihint.Experimental
androidx.core.content.res.GradientColorInflaterCompat:
    private void <init>()
    static android.graphics.Shader createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
    private static final int TILE_MODE_CLAMP
    private static final int TILE_MODE_REPEAT
    private static final int TILE_MODE_MIRROR
androidx.constraintlayout.widget.Group
com.yd.photoeditor.vv.DialogUtils$4
com.google.android.material.shadow.ShadowDrawableWrapper
androidx.viewpager2.widget.ScrollEventAdapter
com.yd.photoeditor.view.CaptionImageView$OnChangeDirectionListener
com.eptonic.photocollage.ui.next.s.xx.xxx.yy.cc.activity.MainActivityPhotoCollage:
    private static final int EXIT_CODE
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments:
    public int getGranularity()
    public boolean getExtendSelection()
androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener
com.bumptech.glide.request.transition.ViewAnimationFactory$ConcreteViewTransitionAnimationFactory
androidx.customview.view.AbsSavedState:
    protected void <init>(android.os.Parcel)
com.google.android.material.button.MaterialButton$IconGravity
androidx.transition.Slide$6
androidx.appcompat.app.AppCompatDelegate$NightMode
androidx.core.os.LocaleListPlatformWrapper
com.bumptech.glide.load.data.InputStreamRewinder:
    private static final int MARK_READ_LIMIT
androidx.cursoradapter.widget.SimpleCursorAdapter
androidx.core.internal.view.SupportMenuItem:
    public abstract boolean requiresActionButton()
    public abstract boolean requiresOverflow()
    public static final int SHOW_AS_ACTION_NEVER
    public static final int SHOW_AS_ACTION_IF_ROOM
    public static final int SHOW_AS_ACTION_ALWAYS
    public static final int SHOW_AS_ACTION_WITH_TEXT
    public static final int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
androidx.customview.R$layout
com.google.android.material.snackbar.BaseTransientBottomBar$9
com.google.android.material.bottomsheet.BottomSheetDialog$2
com.google.android.material.tabs.TabLayout$OnTabSelectedListener
androidx.appcompat.view.menu.MenuItemImpl:
    java.lang.Runnable getCallback()
    public android.view.MenuItem setCallback(java.lang.Runnable)
    public boolean requiresOverflow()
    private static final java.lang.String TAG
    private static final int SHOW_AS_ACTION_MASK
    private static final int CHECKABLE
    private static final int CHECKED
    private static final int EXCLUSIVE
    private static final int HIDDEN
    private static final int ENABLED
    private static final int IS_ACTION
    static final int NO_ICON
com.google.android.material.tabs.TabLayoutMediator$TabConfigurationStrategy
androidx.transition.GhostViewHolder
androidx.recyclerview.widget.SortedList$Callback
androidx.fragment.app.FragmentManager$BackStackEntry
androidx.drawerlayout.R
androidx.vectordrawable.R$drawable
com.bumptech.glide.load.model.stream.HttpUriLoader$Factory:
    public void teardown()
androidx.core.view.DragStartHelper
com.google.android.material.datepicker.MaterialDatePicker$1
androidx.versionedparcelable.VersionedParcel:
    private void writeCollection(java.util.Collection,int)
    private void writeCollection(java.util.Collection)
    private int getType(java.lang.Object)
    private void writeSerializable(java.io.Serializable)
    private int readExceptionCode()
    private java.lang.Exception readException(int,java.lang.String)
    protected static java.lang.Throwable getRootCause(java.lang.Throwable)
    private java.lang.Exception createException(int,java.lang.String)
    private java.util.Collection readCollection(java.util.Collection)
    protected abstract void writeByteArray(byte[],int,int)
    protected abstract void writeLong(long)
    protected abstract void writeFloat(float)
    protected abstract void writeDouble(double)
    protected abstract void writeStrongBinder(android.os.IBinder)
    protected abstract void writeStrongInterface(android.os.IInterface)
    protected abstract void writeBundle(android.os.Bundle)
    protected abstract long readLong()
    protected abstract float readFloat()
    protected abstract double readDouble()
    protected abstract android.os.IBinder readStrongBinder()
    protected abstract android.os.Bundle readBundle()
    public void writeStrongInterface(android.os.IInterface,int)
    public void writeBundle(android.os.Bundle,int)
    public void writeByteArray(byte[],int,int,int)
    public void writeLong(long,int)
    public void writeFloat(float,int)
    public void writeDouble(double,int)
    public void writeStrongBinder(android.os.IBinder,int)
    public long readLong(long,int)
    public float readFloat(float,int)
    public double readDouble(double,int)
    public android.os.IBinder readStrongBinder(android.os.IBinder,int)
    public android.os.Bundle readBundle(android.os.Bundle,int)
    public void writeByte(byte,int)
    public void writeSize(android.util.Size,int)
    public void writeSizeF(android.util.SizeF,int)
    public void writeSparseBooleanArray(android.util.SparseBooleanArray,int)
    public void writeBooleanArray(boolean[],int)
    protected void writeBooleanArray(boolean[])
    public boolean[] readBooleanArray(boolean[],int)
    protected boolean[] readBooleanArray()
    public void writeCharArray(char[],int)
    public char[] readCharArray(char[],int)
    public void writeIntArray(int[],int)
    protected void writeIntArray(int[])
    public int[] readIntArray(int[],int)
    protected int[] readIntArray()
    public void writeLongArray(long[],int)
    protected void writeLongArray(long[])
    public long[] readLongArray(long[],int)
    protected long[] readLongArray()
    public void writeFloatArray(float[],int)
    protected void writeFloatArray(float[])
    public float[] readFloatArray(float[],int)
    protected float[] readFloatArray()
    public void writeDoubleArray(double[],int)
    protected void writeDoubleArray(double[])
    public double[] readDoubleArray(double[],int)
    protected double[] readDoubleArray()
    public void writeSet(java.util.Set,int)
    public void writeList(java.util.List,int)
    public void writeMap(java.util.Map,int)
    public void writeArray(java.lang.Object[],int)
    protected void writeArray(java.lang.Object[])
    public void writeSerializable(java.io.Serializable,int)
    public void writeException(java.lang.Exception,int)
    protected void writeNoException()
    public java.lang.Exception readException(java.lang.Exception,int)
    public byte readByte(byte,int)
    public android.util.Size readSize(android.util.Size,int)
    public android.util.SizeF readSizeF(android.util.SizeF,int)
    public android.util.SparseBooleanArray readSparseBooleanArray(android.util.SparseBooleanArray,int)
    public java.util.Set readSet(java.util.Set,int)
    public java.util.List readList(java.util.List,int)
    public java.util.Map readMap(java.util.Map,int)
    public java.lang.Object[] readArray(java.lang.Object[],int)
    protected java.lang.Object[] readArray(java.lang.Object[])
    protected java.io.Serializable readSerializable()
    private static final java.lang.String TAG
    private static final int EX_SECURITY
    private static final int EX_BAD_PARCELABLE
    private static final int EX_ILLEGAL_ARGUMENT
    private static final int EX_NULL_POINTER
    private static final int EX_ILLEGAL_STATE
    private static final int EX_NETWORK_MAIN_THREAD
    private static final int EX_UNSUPPORTED_OPERATION
    private static final int EX_PARCELABLE
    private static final int TYPE_VERSIONED_PARCELABLE
    private static final int TYPE_PARCELABLE
    private static final int TYPE_SERIALIZABLE
    private static final int TYPE_STRING
    private static final int TYPE_BINDER
    private static final int TYPE_INTEGER
    private static final int TYPE_FLOAT
androidx.transition.ChangeTransform$1
androidx.core.text.TextDirectionHeuristicCompat:
    public abstract boolean isRtl(char[],int,int)
androidx.core.app.SharedElementCallback:
    public void <init>()
    private static android.graphics.Bitmap createDrawableBitmap(android.graphics.drawable.Drawable)
    public void onRejectSharedElements(java.util.List)
    public android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)
    public android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable)
    public void onSharedElementsArrived(java.util.List,java.util.List,androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener)
    private android.graphics.Matrix mTempMatrix
    private static final int MAX_IMAGE_SIZE
    private static final java.lang.String BUNDLE_SNAPSHOT_BITMAP
    private static final java.lang.String BUNDLE_SNAPSHOT_IMAGE_SCALETYPE
    private static final java.lang.String BUNDLE_SNAPSHOT_IMAGE_MATRIX
androidx.core.graphics.drawable.IconCompat$IconType
android.support.v4.os.IResultReceiver
androidx.recyclerview.widget.SortedListAdapterCallback
androidx.transition.Styleable$ArcMotion
com.yd.photoeditor.view.OrientationImageView:
    public void saveInstanceState(android.os.Bundle)
    public void restoreInstanceState(android.os.Bundle)
    public static final int FLIP_HORIZONTAL
    public static final int FLIP_VERTICAL
com.bumptech.glide.GenericTransitionOptions:
    public static com.bumptech.glide.GenericTransitionOptions withNoTransition()
    public static com.bumptech.glide.GenericTransitionOptions with(int)
    public static com.bumptech.glide.GenericTransitionOptions with(com.bumptech.glide.request.transition.ViewPropertyTransition$Animator)
    public static com.bumptech.glide.GenericTransitionOptions with(com.bumptech.glide.request.transition.TransitionFactory)
androidx.viewpager2.widget.ViewPager2$ScrollState
com.google.android.material.shape.AbsoluteCornerSize:
    public float getCornerSize()
com.google.android.material.floatingactionbutton.BorderDrawable$1
androidx.transition.ViewUtilsApi21:
    public void setAnimationMatrix(android.view.View,android.graphics.Matrix)
androidx.transition.R$drawable
androidx.transition.Styleable$ChangeTransform
com.google.android.material.snackbar.Snackbar
com.google.android.material.R$color:
    private void <init>()
androidx.core.view.PointerIconCompat
androidx.appcompat.view.SupportMenuInflater$MenuState:
    private static final int defaultGroupId
    private static final int defaultItemId
    private static final int defaultItemCategory
    private static final int defaultItemOrder
    private static final int defaultItemCheckable
    private static final boolean defaultItemChecked
    private static final boolean defaultItemVisible
    private static final boolean defaultItemEnabled
androidx.annotation.ColorInt
androidx.recyclerview.widget.GridLayoutManager$LayoutParams:
    public void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams)
    public static final int INVALID_SPAN_ID
androidx.transition.Styleable$Fade
androidx.appcompat.view.menu.StandardMenuPopup:
    public android.os.Parcelable onSaveInstanceState()
    public void onRestoreInstanceState(android.os.Parcelable)
androidx.viewpager.widget.ViewPager$ItemInfo
org.greenrobot.greendao.rx.RxUtils$1
androidx.viewpager.widget.ViewPager$1
androidx.core.app.ActivityOptionsCompat
androidx.cardview.R$style
com.eptonic.photocollage.ui.dahjk.ahjd.fah.fha.fragment.BaseFragment:
    public void resultAddTextItem(java.lang.String,int,java.lang.String)
    public void resultBackground(android.net.Uri)
    public void resultEditImage(android.net.Uri)
    public void resultEditTextItem(java.lang.String,int,java.lang.String)
    public void resultFromPhotoEditor(android.net.Uri)
    public void resultPickMultipleImages(android.net.Uri[])
    public void resultSticker(android.net.Uri)
    public void resultStickers(android.net.Uri[])
    public java.lang.String getTitle()
    public void pickImageFromGallery()
    public void pickMultipleImageFromGallery()
    public void pickMultipleImageFromGalleryNew(android.app.Activity)
    public void getImageFromCamera()
    public android.net.Uri getImageUri()
    public android.net.Uri getImageUri(android.content.Context,android.graphics.Bitmap)
    public android.content.Context getTheContext()
    protected static final int BACKGROUND_ITEM
    protected static final int CAPTURE_IMAGE_REQUEST_CODE
    protected static final java.lang.String CAPTURE_TITLE
    public static final int MAX_NEEDED_PHOTOS
    protected static final int NORMAL_IMAGE_ITEM
    protected static final int PICK_BACKGROUND_REQUEST_CODE
    protected static final int PICK_IMAGE_REQUEST_CODE
    protected static final int PICK_MULTIPLE_IMAGE_REQUEST_CODE
    protected static final int PICK_STICKER_REQUEST_CODE
    protected static final int REQUEST_ADD_TEXT_ITEM
    protected static final int REQUEST_EDIT_IMAGE
    protected static final int REQUEST_EDIT_TEXT_ITEM
    protected static final int REQUEST_PHOTO_EDITOR_CODE
    protected static final int STICKER_ITEM
androidx.transition.RectEvaluator:
    void <init>(android.graphics.Rect)
androidx.recyclerview.widget.AsyncListUtil$1
com.google.android.material.circularreveal.CircularRevealLinearLayout
com.google.android.material.shape.ShapePath:
    public void <init>(float,float)
    public void quadToPoint(float,float,float,float)
    private static final float ANGLE_UP
    protected static final float ANGLE_LEFT
com.eptonic.photocollage.resEncryption.utils.Reflect$1
androidx.core.text.PrecomputedTextCompat:
    public static androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)
    private void <init>(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,int[])
    private void <init>(android.text.PrecomputedText,androidx.core.text.PrecomputedTextCompat$Params)
    public static java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)
    public android.text.PrecomputedText getPrecomputedText()
    public int getParagraphCount()
    public int getParagraphStart(int)
    public int getParagraphEnd(int)
    private final int[] mParagraphEnds
    private final android.text.PrecomputedText mWrapped
    private static final char LINE_FEED
org.greenrobot.greendao.rx.RxBase
androidx.appcompat.app.ActionBar$TabListener
com.google.android.material.internal.ParcelableSparseBooleanArray$1
com.google.android.material.snackbar.BaseTransientBottomBar$12
com.google.android.material.button.MaterialButtonToggleGroup$CheckedStateTracker
com.bumptech.glide.load.ImageHeaderParserUtils:
    private void <init>()
    private static final int MARK_READ_LIMIT
androidx.appcompat.widget.AbsActionBarView:
    public void animateToVisibility(int)
    public boolean showOverflowMenu()
    public void postShowOverflowMenu()
    public boolean hideOverflowMenu()
    public boolean isOverflowMenuShowing()
    public boolean isOverflowMenuShowPending()
    public boolean isOverflowReserved()
    public boolean canShowOverflowMenu()
    public void dismissPopupMenus()
    private static final int FADE_DURATION
androidx.drawerlayout.R$style
androidx.core.app.NotificationCompat$StreamType
com.bumptech.glide.load.resource.bitmap.RoundedCorners
com.google.android.material.R$drawable:
    private void <init>()
androidx.core.view.LayoutInflaterCompat:
    private void <init>()
    public static void setFactory(android.view.LayoutInflater,androidx.core.view.LayoutInflaterFactory)
    public static androidx.core.view.LayoutInflaterFactory getFactory(android.view.LayoutInflater)
    private static final java.lang.String TAG
androidx.appcompat.widget.ActivityChooserView$2
androidx.core.view.MotionEventCompat:
    public static int getActionIndex(android.view.MotionEvent)
    public static int findPointerIndex(android.view.MotionEvent,int)
    public static int getPointerId(android.view.MotionEvent,int)
    public static float getX(android.view.MotionEvent,int)
    public static float getY(android.view.MotionEvent,int)
    public static int getPointerCount(android.view.MotionEvent)
    public static int getSource(android.view.MotionEvent)
    public static float getAxisValue(android.view.MotionEvent,int)
    public static float getAxisValue(android.view.MotionEvent,int,int)
    public static int getButtonState(android.view.MotionEvent)
    private void <init>()
    public static final int ACTION_MASK
    public static final int ACTION_POINTER_DOWN
    public static final int ACTION_POINTER_UP
    public static final int ACTION_HOVER_MOVE
    public static final int ACTION_SCROLL
    public static final int ACTION_POINTER_INDEX_MASK
    public static final int ACTION_POINTER_INDEX_SHIFT
    public static final int ACTION_HOVER_ENTER
    public static final int ACTION_HOVER_EXIT
    public static final int AXIS_X
    public static final int AXIS_Y
    public static final int AXIS_PRESSURE
    public static final int AXIS_SIZE
    public static final int AXIS_TOUCH_MAJOR
    public static final int AXIS_TOUCH_MINOR
    public static final int AXIS_TOOL_MAJOR
    public static final int AXIS_TOOL_MINOR
    public static final int AXIS_ORIENTATION
    public static final int AXIS_VSCROLL
    public static final int AXIS_HSCROLL
    public static final int AXIS_Z
    public static final int AXIS_RX
    public static final int AXIS_RY
    public static final int AXIS_RZ
    public static final int AXIS_HAT_X
    public static final int AXIS_HAT_Y
    public static final int AXIS_LTRIGGER
    public static final int AXIS_RTRIGGER
    public static final int AXIS_THROTTLE
    public static final int AXIS_RUDDER
    public static final int AXIS_WHEEL
    public static final int AXIS_GAS
    public static final int AXIS_BRAKE
    public static final int AXIS_DISTANCE
    public static final int AXIS_TILT
    public static final int AXIS_SCROLL
    public static final int AXIS_RELATIVE_X
    public static final int AXIS_RELATIVE_Y
    public static final int AXIS_GENERIC_1
    public static final int AXIS_GENERIC_2
    public static final int AXIS_GENERIC_3
    public static final int AXIS_GENERIC_4
    public static final int AXIS_GENERIC_5
    public static final int AXIS_GENERIC_6
    public static final int AXIS_GENERIC_7
    public static final int AXIS_GENERIC_8
    public static final int AXIS_GENERIC_9
    public static final int AXIS_GENERIC_10
    public static final int AXIS_GENERIC_11
    public static final int AXIS_GENERIC_12
    public static final int AXIS_GENERIC_13
    public static final int AXIS_GENERIC_14
    public static final int AXIS_GENERIC_15
    public static final int AXIS_GENERIC_16
    public static final int BUTTON_PRIMARY
androidx.core.app.JobIntentService$CompatJobEngine
androidx.core.view.NestedScrollingChildHelper:
    public void onDetachedFromWindow()
    public void onStopNestedScroll(android.view.View)
androidx.vectordrawable.animated.R$id
androidx.core.view.DragAndDropPermissionsCompat
androidx.transition.Styleable$PatternPathMotion
com.yd.photoeditor.imageprocessing.filter.blend.P1
com.google.android.material.internal.CollapsingTextHelper:
    public void setCollapsedTextSize(float)
    public int getExpandedTextGravity()
    public int getCollapsedTextGravity()
    public void setExpandedTextAppearance(int)
    public void setExpandedTypeface(android.graphics.Typeface)
    public android.graphics.Typeface getCollapsedTypeface()
    public android.graphics.Typeface getExpandedTypeface()
    public float getCollapsedTextSize()
    public float getExpandedTextSize()
    public java.lang.CharSequence getText()
    public android.content.res.ColorStateList getExpandedTextColor()
    private static final boolean DEBUG_DRAW
androidx.customview.R$dimen
androidx.core.provider.FontsContractCompat$4$5
androidx.appcompat.widget.AppCompatRadioButton:
    public void <init>(android.content.Context)
androidx.core.content.ContextCompat$LegacyServiceMapHolder
com.eptonic.photocollage.ui.mutitouchh.MultiTouchController$PointInfo:
    public int[] getPointerIds()
    public float getPressure()
    public int getAction()
androidx.drawerlayout.R$attr
androidx.vectordrawable.R
androidx.appcompat.app.AppCompatDelegateImpl:
    void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback)
    void <init>(android.content.Context,android.app.Activity,androidx.appcompat.app.AppCompatCallback)
    public void setSupportActionBar(androidx.appcompat.widget.Toolbar)
    public boolean hasWindowFeature(int)
    public void setHandleNativeActionModesEnabled(boolean)
    android.view.ViewGroup getSubDecor()
    public void setLocalNightMode(int)
    public final androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
    private static final boolean DEBUG
    static final java.lang.String EXCEPTION_HANDLER_MESSAGE_SUFFIX
com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate:
    public void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar)
androidx.viewpager2.widget.MarginPageTransformer
androidx.activity.R$attr
com.eptonic.photocollage.ui.next.s.xx.xxx.yy.cc.activity.TemplateActivity:
    public static final int REQUEST_SELECT_PHOTO
androidx.recyclerview.R$dimen:
    private void <init>()
com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl:
    public float getRadius()
com.google.android.material.circularreveal.CircularRevealRelativeLayout
androidx.annotation.Size
androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter
androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice
com.bumptech.glide.request.transition.DrawableCrossFadeFactory$Builder
com.eptonic.photocollage.ui.next.s.xx.xxx.yy.cc.activity.MyBaseActivity:
    private static final java.lang.String TAG
androidx.coordinatorlayout.R$string
com.google.android.material.animation.MatrixEvaluator:
    public synthetic bridge java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)
com.yd.photoeditor.view.RectangleCropMaskImageView
com.bumptech.glide.request.transition.BitmapContainerTransitionFactory$BitmapGlideAnimation
com.google.android.material.snackbar.BaseTransientBottomBar
com.google.android.material.tabs.TabLayout$ViewPagerOnTabSelectedListener
com.google.android.material.datepicker.RangeDateSelector
com.eptonic.photocollage.ui.view.sticker.StickerLayout:
    public void setStickerIcons(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
    public com.eptonic.photocollage.ui.view.sticker.Sticker addMaskColorSticker(android.graphics.Bitmap,int)
    public com.eptonic.photocollage.ui.view.sticker.Sticker addMaskImageSticker(android.graphics.Bitmap,android.graphics.Bitmap)
    public void addTextSticker(java.lang.String,int)
    public void addTextSticker(java.lang.String,android.graphics.Bitmap)
androidx.vectordrawable.animated.R$drawable
androidx.viewpager2.widget.CompositeOnPageChangeCallback
androidx.annotation.StringDef
androidx.core.graphics.TypefaceCompatUtil:
    private void <init>()
    private static final java.lang.String TAG
    private static final java.lang.String CACHE_FILE_PREFIX
com.bumptech.glide.load.resource.drawable.DrawableTransitionOptions
androidx.appcompat.app.ResourcesFlusher:
    private void <init>()
    private static final java.lang.String TAG
com.yd.photoeditor.vv.DialogUtils:
    public void <init>()
    public static android.app.Dialog showCoolConfirmDialog(android.content.Context,int,int,com.yd.photoeditor.vv.DialogUtils$ConfirmDialogOnClickListener)
    public static android.app.Dialog createCustomInputDialog(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.yd.photoeditor.vv.DialogUtils$InputDialogOnClickListener)
    public static android.app.Dialog createCustomOkDialog(android.app.Activity,java.lang.String,java.lang.String)
    public static android.app.Dialog createCustomOkDialog(android.app.Activity,java.lang.String,java.lang.String,com.yd.photoeditor.vv.DialogUtils$DialogOnClickListener)
    public static android.app.Dialog createCustomConfirmDialog(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.yd.photoeditor.vv.DialogUtils$ConfirmDialogOnClickListener)
    public static android.app.Dialog createEditImageDialog(android.content.Context,com.yd.photoeditor.vv.DialogUtils$EditedImageLongClickListener,boolean)
    public static android.app.Dialog createDrawEffectDialog(android.content.Context,com.yd.photoeditor.vv.DialogUtils$OnSelectDrawEffectListener,boolean)
    public static android.app.Dialog createPreviewDrawingDialog(android.content.Context,com.yd.photoeditor.vv.DialogUtils$OnSelectPaintSizeListener,boolean)
    public static android.app.Dialog showDialog(android.content.Context,int,int)
    public static android.app.Dialog showDialog(android.content.Context,int,int,com.yd.photoeditor.vv.DialogUtils$DialogOnClickListener)
    public static android.app.Dialog showDialog(android.content.Context,java.lang.String,java.lang.String,com.yd.photoeditor.vv.DialogUtils$DialogOnClickListener)
    public static android.app.Dialog showDialogOkClick(android.content.Context,int,int,int,android.content.DialogInterface$OnClickListener)
    public static android.app.Dialog showConfirmDialog(android.content.Context,int,int,com.yd.photoeditor.vv.DialogUtils$ConfirmDialogOnClickListener)
    public static android.app.Dialog showConfirmDialog(android.content.Context,int,int,int,int,com.yd.photoeditor.vv.DialogUtils$ConfirmDialogOnClickListener)
    public static android.app.Dialog showConfirmDialog(android.content.Context,java.lang.String,java.lang.String,com.yd.photoeditor.vv.DialogUtils$ConfirmDialogOnClickListener)
androidx.transition.ImageViewUtils
androidx.recyclerview.widget.DiffUtil$ItemCallback
androidx.versionedparcelable.ParcelUtils
androidx.appcompat.app.AlertController$ButtonHandler:
    private static final int MSG_DISMISS_DIALOG
org.greenrobot.greendao.annotation.Property
com.bumptech.glide.util.Util:
    private void <init>()
    public static int getSize(android.graphics.Bitmap)
    public static void assertBackgroundThread()
    public static int hashCode(int)
    public static int hashCode(boolean)
    private static final int HASH_MULTIPLIER
    private static final int HASH_ACCUMULATOR
com.bumptech.glide.load.resource.bitmap.CenterInside:
    private static final java.lang.String ID
androidx.recyclerview.widget.MessageThreadUtil$MessageQueue
org.greenrobot.greendao.DaoException:
    public void <init>()
    public void <init>(java.lang.Throwable)
    private static final long serialVersionUID
com.google.android.material.bottomappbar.BottomAppBar$3
com.bumptech.glide.load.model.FileLoader$Factory:
    public final void teardown()
androidx.core.view.accessibility.AccessibilityEventCompat:
    private void <init>()
    public static int getRecordCount(android.view.accessibility.AccessibilityEvent)
    public static void appendRecord(android.view.accessibility.AccessibilityEvent,androidx.core.view.accessibility.AccessibilityRecordCompat)
    public static androidx.core.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int)
    public static androidx.core.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent)
    public static void setMovementGranularity(android.view.accessibility.AccessibilityEvent,int)
    public static int getMovementGranularity(android.view.accessibility.AccessibilityEvent)
    public static void setAction(android.view.accessibility.AccessibilityEvent,int)
    public static int getAction(android.view.accessibility.AccessibilityEvent)
    public static final int TYPE_VIEW_HOVER_ENTER
    public static final int TYPE_VIEW_HOVER_EXIT
    public static final int TYPE_TOUCH_EXPLORATION_GESTURE_START
    public static final int TYPE_TOUCH_EXPLORATION_GESTURE_END
    public static final int TYPE_WINDOW_CONTENT_CHANGED
    public static final int TYPE_VIEW_SCROLLED
    public static final int TYPE_VIEW_TEXT_SELECTION_CHANGED
    public static final int TYPE_ANNOUNCEMENT
    public static final int TYPE_VIEW_ACCESSIBILITY_FOCUSED
    public static final int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    public static final int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    public static final int TYPE_GESTURE_DETECTION_START
    public static final int TYPE_GESTURE_DETECTION_END
    public static final int TYPE_TOUCH_INTERACTION_START
    public static final int TYPE_TOUCH_INTERACTION_END
    public static final int TYPE_WINDOWS_CHANGED
    public static final int TYPE_VIEW_CONTEXT_CLICKED
    public static final int TYPE_ASSIST_READING_CONTEXT
    public static final int CONTENT_CHANGE_TYPE_UNDEFINED
    public static final int CONTENT_CHANGE_TYPE_SUBTREE
    public static final int CONTENT_CHANGE_TYPE_TEXT
    public static final int CONTENT_CHANGE_TYPE_CONTENT_DESCRIPTION
    public static final int CONTENT_CHANGE_TYPE_PANE_TITLE
    public static final int CONTENT_CHANGE_TYPE_PANE_APPEARED
    public static final int CONTENT_CHANGE_TYPE_PANE_DISAPPEARED
    public static final int TYPES_ALL_MASK
androidx.core.content.res.FontResourcesParserCompat:
    private void <init>()
    private static final int NORMAL_WEIGHT
    private static final int ITALIC
    public static final int FETCH_STRATEGY_BLOCKING
    public static final int FETCH_STRATEGY_ASYNC
    public static final int INFINITE_TIMEOUT_VALUE
    private static final int DEFAULT_TIMEOUT_MILLIS
com.google.android.material.datepicker.SingleDateSelector
com.bumptech.glide.util.Synthetic
com.yd.photoeditor.imageprocessing.filter.processing.WW
androidx.fragment.app.FragmentActivity$HostCallbacks:
    public void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
    public void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
    public void onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
    public void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int)
    public boolean onShouldShowRequestPermissionRationale(java.lang.String)
org.greenrobot.greendao.annotation.ToMany
androidx.recyclerview.widget.AdapterHelper:
    varargs androidx.recyclerview.widget.AdapterHelper addUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp[])
    boolean onItemRangeChanged(int,int,java.lang.Object)
    boolean onItemRangeRemoved(int,int)
    boolean onItemRangeMoved(int,int,int)
    static final int POSITION_TYPE_INVISIBLE
    static final int POSITION_TYPE_NEW_OR_LAID_OUT
    private static final boolean DEBUG
    private static final java.lang.String TAG
androidx.core.hardware.display.DisplayManagerCompat
org.greenrobot.greendao.query.LazyList$LazyIterator
org.intellij.lang.annotations.Flow
androidx.core.app.FrameMetricsAggregator$MetricType
androidx.core.widget.TextViewCompat:
    private void <init>()
    private static java.lang.reflect.Field retrieveField(java.lang.String)
    private static int retrieveIntFromField(java.lang.reflect.Field,android.widget.TextView)
    public static void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
    public static void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
    public static int getMaxLines(android.widget.TextView)
    public static int getMinLines(android.widget.TextView)
    public static void setAutoSizeTextTypeWithDefaults(android.widget.TextView,int)
    public static void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)
    public static void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)
    public static int getAutoSizeTextType(android.widget.TextView)
    public static int getAutoSizeStepGranularity(android.widget.TextView)
    public static int getAutoSizeMinTextSize(android.widget.TextView)
    public static int getAutoSizeMaxTextSize(android.widget.TextView)
    public static int[] getAutoSizeTextAvailableSizes(android.widget.TextView)
    public static void setCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback)
    public static android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
    public static android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
    private static final java.lang.String LOG_TAG
    public static final int AUTO_SIZE_TEXT_TYPE_NONE
    public static final int AUTO_SIZE_TEXT_TYPE_UNIFORM
    private static java.lang.reflect.Field sMaximumField
    private static boolean sMaximumFieldFetched
    private static java.lang.reflect.Field sMaxModeField
    private static boolean sMaxModeFieldFetched
    private static java.lang.reflect.Field sMinimumField
    private static boolean sMinimumFieldFetched
    private static java.lang.reflect.Field sMinModeField
    private static boolean sMinModeFieldFetched
    private static final int LINES
androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback
com.yd.photoeditor.vv.HexUtil
androidx.core.graphics.PathParser:
    public static boolean interpolatePathDataNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[],float)
    private void <init>()
    private static final java.lang.String LOGTAG
com.google.android.material.button.MaterialButtonToggleGroup$OnButtonCheckedListener
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1
androidx.core.content.PermissionChecker:
    private void <init>()
    public static int checkCallingPermission(android.content.Context,java.lang.String,java.lang.String)
    public static int checkCallingOrSelfPermission(android.content.Context,java.lang.String)
    public static final int PERMISSION_GRANTED
    public static final int PERMISSION_DENIED
    public static final int PERMISSION_DENIED_APP_OP
androidx.fragment.app.FragmentTabHost$TabInfo
androidx.core.view.DragStartHelper$OnDragStartListener
androidx.core.app.NotificationCompatSideChannelService
org.greenrobot.greendao.query.AbstractQuery:
    public org.greenrobot.greendao.query.AbstractQuery setParameter(int,java.lang.Object)
    public org.greenrobot.greendao.query.AbstractQuery setParameter(int,java.util.Date)
    public org.greenrobot.greendao.query.AbstractQuery setParameter(int,java.lang.Boolean)
androidx.cardview.widget.CardViewDelegate:
    public abstract void setCardBackground(android.graphics.drawable.Drawable)
com.bumptech.glide.load.Option:
    public static com.bumptech.glide.load.Option disk(java.lang.String,com.bumptech.glide.load.Option$CacheKeyUpdater)
androidx.transition.AutoTransition:
    public void <init>(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager:
    private void unregisterForLayoutCallback(android.view.View)
    void addAccessibilityPane(android.view.View)
    void removeAccessibilityPane(android.view.View)
com.google.android.material.datepicker.RangeDateSelector$3
com.bumptech.glide.load.engine.prefill.PreFillType$Builder
androidx.loader.content.ModernAsyncTask$InternalHandler
com.yd.photoeditor.vv.DialogUtils$3
org.greenrobot.greendao.rx.RxDao$12
androidx.transition.Transition$EpicenterCallback:
    public abstract android.graphics.Rect onGetEpicenter(androidx.transition.Transition)
com.bumptech.glide.load.engine.Engine$EngineJobFactory:
    void shutdown()
com.eptonic.photocollage.ui.view.sticker.Sticker:
    public boolean isFlippedHorizontally()
    public com.eptonic.photocollage.ui.view.sticker.Sticker setFlippedHorizontally(boolean)
    public boolean isFlippedVertically()
    public com.eptonic.photocollage.ui.view.sticker.Sticker setFlippedVertically(boolean)
    public abstract com.eptonic.photocollage.ui.view.sticker.Sticker setDrawable(android.graphics.drawable.Drawable)
    public abstract com.eptonic.photocollage.ui.view.sticker.Sticker setAlpha(int)
    public float[] getBoundPoints()
    public float[] getMappedBoundPoints()
    public float[] getMappedPoints(float[])
    public android.graphics.RectF getBound()
    public void getBound(android.graphics.RectF)
    public android.graphics.RectF getMappedBound()
    public void getMappedBound(android.graphics.RectF,android.graphics.RectF)
    public android.graphics.PointF getCenterPoint()
    public android.graphics.PointF getMappedCenterPoint()
    public float getCurrentScale()
    public float getCurrentHeight()
    public float getCurrentWidth()
    public float getMatrixScale(android.graphics.Matrix)
    public boolean contains(float,float)
    public void release()
androidx.appcompat.view.ActionMode:
    public boolean isUiFocusable()
com.eptonic.photocollage.ui.view.frame.FramePhotoLayout:
    public void saveInstanceState(android.os.Bundle)
    public void build(int,int,float)
    private static final int ID_CANCEL
    private static final int ID_CHANGE
    private static final int ID_DELETE
    private static final int ID_EDIT
com.bumptech.glide.ListPreloader
androidx.recyclerview.widget.AsyncListDiffer$1$1
androidx.core.widget.PopupMenuCompat
androidx.constraintlayout.solver.Pools$SimplePool:
    private boolean isInPool(java.lang.Object)
androidx.fragment.app.DialogFragment$1
com.google.android.material.shape.RoundedCornerTreatment:
    public void <init>(float)
androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment
com.bumptech.glide.load.data.AssetPathFetcher:
    private static final java.lang.String TAG
androidx.drawerlayout.R$styleable
androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder
androidx.appcompat.widget.AppCompatImageHelper:
    void setInternalImageTint(android.content.res.ColorStateList)
com.yd.photoeditor.R$integer
androidx.loader.app.LoaderManager$LoaderCallbacks
androidx.annotation.InspectableProperty$EnumEntry
androidx.cardview.R$attr
com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool:
    private static final int MAX_SIZE
org.greenrobot.greendao.async.AsyncOperation
androidx.fragment.app.FragmentController:
    public androidx.loader.app.LoaderManager getSupportLoaderManager()
    public int getActiveFragmentsCount()
    public java.util.List getActiveFragments(java.util.List)
    public void restoreAllState(android.os.Parcelable,java.util.List)
    public void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)
    public java.util.List retainNonConfig()
    public androidx.fragment.app.FragmentManagerNonConfig retainNestedNonConfig()
    public void dispatchReallyStop()
    public void dispatchDestroyView()
    public void doLoaderStart()
    public void doLoaderStop(boolean)
    public void doLoaderRetain()
    public void doLoaderDestroy()
    public void reportLoaderStart()
    public androidx.collection.SimpleArrayMap retainLoaderNonConfig()
    public void restoreLoaderNonConfig(androidx.collection.SimpleArrayMap)
    public void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
com.google.android.material.internal.ParcelableSparseArray$1
com.yd.photoeditor.imageprocessing.filter.colour.P13:
    public static final java.lang.String KKKKKKKKKK
com.eptonic.photocollage.ui.wrapper.dah.ghjf.gfhs.fhsj.ghsj.hfjsh.fhsj.fhsj.hfjs.fdj.sjhfs.fgsj.jgks.vbb.uiManager.FreePhotoUiManager:
    public void setCurrentTab(int)
    public void onStickerFlipped(com.eptonic.photocollage.ui.view.sticker.Sticker)
    private android.widget.ImageView mCloseRecyclerIV
    private static final java.lang.String TAG
    private static final int PICK_MULTIPLE_IMAGE_REQUEST_CODE
    private static final int EDIT_STICKER_CODE
    private static final int BACKGROUND_TAB
    private static final int FILTERS_TAB
    private static final int PICTURES_TAB
    private static final int TEXT_TAB
    private static final int STICKER_TAB
com.bumptech.glide.request.transition.Transition$ViewAdapter:
    public abstract android.view.View getView()
    public abstract android.graphics.drawable.Drawable getCurrentDrawable()
    public abstract void setDrawable(android.graphics.drawable.Drawable)
org.greenrobot.greendao.rx.RxQuery$2
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuSeparatorItem
com.google.android.material.bottomsheet.BottomSheetBehavior:
    public static com.google.android.material.bottomsheet.BottomSheetBehavior from(android.view.View)
    public boolean isFitToContents()
    public int getPeekHeight()
    public float getHalfExpandedRatio()
    public boolean isHideable()
    public boolean getSkipCollapsed()
    public int getSaveFlags()
    public void setBottomSheetCallback(com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback)
    public void addBottomSheetCallback(com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback)
    public void removeBottomSheetCallback(com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback)
    public int getState()
    int getPeekHeightMin()
    public void disableShapeAnimations()
    public static final int STATE_DRAGGING
    public static final int STATE_SETTLING
    public static final int STATE_EXPANDED
    public static final int STATE_COLLAPSED
    public static final int STATE_HIDDEN
    public static final int STATE_HALF_EXPANDED
    public static final int PEEK_HEIGHT_AUTO
    public static final int SAVE_PEEK_HEIGHT
    public static final int SAVE_FIT_TO_CONTENTS
    public static final int SAVE_HIDEABLE
    public static final int SAVE_SKIP_COLLAPSED
    public static final int SAVE_ALL
    public static final int SAVE_NONE
    private static final java.lang.String TAG
    private static final float HIDE_THRESHOLD
    private static final float HIDE_FRICTION
    private static final int CORNER_ANIMATION_DURATION
org.greenrobot.greendao.rx.RxTransaction
androidx.core.util.PatternsCompat
androidx.constraintlayout.solver.widgets.ChainHead:
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getFirst()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getFirstVisibleWidget()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getLast()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getLastVisibleWidget()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getHead()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getFirstMatchConstraintWidget()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getLastMatchConstraintWidget()
    public float getTotalWeight()
com.eptonic.photocollage.model.PhotoStickerSaveDataDao:
    public void <init>(org.greenrobot.greendao.internal.DaoConfig)
    public void readEntity(android.database.Cursor,com.eptonic.photocollage.model.PhotoStickerSaveData,int)
    public java.lang.Void getKey(com.eptonic.photocollage.model.PhotoStickerSaveData)
    public boolean hasKey(com.eptonic.photocollage.model.PhotoStickerSaveData)
    protected final boolean isEntityUpdateable()
    public synthetic bridge boolean hasKey(java.lang.Object)
    public synthetic bridge java.lang.Object getKey(java.lang.Object)
    public synthetic bridge void readEntity(android.database.Cursor,java.lang.Object,int)
androidx.vectordrawable.R$string
androidx.transition.R$id:
    private void <init>()
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory:
    public static final int DIRECTION_LEFT
    public static final int DIRECTION_TOP
    public static final int DIRECTION_RIGHT
    public static final int DIRECTION_BOTTOM
androidx.recyclerview.widget.ListAdapter$1
androidx.viewpager.widget.ViewPager$LayoutParams
org.greenrobot.greendao.rx.RxQuery
androidx.core.content.pm.ShortcutInfoCompatSaver
com.yd.photoeditor.imageprocessing.temp.ImageFilter3$1
com.google.android.material.button.MaterialButtonToggleGroup$CornerData
com.bumptech.glide.request.target.DrawableImageViewTarget:
    public void <init>(android.widget.ImageView,boolean)
androidx.appcompat.widget.ActionBarOverlayLayout:
    public boolean isHideOnContentScrollEnabled()
    public boolean hasIcon()
    public boolean hasLogo()
    public void saveToolbarHierarchyState(android.util.SparseArray)
    public void restoreToolbarHierarchyState(android.util.SparseArray)
    private static final java.lang.String TAG
    private static final int ACTION_BAR_ANIMATE_DELAY
androidx.core.app.ShareCompat$IntentReader
androidx.annotation.MainThread
com.bumptech.glide.load.model.AssetUriLoader$FileDescriptorFactory:
    public void teardown()
androidx.core.app.BundleCompat$BundleCompatBaseImpl
com.bumptech.glide.load.engine.Jobs:
    java.util.Map getAll()
org.greenrobot.greendao.annotation.JoinProperty
com.google.android.material.appbar.AppBarLayout$LayoutParams$ScrollFlags
com.bumptech.glide.request.target.BitmapImageViewTarget:
    public void <init>(android.widget.ImageView,boolean)
com.google.android.material.ripple.RippleDrawableCompat:
    public com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
androidx.core.text.BidiFormatter$Builder:
    public void <init>(boolean)
    public void <init>(java.util.Locale)
    public androidx.core.text.BidiFormatter$Builder stereoReset(boolean)
    public androidx.core.text.BidiFormatter$Builder setTextDirectionHeuristic(androidx.core.text.TextDirectionHeuristicCompat)
com.bumptech.glide.util.MultiClassKey:
    public void <init>(java.lang.Class,java.lang.Class)
    public void set(java.lang.Class,java.lang.Class)
com.eptonic.photocollage.util.PermissionUtils$Permission:
    public void <init>(java.lang.String,java.lang.String,boolean)
androidx.core.telephony.mbms.MbmsHelper
com.google.android.material.datepicker.SingleDateSelector$2
androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder:
    void <init>(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)
com.google.android.material.internal.NavigationMenu
androidx.appcompat.R$interpolator
com.yd.photoeditor.vv.DialogUtils$OnAddImageButtonClickListener:
    public abstract void onCameraButtonClick()
    public abstract void onGalleryButtonClick()
org.greenrobot.greendao.query.CursorQuery$1
androidx.annotation.NonNull
androidx.drawerlayout.R$color
androidx.core.R$string
com.bumptech.glide.util.LruCache:
    public synchronized void setSizeMultiplier(float)
    protected synchronized int getCount()
    public synchronized long getCurrentSize()
    public synchronized boolean contains(java.lang.Object)
com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState$1
androidx.arch.core.executor.DefaultTaskExecutor$1:
    private static final java.lang.String THREAD_NAME_STEM
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    public boolean isRtl(char[],int,int)
androidx.core.text.util.LinkifyCompat
androidx.lifecycle.livedata.core.R
androidx.savedstate.Recreator$SavedStateProvider
androidx.vectordrawable.animated.R$color
org.greenrobot.greendao.database.EncryptedDatabase:
    public boolean inTransaction()
    public void execSQL(java.lang.String,java.lang.Object[])
    public boolean isOpen()
    public void close()
    public net.sqlcipher.database.SQLiteDatabase getSQLiteDatabase()
androidx.viewpager2.widget.PageTransformerAdapter
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment
com.google.android.material.datepicker.PickerFragment:
    abstract com.google.android.material.datepicker.DateSelector getDateSelector()
    boolean addOnSelectionChangedListener(com.google.android.material.datepicker.OnSelectionChangedListener)
    boolean removeOnSelectionChangedListener(com.google.android.material.datepicker.OnSelectionChangedListener)
    void clearOnSelectionChangedListeners()
com.yd.photoeditor.actions.MaskAction:
    public void <init>(com.yd.photoeditor.ui.activity.ImageProcessingActivity)
    public void adjustImageMaskLayout()
    public void onActivityResume()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat:
    public void <init>(int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)
    void <init>(java.lang.Object)
    public java.lang.CharSequence getLabel()
    private static final java.lang.String TAG
com.bumptech.glide.R$drawable
com.google.android.material.datepicker.SingleDateSelector$1
androidx.core.content.pm.PermissionInfoCompat$Protection
com.bumptech.glide.util.ExceptionCatchingInputStream:
    static void clearQueue()
com.yd.photoeditor.model.XXXXXXXXXXXXXX:
    public void setId(long)
    public long getId()
    public boolean isSelected()
    public java.lang.String getSelectedThumbnail()
    private long mId
    private java.lang.String unused
com.eptonic.photocollage.ui.mutitouchh.ImageEntity:
    public void <init>(com.eptonic.photocollage.ui.mutitouchh.ImageEntity,android.content.res.Resources)
    public boolean isSticker()
    public android.net.Uri getImageUri()
    public void setImageUri(android.content.Context,android.net.Uri)
    public int getResourceId()
    public android.graphics.drawable.Drawable getDrawable()
com.eptonic.photocollage.ui.view.sticker.StickerView$Flip
com.yd.photoeditor.R$id:
    private void <init>()
com.eptonic.photocollage.R$color
androidx.recyclerview.widget.RecyclerView$Adapter:
    public final void notifyItemChanged(int)
    public final void notifyItemChanged(int,java.lang.Object)
    public final void notifyItemRangeChanged(int,int)
    public final void notifyItemRangeChanged(int,int,java.lang.Object)
    public final void notifyItemMoved(int,int)
    public final void notifyItemRangeInserted(int,int)
    public final void notifyItemRemoved(int)
    public final void notifyItemRangeRemoved(int,int)
org.greenrobot.greendao.rx.RxDao$7
com.yd.photoeditor.listener.OnBottomMenuItemClickListener:
    public abstract void onDeleteButtonClick(int,com.yd.photoeditor.model.XXXXXXXXXXXXXX)
    public abstract void onMenuItemLongClick(int,com.yd.photoeditor.model.XXXXXXXXXXXXXX)
androidx.annotation.RequiresPermission
androidx.fragment.app.Fragment:
    public void <init>(int)
    public static androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String)
    public androidx.lifecycle.LifecycleOwner getViewLifecycleOwner()
    public androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData()
    public final int getId()
    public final java.lang.String getTag()
    public final android.os.Bundle requireArguments()
    public void setInitialSavedState(androidx.fragment.app.Fragment$SavedState)
    public void setTargetFragment(androidx.fragment.app.Fragment,int)
    public final int getTargetRequestCode()
    public final java.lang.Object requireHost()
    public final java.lang.CharSequence getText(int)
    public final varargs java.lang.String getString(int,java.lang.Object[])
    public final androidx.fragment.app.FragmentManager requireFragmentManager()
    public final androidx.fragment.app.Fragment requireParentFragment()
    public final boolean isAdded()
    public final boolean isDetached()
    public final boolean isRemoving()
    public final boolean isInLayout()
    public final boolean isResumed()
    public final boolean isVisible()
    public final boolean isHidden()
    public final boolean hasOptionsMenu()
    public final boolean isMenuVisible()
    public void setRetainInstance(boolean)
    public void setHasOptionsMenu(boolean)
    public void setMenuVisibility(boolean)
    public void setUserVisibleHint(boolean)
    public boolean getUserVisibleHint()
    public androidx.loader.app.LoaderManager getLoaderManager()
    public void startActivity(android.content.Intent)
    public void startActivity(android.content.Intent,android.os.Bundle)
    public void startActivityForResult(android.content.Intent,int)
    public void startActivityForResult(android.content.Intent,int,android.os.Bundle)
    public void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
    public final void requestPermissions(java.lang.String[],int)
    public boolean shouldShowRequestPermissionRationale(java.lang.String)
    public final android.view.LayoutInflater getLayoutInflater()
    public void registerForContextMenu(android.view.View)
    public void unregisterForContextMenu(android.view.View)
    public void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
    public void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
    public void setEnterTransition(java.lang.Object)
    public void setReturnTransition(java.lang.Object)
    public void setExitTransition(java.lang.Object)
    public void setReenterTransition(java.lang.Object)
    public void setSharedElementEnterTransition(java.lang.Object)
    public void setSharedElementReturnTransition(java.lang.Object)
    public void setAllowEnterTransitionOverlap(boolean)
    public void setAllowReturnTransitionOverlap(boolean)
    public void postponeEnterTransition()
    public final void postponeEnterTransition(long,java.util.concurrent.TimeUnit)
    static final int INITIALIZING
    static final int CREATED
    static final int ACTIVITY_CREATED
    static final int STARTED
    static final int RESUMED
androidx.core.widget.NestedScrollView:
    public boolean dispatchNestedScroll(int,int,int,int,int[],int)
    public boolean isFillViewport()
    public boolean isSmoothScrollingEnabled()
    static final int ANIMATED_SCROLL_GAP
    static final float MAX_SCROLL_FACTOR
    private static final java.lang.String TAG
    private static final int INVALID_POINTER
com.yd.photoeditor.model.ImageTemplate
com.bumptech.glide.load.engine.ActiveResources:
    void setDequeuedResourceCallback(com.bumptech.glide.load.engine.ActiveResources$DequeuedResourceCallback)
    void shutdown()
com.google.android.material.shape.ShapePathModel
com.bumptech.glide.manager.RequestManagerFragment:
    private static final java.lang.String TAG
com.bumptech.glide.ModelTypes
androidx.recyclerview.widget.SortedList
androidx.appcompat.app.AlertDialog:
    protected void <init>(android.content.Context)
    protected void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)
    public android.widget.Button getButton(int)
    public void setCustomTitle(android.view.View)
    public void setMessage(java.lang.CharSequence)
    public void setView(android.view.View)
    public void setView(android.view.View,int,int,int,int)
    void setButtonPanelLayoutHint(int)
    public void setButton(int,java.lang.CharSequence,android.os.Message)
    public void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
    public void setButton(int,java.lang.CharSequence,android.graphics.drawable.Drawable,android.content.DialogInterface$OnClickListener)
    public void setIcon(int)
    public void setIcon(android.graphics.drawable.Drawable)
    public void setIconAttribute(int)
    static final int LAYOUT_HINT_NONE
    static final int LAYOUT_HINT_SIDE
com.bumptech.glide.util.pool.StateVerifier$DebugStateVerifier
androidx.transition.R$layout
com.google.android.material.datepicker.CalendarItemStyle:
    int getLeftInset()
    int getRightInset()
androidx.collection.LruCache:
    public void resize(int)
    public final java.lang.Object remove(java.lang.Object)
    public final void evictAll()
    public final synchronized int size()
    public final synchronized int maxSize()
    public final synchronized int hitCount()
    public final synchronized int missCount()
    public final synchronized int createCount()
    public final synchronized int putCount()
    public final synchronized int evictionCount()
    public final synchronized java.util.Map snapshot()
com.yd.photoeditor.imageprocessing.util.TextureRotationUtil:
    private void <init>()
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException:
    private static final long serialVersionUID
androidx.customview.R$attr
com.yd.photoeditor.view.PreviewDrawingView
androidx.core.content.ContentResolverCompat
androidx.lifecycle.viewmodel.R
com.bumptech.glide.load.model.UnitModelLoader$Factory:
    public void teardown()
androidx.appcompat.widget.ActivityChooserView$5
org.greenrobot.greendao.query.DeleteQuery$1
com.bumptech.glide.manager.DefaultConnectivityMonitorFactory:
    private static final java.lang.String TAG
    private static final java.lang.String NETWORK_PERMISSION
androidx.constraintlayout.solver.ArrayLinkedVariables:
    boolean hasAtLeastOnePositiveVariable()
    androidx.constraintlayout.solver.SolverVariable getPivotCandidate()
    int sizeInBytes()
    public void display()
    private static final boolean DEBUG
    private static final int NONE
    private static final boolean FULL_NEW_CHECK
androidx.lifecycle.ReportFragment:
    static androidx.lifecycle.ReportFragment get(android.app.Activity)
    void setProcessListener(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
    private static final java.lang.String REPORT_FRAGMENT_TAG
com.google.android.material.snackbar.BaseTransientBottomBar$6
androidx.appcompat.resources.R$layout
com.eptonic.photocollage.resEncryption.utils.EDCoder:
    public void <init>()
    public static java.lang.String base64Encode(byte[])
    public static byte[] encode(byte[],int,int)
    public static byte[] encode(byte[])
com.bumptech.glide.load.resource.bitmap.TransformationUtils:
    private void <init>()
    public static android.graphics.Bitmap rotateImage(android.graphics.Bitmap,int)
    public static android.graphics.Bitmap circleCrop(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int)
    private static android.graphics.Bitmap getAlphaSafeBitmap(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap)
    private static android.graphics.Bitmap$Config getAlphaSafeConfig(android.graphics.Bitmap)
    public static android.graphics.Bitmap roundedCorners(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int,int)
    public static android.graphics.Bitmap roundedCorners(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int)
    public static android.graphics.Bitmap roundedCorners(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,float,float,float,float)
    private static android.graphics.Bitmap roundedCorners(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,com.bumptech.glide.load.resource.bitmap.TransformationUtils$DrawRoundedCornerFn)
    private static final java.lang.String TAG
    public static final int PAINT_FLAGS
    private static final int CIRCLE_CROP_PAINT_FLAGS
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback
com.yd.photoeditor.R$string:
    private void <init>()
androidx.activity.R$drawable
androidx.recyclerview.widget.ListAdapter
androidx.viewpager2.adapter.FragmentStateAdapter$1
com.eptonic.photocollage.ui.dahjk.ahjd.fah.fha.fragment.GalleryAlbumFragment:
    public void loadAlbumNames()
    public android.os.Parcelable mListViewState
com.bumptech.glide.load.resource.bitmap.Rotate
com.google.android.material.circularreveal.CircularRevealHelper$Delegate
com.google.android.material.datepicker.MaterialPickerOnPositiveButtonClickListener
androidx.core.view.ViewParentCompat:
    private void <init>()
    public static boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
    public static void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
    public static void onStopNestedScroll(android.view.ViewParent,android.view.View)
    public static void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
    public static void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int)
    public static void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
    public static void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
    private static int[] getTempNestedScrollConsumed()
    private static final java.lang.String TAG
    private static int[] sTempNestedScrollConsumed
org.greenrobot.greendao.async.AsyncOperationExecutor
androidx.activity.R$styleable
com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback
com.google.android.material.badge.BadgeDrawable
com.yd.photoeditor.model.CropInfo:
    public void setPackageId(long)
    public long getPackageId()
    private long mPackageId
androidx.core.widget.PopupWindowCompat:
    private void <init>()
    public static boolean getOverlapAnchor(android.widget.PopupWindow)
    public static int getWindowLayoutType(android.widget.PopupWindow)
    private static final java.lang.String TAG
    private static java.lang.reflect.Method sGetWindowLayoutTypeMethod
    private static boolean sGetWindowLayoutTypeMethodAttempted
androidx.core.content.pm.PermissionInfoCompat
androidx.core.view.ViewCompat$ScrollIndicators
androidx.core.view.NestedScrollingParentHelper:
    public void onStopNestedScroll(android.view.View)
androidx.transition.Slide$CalculateSlide
androidx.core.view.accessibility.AccessibilityWindowInfoCompat
com.google.android.material.bottomnavigation.BottomNavigationItemView$1
androidx.viewpager2.widget.ViewPager2$LinearLayoutManagerImpl
androidx.constraintlayout.solver.widgets.ConstraintTableLayout
androidx.core.location.LocationManagerCompat
androidx.appcompat.widget.PopupMenu
androidx.appcompat.resources.R$integer
com.eptonic.photocollage.util.PermissionUtils:
    public void <init>()
    public static void checkAndRequestSystemAlertWindowPermission(android.app.Activity)
    public static void setRequestingSystemAlertWindowPermission(android.content.Context,boolean)
    public static boolean requestSystemAlertWindowPermission(android.app.Activity)
    public static boolean isGrantedAllPermissions(android.app.Activity,int,java.lang.String[],int[])
    public static void clearCheckList()
    private static final java.lang.String PERMISSION_PREF_NAME
    public static final int REQUEST_CODE_ASK_MULTIPLE_PERMISSIONS
    private static final java.lang.String REQUEST_SYSTEM_ALERT_WINDOW_PERMISSION_KEY
com.google.android.material.textfield.TextInputLayout$BoxBackgroundMode
androidx.appcompat.view.menu.CascadingMenuPopup:
    public android.os.Parcelable onSaveInstanceState()
    public void onRestoreInstanceState(android.os.Parcelable)
    static final int HORIZ_POSITION_LEFT
    static final int HORIZ_POSITION_RIGHT
    static final int SUBMENU_TIMEOUT_MS
org.greenrobot.greendao.query.WhereCollector:
    varargs void add(org.greenrobot.greendao.query.WhereCondition,org.greenrobot.greendao.query.WhereCondition[])
    varargs org.greenrobot.greendao.query.WhereCondition combineWhereConditions(java.lang.String,org.greenrobot.greendao.query.WhereCondition,org.greenrobot.greendao.query.WhereCondition,org.greenrobot.greendao.query.WhereCondition[])
    void addCondition(java.lang.StringBuilder,java.util.List,org.greenrobot.greendao.query.WhereCondition)
    void checkCondition(org.greenrobot.greendao.query.WhereCondition)
    void checkProperty(org.greenrobot.greendao.Property)
com.yd.photoeditor.actions.CropAction:
    public java.lang.String getActionName()
    public void onActivityResume()
    private static final java.lang.String CROP_ACTION_PREF_NAME
    private static final java.lang.String SHOW_GUIDE_NAME
androidx.constraintlayout.widget.ConstraintSet:
    private void createHorizontalChain(int,int,int,int,int[],float[],int,int,int)
    private androidx.constraintlayout.widget.ConstraintSet$Constraint get(int)
    private java.lang.String sideToString(int)
    public androidx.constraintlayout.widget.ConstraintSet$Constraint getParameters(int)
    public void clone(android.content.Context,int)
    public void clone(androidx.constraintlayout.widget.ConstraintSet)
    public void clone(androidx.constraintlayout.widget.ConstraintLayout)
    public void applyTo(androidx.constraintlayout.widget.ConstraintLayout)
    public void center(int,int,int,int,int,int,int,float)
    public void centerHorizontally(int,int,int,int,int,int,int,float)
    public void centerHorizontallyRtl(int,int,int,int,int,int,int,float)
    public void centerVertically(int,int,int,int,int,int,int,float)
    public void createVerticalChain(int,int,int,int,int[],float[],int)
    public void createHorizontalChain(int,int,int,int,int[],float[],int)
    public void createHorizontalChainRtl(int,int,int,int,int[],float[],int)
    public void connect(int,int,int,int,int)
    public void connect(int,int,int,int)
    public void centerHorizontally(int,int)
    public void centerHorizontallyRtl(int,int)
    public void centerVertically(int,int)
    public void clear(int)
    public void clear(int,int)
    public void setMargin(int,int,int)
    public void setGoneMargin(int,int,int)
    public void setHorizontalBias(int,float)
    public void setVerticalBias(int,float)
    public void setDimensionRatio(int,java.lang.String)
    public void setVisibility(int,int)
    public void setAlpha(int,float)
    public boolean getApplyElevation(int)
    public void setApplyElevation(int,boolean)
    public void setElevation(int,float)
    public void setRotation(int,float)
    public void setRotationX(int,float)
    public void setRotationY(int,float)
    public void setScaleX(int,float)
    public void setScaleY(int,float)
    public void setTransformPivotX(int,float)
    public void setTransformPivotY(int,float)
    public void setTransformPivot(int,float,float)
    public void setTranslationX(int,float)
    public void setTranslationY(int,float)
    public void setTranslation(int,float,float)
    public void setTranslationZ(int,float)
    public void constrainHeight(int,int)
    public void constrainWidth(int,int)
    public void constrainCircle(int,int,int,float)
    public void constrainMaxHeight(int,int)
    public void constrainMaxWidth(int,int)
    public void constrainMinHeight(int,int)
    public void constrainMinWidth(int,int)
    public void constrainPercentWidth(int,float)
    public void constrainPercentHeight(int,float)
    public void constrainDefaultHeight(int,int)
    public void constrainDefaultWidth(int,int)
    public void setHorizontalWeight(int,float)
    public void setVerticalWeight(int,float)
    public void setHorizontalChainStyle(int,int)
    public void setVerticalChainStyle(int,int)
    public void addToHorizontalChain(int,int,int)
    public void addToHorizontalChainRTL(int,int,int)
    public void addToVerticalChain(int,int,int)
    public void removeFromVerticalChain(int)
    public void removeFromHorizontalChain(int)
    public void create(int,int)
    public varargs void createBarrier(int,int,int[])
    public void setGuidelineBegin(int,int)
    public void setGuidelineEnd(int,int)
    public void setGuidelinePercent(int,float)
    public void setBarrierType(int,int)
    private static final java.lang.String TAG
    public static final int UNSET
    public static final int MATCH_CONSTRAINT
    public static final int WRAP_CONTENT
    public static final int MATCH_CONSTRAINT_WRAP
    public static final int MATCH_CONSTRAINT_SPREAD
    public static final int PARENT_ID
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int HORIZONTAL_GUIDELINE
    public static final int VERTICAL_GUIDELINE
    public static final int VISIBLE
    public static final int INVISIBLE
    public static final int GONE
    public static final int LEFT
    public static final int RIGHT
    public static final int TOP
    public static final int BOTTOM
    public static final int BASELINE
    public static final int START
    public static final int END
    public static final int CHAIN_SPREAD
    public static final int CHAIN_SPREAD_INSIDE
    public static final int CHAIN_PACKED
    private static final boolean DEBUG
    private static final int BARRIER_TYPE
    private static final int BASELINE_TO_BASELINE
    private static final int BOTTOM_MARGIN
    private static final int BOTTOM_TO_BOTTOM
    private static final int BOTTOM_TO_TOP
    private static final int DIMENSION_RATIO
    private static final int EDITOR_ABSOLUTE_X
    private static final int EDITOR_ABSOLUTE_Y
    private static final int END_MARGIN
    private static final int END_TO_END
    private static final int END_TO_START
    private static final int GONE_BOTTOM_MARGIN
    private static final int GONE_END_MARGIN
    private static final int GONE_LEFT_MARGIN
    private static final int GONE_RIGHT_MARGIN
    private static final int GONE_START_MARGIN
    private static final int GONE_TOP_MARGIN
    private static final int GUIDE_BEGIN
    private static final int GUIDE_END
    private static final int GUIDE_PERCENT
    private static final int HORIZONTAL_BIAS
    private static final int LAYOUT_HEIGHT
    private static final int LAYOUT_VISIBILITY
    private static final int LAYOUT_WIDTH
    private static final int LEFT_MARGIN
    private static final int LEFT_TO_LEFT
    private static final int LEFT_TO_RIGHT
    private static final int ORIENTATION
    private static final int RIGHT_MARGIN
    private static final int RIGHT_TO_LEFT
    private static final int RIGHT_TO_RIGHT
    private static final int START_MARGIN
    private static final int START_TO_END
    private static final int START_TO_START
    private static final int TOP_MARGIN
    private static final int TOP_TO_BOTTOM
    private static final int TOP_TO_TOP
    private static final int VERTICAL_BIAS
    private static final int VIEW_ID
    private static final int HORIZONTAL_WEIGHT
    private static final int VERTICAL_WEIGHT
    private static final int HORIZONTAL_STYLE
    private static final int VERTICAL_STYLE
    private static final int ALPHA
    private static final int ELEVATION
    private static final int ROTATION_X
    private static final int ROTATION_Y
    private static final int SCALE_X
    private static final int SCALE_Y
    private static final int TRANSFORM_PIVOT_X
    private static final int TRANSFORM_PIVOT_Y
    private static final int TRANSLATION_X
    private static final int TRANSLATION_Y
    private static final int TRANSLATION_Z
    private static final int WIDTH_DEFAULT
    private static final int HEIGHT_DEFAULT
    private static final int WIDTH_MAX
    private static final int HEIGHT_MAX
    private static final int WIDTH_MIN
    private static final int HEIGHT_MIN
    private static final int ROTATION
    private static final int CIRCLE
    private static final int CIRCLE_RADIUS
    private static final int CIRCLE_ANGLE
    private static final int WIDTH_PERCENT
    private static final int HEIGHT_PERCENT
    private static final int CHAIN_USE_RTL
    private static final int BARRIER_DIRECTION
    private static final int CONSTRAINT_REFERENCED_IDS
    private static final int BARRIER_ALLOWS_GONE_WIDGETS
    private static final int UNUSED
androidx.core.provider.FontsContractCompat$4$6
androidx.appcompat.content.res.AppCompatResources:
    private void <init>()
    private static final java.lang.String LOG_TAG
androidx.activity.R$color
com.bumptech.glide.load.engine.cache.DiskCacheAdapter$Factory
androidx.lifecycle.ViewModel:
    java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)
    java.lang.Object getTag(java.lang.String)
androidx.annotation.RequiresApi
com.eptonic.photocollage.ui.view.template.PhotoItem:
    public static final int CORNER_METHOD_3_13
    public static final int CORNER_METHOD_3_6
    public static final int CORNER_METHOD_DEFAULT
    public static final int SHRINK_METHOD_3_3
    public static final int SHRINK_METHOD_3_6
    public static final int SHRINK_METHOD_3_8
    public static final int SHRINK_METHOD_COMMON
    public static final int SHRINK_METHOD_DEFAULT
    public static final int SHRINK_METHOD_USING_MAP
com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory:
    private static final int DEFAULT_PRIORITY
org.greenrobot.greendao.internal.LongHashMap:
    public boolean containsKey(long)
    public java.lang.Object remove(long)
    public void clear()
    public int size()
    public void logStats()
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle
androidx.transition.R$dimen
androidx.viewpager2.widget.ViewPager2$Orientation
com.bumptech.glide.manager.SupportRequestManagerFragment:
    private static final java.lang.String TAG
androidx.viewpager.R$color
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout
androidx.recyclerview.widget.AsyncListUtil$2
androidx.recyclerview.widget.AsyncDifferConfig$Builder
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams:
    public void <init>(android.view.ViewGroup$MarginLayoutParams)
com.bumptech.glide.load.resource.bitmap.BitmapTransitionOptions
androidx.appcompat.view.menu.MenuView$ItemView:
    public abstract void setTitle(java.lang.CharSequence)
    public abstract void setEnabled(boolean)
    public abstract void setCheckable(boolean)
    public abstract void setChecked(boolean)
    public abstract void setShortcut(boolean,char)
    public abstract void setIcon(android.graphics.drawable.Drawable)
    public abstract boolean showsIcon()
androidx.transition.ChangeTransform$2
androidx.core.view.ViewCompat$2
androidx.loader.content.ModernAsyncTask$AsyncTaskResult
androidx.transition.GhostView
com.bumptech.glide.ListPreloader$PreloadTargetQueue
com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder:
    public void <init>(android.content.Context,com.bumptech.glide.load.ResourceDecoder)
    public void <init>(android.content.res.Resources,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.ResourceDecoder)
com.google.android.material.internal.ScrimInsetsFrameLayout$1
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback:
    public void onAnimationStart(android.graphics.drawable.Drawable)
    android.graphics.drawable.Animatable2$AnimationCallback getPlatformCallback()
    android.graphics.drawable.Animatable2$AnimationCallback mPlatformCallback
androidx.lifecycle.Lifecycling$1:
    void <init>(androidx.lifecycle.LifecycleEventObserver)
androidx.constraintlayout.solver.widgets.ConstraintTableLayout$HorizontalSlice
com.google.android.material.snackbar.BaseTransientBottomBar$11
com.yd.photoeditor.imageprocessing.temp.ImageFilter3$ResponseListener
androidx.core.content.ContextCompat$MainHandlerExecutor
com.bumptech.glide.request.target.PreloadTarget
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy:
    private static final int MAX_SIZE_MULTIPLE
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments:
    public java.lang.CharSequence getText()
androidx.fragment.app.FragmentTransaction$Op:
    void <init>(int,androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State)
androidx.core.view.ViewConfigurationCompat:
    public static int getScaledPagingTouchSlop(android.view.ViewConfiguration)
    public static boolean hasPermanentMenuKey(android.view.ViewConfiguration)
    private void <init>()
    private static final java.lang.String TAG
androidx.constraintlayout.widget.R$attr
androidx.transition.Slide$1
com.bumptech.glide.load.resource.gif.StreamGifDecoder:
    private static final java.lang.String TAG
androidx.annotation.DimenRes
com.google.android.material.datepicker.MaterialTextInputPicker$1
com.bumptech.glide.annotation.compiler.Index
androidx.fragment.R$layout
androidx.core.app.NotificationCompat$MessagingStyle
androidx.appcompat.app.ActionBar$LayoutParams:
    public void <init>(int,int,int)
    public void <init>(int)
com.bumptech.glide.R$string
com.eptonic.photocollage.ui.dahjk.ahjd.fah.fha.fragment.GalleryAlbumImageFragment:
    private android.widget.ImageView mBack
    public static final java.lang.String ALBUM_IMAGE_EXTRA
    public static final java.lang.String ALBUM_NAME_EXTRA
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory$EdgeDirection
androidx.loader.R$drawable
androidx.constraintlayout.solver.widgets.ConstraintWidget:
    public void <init>(int,int,int,int)
    public void <init>(int,int)
    public int getMaxHeight()
    public int getMaxWidth()
    public boolean isRoot()
    public boolean isRootContainer()
    public boolean isInsideConstraintLayout()
    public boolean hasAncestor(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public androidx.constraintlayout.solver.widgets.WidgetContainer getRootWidgetContainer()
    public boolean isWidthWrapContent()
    public boolean isHeightWrapContent()
    public java.lang.String getType()
    public void setType(java.lang.String)
    public void setDebugSolverName(androidx.constraintlayout.solver.LinearSystem,java.lang.String)
    int getInternalDrawX()
    int getInternalDrawY()
    public int getInternalDrawRight()
    public int getInternalDrawBottom()
    public int getOptimizerWrapWidth()
    public int getOptimizerWrapHeight()
    public int getDrawWidth()
    public int getDrawHeight()
    public int getDrawBottom()
    public int getDrawRight()
    public int getMinWidth()
    public int getMinHeight()
    public int getLeft()
    public int getTop()
    public float getHorizontalBiasPercent()
    public float getVerticalBiasPercent()
    public void setGoneMargin(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int)
    public void forceUpdateDrawPosition()
    public void setDrawOrigin(int,int)
    public void setDrawX(int)
    public void setDrawY(int)
    public void setDrawWidth(int)
    public void setDrawHeight(int)
    public void setLength(int,int)
    public void setDimensionRatio(float,int)
    public float getDimensionRatio()
    public int getDimensionRatioSide()
    public void setDimension(int,int)
    public void setContainerItemSkip(int)
    public int getContainerItemSkip()
    public int getHorizontalChainStyle()
    public int getVerticalChainStyle()
    public void connectedTo(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int)
    public void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)
    public void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength,int)
    public void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int)
    public void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)
    public void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength)
    public void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength,int)
    public void resetAllConstraints()
    public void resetAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor)
    public void resetAnchors(int)
    public void disconnectWidget(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public void disconnectUnlockedWidget(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getHorizontalChainControlWidget()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getVerticalChainControlWidget()
    int mDistToTop
    int mDistToLeft
    int mDistToRight
    int mDistToBottom
    boolean mLeftHasCentered
    boolean mRightHasCentered
    boolean mTopHasCentered
    boolean mBottomHasCentered
    private static final boolean AUTOTAG_CENTER
    protected static final int SOLVER
    protected static final int DIRECT
    public static final int MATCH_CONSTRAINT_SPREAD
    public static final int MATCH_CONSTRAINT_WRAP
    public static final int MATCH_CONSTRAINT_PERCENT
    public static final int MATCH_CONSTRAINT_RATIO
    public static final int MATCH_CONSTRAINT_RATIO_RESOLVED
    public static final int UNKNOWN
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int VISIBLE
    public static final int INVISIBLE
    public static final int GONE
    public static final int CHAIN_SPREAD
    public static final int CHAIN_SPREAD_INSIDE
    public static final int CHAIN_PACKED
    private static final int WRAP
    protected static final int ANCHOR_LEFT
    protected static final int ANCHOR_RIGHT
    protected static final int ANCHOR_TOP
    protected static final int ANCHOR_BOTTOM
    protected static final int ANCHOR_BASELINE
    static final int DIMENSION_HORIZONTAL
    static final int DIMENSION_VERTICAL
androidx.recyclerview.widget.SnapHelper:
    static final float MILLISECONDS_PER_INCH
com.google.android.material.animation.AnimationUtils:
    public void <init>()
    public static int lerp(int,int,float)
com.google.android.material.expandable.ExpandableWidgetHelper:
    public void <init>(com.google.android.material.expandable.ExpandableWidget)
    private void dispatchExpandedStateChanged()
    public boolean setExpanded(boolean)
    private final android.view.View widget
    private boolean expanded
    private int expandedComponentIdHint
com.bumptech.glide.load.resource.bitmap.FitCenter:
    private static final java.lang.String ID
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer:
    public void <init>(int,int,int,int)
    public void <init>(int,int)
    public void fillMetrics(androidx.constraintlayout.solver.Metrics)
    public java.lang.String getType()
    public void setPadding(int,int,int,int)
    public void resetGraph()
    public java.util.ArrayList getVerticalGuidelines()
    public java.util.ArrayList getHorizontalGuidelines()
    public androidx.constraintlayout.solver.LinearSystem getSystem()
    public java.util.List getWidgetGroups()
    private static final boolean USE_SNAPSHOT
    private static final int MAX_ITERATIONS
    private static final boolean DEBUG
    private static final boolean DEBUG_LAYOUT
    static final boolean DEBUG_GRAPH
com.yd.photoeditor.vv.DialogUtils$OnSelectDrawEffectListener
androidx.appcompat.view.menu.SubMenuBuilder:
    public void setShortcutsVisible(boolean)
com.google.android.material.internal.ManufacturerUtils
org.greenrobot.greendao.database.DatabaseStatement:
    public abstract void execute()
    public abstract long simpleQueryForLong()
    public abstract void bindNull(int)
    public abstract void bindBlob(int,byte[])
    public abstract void bindDouble(int,double)
com.google.android.material.circularreveal.CircularRevealCompat:
    private void <init>()
    public static android.animation.Animator createCircularReveal(com.google.android.material.circularreveal.CircularRevealWidget,float,float,float,float)
com.yd.photoeditor.vv.DateTimeUtils:
    public void <init>()
    public static java.lang.String getCurrentDateTimeGMT()
    public static java.lang.String getCurrentDate()
    public static java.util.Date convertGMTString(java.lang.String)
    public static java.util.Date convertUTCString(java.lang.String)
    public static boolean isGMTString(java.lang.String)
    public static boolean isUTCString(java.lang.String)
    public static boolean isUTCDateString(java.lang.String)
    public static java.lang.String toUTCDateString(java.lang.String)
    public static java.lang.String toStandardizedUTCFromGMT(java.lang.String)
    public static int compare(java.lang.String,java.lang.String)
    public static java.util.Date dateTimeStringInUtcFormat2Date(java.lang.String)
    public static java.lang.String getCurrentLocalDateTime()
    public static java.lang.String millis2LocalDateString(long)
    public static java.lang.String toUTCDateTimeString(java.util.Date)
    private static final java.lang.String DATE_FORMAT_DD_MM_YYYY
    private static final java.lang.String DATE_FORMAT_MM_DD_YYYY
    public static final java.lang.String DATE_FORMAT_STANDARDIZED_UTC
    private static final java.lang.String DATE_TIME_FORMAT_GMT
    public static final java.lang.String DATE_TIME_FORMAT_STANDARDIZED_UTC
androidx.annotation.RequiresPermission$Read
com.google.android.material.R$style:
    private void <init>()
androidx.versionedparcelable.CustomVersionedParcelable:
    public void onPreParceling(boolean)
    public void onPostParceling()
com.yd.photoeditor.imageprocessing.temp.ImageFilter3:
    private android.graphics.Bitmap readBufferPixelToBitmap(int,int)
    private android.graphics.Bitmap createBitmapFromGLSurface(int,int,int,int,javax.microedition.khronos.opengles.GL10)
    private void setUpCameraGingerbread(android.hardware.Camera)
    public static void getBitmapForMultipleFilters(android.graphics.Bitmap,java.util.List,com.yd.photoeditor.imageprocessing.temp.ImageFilter3$ResponseListener)
    public void saveToPictures(android.graphics.Bitmap,java.lang.String,java.lang.String,com.yd.photoeditor.imageprocessing.temp.ImageFilter3$OnPictureSavedListener)
    public void saveToPictures(java.lang.String,java.lang.String,com.yd.photoeditor.imageprocessing.temp.ImageFilter3$OnPictureSavedListener)
    public synchronized android.graphics.Bitmap getBitmap()
    public void setUpCamera(android.hardware.Camera)
    public void setUpCamera(android.hardware.Camera,int,boolean,boolean)
    public java.lang.String getPath(android.net.Uri)
    public android.graphics.Bitmap getBitmapWithFilterApplied()
    public android.graphics.Bitmap getBitmapWithFilterApplied(android.graphics.Bitmap)
    public android.graphics.Bitmap getCurrentBitmap()
    private static final java.lang.String TAG
androidx.appcompat.widget.ShareActionProvider$OnShareTargetSelectedListener
com.eptonic.photocollage.model.DaoMaster:
    public static com.eptonic.photocollage.model.DaoSession newDevSession(android.content.Context,java.lang.String)
    public com.eptonic.photocollage.model.DaoSession newSession(org.greenrobot.greendao.identityscope.IdentityScopeType)
    public synthetic bridge org.greenrobot.greendao.AbstractDaoSession newSession(org.greenrobot.greendao.identityscope.IdentityScopeType)
    public synthetic bridge org.greenrobot.greendao.AbstractDaoSession newSession()
    public static final int SCHEMA_VERSION
androidx.cursoradapter.widget.CursorAdapter:
    public void <init>(android.content.Context,android.database.Cursor)
    public void <init>(android.content.Context,android.database.Cursor,int)
    protected void init(android.content.Context,android.database.Cursor,boolean)
    public boolean hasStableIds()
    public android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)
    public android.widget.FilterQueryProvider getFilterQueryProvider()
    public void setFilterQueryProvider(android.widget.FilterQueryProvider)
    protected android.widget.FilterQueryProvider mFilterQueryProvider
    public static final int FLAG_AUTO_REQUERY
    public static final int FLAG_REGISTER_CONTENT_OBSERVER
androidx.appcompat.resources.R$color
com.google.android.material.navigation.NavigationView$2
androidx.cardview.R$color
com.yd.photoeditor.ui.activity.BaseActivity
androidx.appcompat.widget.ActivityChooserModel$OnChooseActivityListener
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject
androidx.recyclerview.widget.AsyncListUtil
androidx.recyclerview.widget.DefaultItemAnimator:
    private static final boolean DEBUG
com.bumptech.glide.load.resource.bitmap.BitmapDrawableResource
androidx.core.view.ScaleGestureDetectorCompat
androidx.core.view.ViewGroupCompat:
    private void <init>()
    public static boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
    public static void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean)
    public static int getLayoutMode(android.view.ViewGroup)
    public static void setLayoutMode(android.view.ViewGroup,int)
    public static void setTransitionGroup(android.view.ViewGroup,boolean)
    public static int getNestedScrollAxes(android.view.ViewGroup)
    public static final int LAYOUT_MODE_CLIP_BOUNDS
    public static final int LAYOUT_MODE_OPTICAL_BOUNDS
androidx.core.app.NotificationCompat$CarExtender
org.greenrobot.greendao.annotation.Id
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat:
    private static final float PRECISION
    public static final int MAX_NUM_POINTS
    public static final double EPSILON
android.support.v4.app.INotificationSideChannel
com.bumptech.glide.R$id:
    private void <init>()
com.eptonic.photocollage.ui.view.sticker.FlipBothDirectionsEvent
androidx.collection.CircularArray
androidx.viewpager2.R$id
androidx.transition.ChangeImageTransform
androidx.loader.R$color
com.eptonic.photocollage.ui.dialog.AddTextDialog:
    public void <init>(android.content.Context)
com.yd.photoeditor.actions.PackageAction:
    public static void setAbsoluteBackgroundPath(com.yd.photoeditor.model.ItemPackageInfo)
    public void onStartDownloading(com.yd.photoeditor.model.ItemPackageInfo)
    public void onFinishInstalling(com.yd.photoeditor.model.ItemPackageInfo,boolean)
    public void onDeleteButtonClick(int,com.yd.photoeditor.model.XXXXXXXXXXXXXX)
    public void onMenuItemLongClick(int,com.yd.photoeditor.model.XXXXXXXXXXXXXX)
    public void onActivityResume()
    public void saveInstanceState(android.os.Bundle)
    public void restoreInstanceState(android.os.Bundle)
    protected static final int DEFAULT_CROP_SELECTED_ITEM_INDEX
com.bumptech.glide.util.pool.GlideTrace:
    private void <init>()
    private static java.lang.String truncateTag(java.lang.String)
    public static void beginSectionFormat(java.lang.String,java.lang.Object,java.lang.Object)
    private static final boolean TRACING_ENABLED
    private static final int MAX_LENGTH
androidx.savedstate.R
com.bumptech.glide.load.resource.gif.GifDrawableEncoder:
    private static final java.lang.String TAG
androidx.annotation.GuardedBy
com.bumptech.glide.request.SingleRequest:
    private static final java.lang.String TAG
    private static final java.lang.String GLIDE_TAG
androidx.core.R$integer
androidx.recyclerview.widget.RecyclerView$RecycledViewPool:
    public void setMaxRecycledViews(int,int)
    public int getRecycledViewCount(int)
    int size()
    private static final int DEFAULT_MAX_SCRAP
androidx.vectordrawable.animated.R$dimen
com.yd.photoeditor.imageprocessing.filter.processing.WWWWWWWW
com.yd.photoeditor.imageprocessing.filter.effect.F12:
    public static final java.lang.String KUWAHARA_FRAGMENT_SHADER
com.yd.photoeditor.model.FilterInfo:
    public java.lang.String getCmd()
    public void setPackageFolder(java.lang.String)
    public java.lang.String getPackageFolder()
    public void setPackageId(long)
    public long getPackageId()
    private java.lang.String mPackageFolder
    private long mPackageId
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action:
    public void <init>(int,int,int)
    public int getDx()
    public void setDx(int)
    public int getDy()
    public void setDy(int)
    public int getDuration()
    public void setDuration(int)
    public android.view.animation.Interpolator getInterpolator()
    public void setInterpolator(android.view.animation.Interpolator)
    public static final int UNDEFINED_DURATION
com.bumptech.glide.util.Executors:
    private void <init>()
    public static void shutdownAndAwaitTermination(java.util.concurrent.ExecutorService)
com.google.android.material.bottomappbar.BottomAppBar$2
com.bumptech.glide.gifdecoder.GifDecoder$GifDecodeStatus
com.google.android.material.circularreveal.CircularRevealGridLayout
androidx.recyclerview.widget.AdapterHelper$UpdateOp:
    static final int ADD
    static final int REMOVE
    static final int UPDATE
    static final int MOVE
    static final int POOL_SIZE
androidx.core.app.ShareCompat
androidx.core.content.SharedPreferencesCompat$EditorCompat
androidx.appcompat.view.WindowCallbackWrapper:
    public void onContentChanged()
org.greenrobot.greendao.AbstractDaoMaster:
    public int getSchemaVersion()
    public org.greenrobot.greendao.database.Database getDatabase()
    public abstract org.greenrobot.greendao.AbstractDaoSession newSession()
    public abstract org.greenrobot.greendao.AbstractDaoSession newSession(org.greenrobot.greendao.identityscope.IdentityScopeType)
com.bumptech.glide.load.model.AssetUriLoader:
    private static final java.lang.String ASSET_PATH_SEGMENT
    private static final java.lang.String ASSET_PREFIX
org.intellij.lang.annotations.Pattern
androidx.lifecycle.MethodCallsLogger:
    public boolean approveCall(java.lang.String,int)
androidx.appcompat.widget.PopupMenu$1
com.yd.photoeditor.view.colorpicker.AlphaPatternDrawable
androidx.annotation.TransitionRes
androidx.appcompat.widget.ListPopupWindow:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    private static boolean isConfirmKey(int)
    public int getPromptPosition()
    public void setForceIgnoreOutsideTouch(boolean)
    public void setDropDownAlwaysVisible(boolean)
    public boolean isDropDownAlwaysVisible()
    public void setSoftInputMode(int)
    public int getSoftInputMode()
    public void setListSelector(android.graphics.drawable.Drawable)
    public int getAnimationStyle()
    public android.graphics.Rect getEpicenterBounds()
    public int getHeight()
    public void setHeight(int)
    public void setWindowLayoutType(int)
    public void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
    public void setPromptView(android.view.View)
    public void postShow()
    public int getInputMethodMode()
    public boolean performItemClick(int)
    public java.lang.Object getSelectedItem()
    public int getSelectedItemPosition()
    public long getSelectedItemId()
    public android.view.View getSelectedView()
    void setListItemExpandMax(int)
    public boolean onKeyDown(int,android.view.KeyEvent)
    public boolean onKeyUp(int,android.view.KeyEvent)
    public boolean onKeyPreIme(int,android.view.KeyEvent)
    public android.view.View$OnTouchListener createDragToOpenListener(android.view.View)
    private static final java.lang.String TAG
    private static final boolean DEBUG
    static final int EXPAND_LIST_TIMEOUT
    public static final int POSITION_PROMPT_ABOVE
    public static final int POSITION_PROMPT_BELOW
    public static final int MATCH_PARENT
    public static final int WRAP_CONTENT
    public static final int INPUT_METHOD_FROM_FOCUSABLE
    public static final int INPUT_METHOD_NEEDED
    public static final int INPUT_METHOD_NOT_NEEDED
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord
org.greenrobot.greendao.DaoLog:
    public void <init>()
    public static boolean isLoggable(int)
    public static java.lang.String getStackTraceString(java.lang.Throwable)
    public static int println(int,java.lang.String)
    public static int v(java.lang.String)
    public static int v(java.lang.String,java.lang.Throwable)
    public static int d(java.lang.String,java.lang.Throwable)
    public static int i(java.lang.String)
    public static int i(java.lang.String,java.lang.Throwable)
    public static int w(java.lang.String,java.lang.Throwable)
    public static int w(java.lang.Throwable)
    public static int e(java.lang.String)
    private static final java.lang.String TAG
    public static final int VERBOSE
    public static final int DEBUG
    public static final int INFO
    public static final int WARN
    public static final int ERROR
    public static final int ASSERT
androidx.core.app.ComponentActivity$ExtraData
com.eptonic.photocollage.ui.view.TransitionImageView:
    public void reset()
androidx.appcompat.view.menu.ActionMenuItem:
    public androidx.appcompat.view.menu.ActionMenuItem setExclusiveCheckable(boolean)
    public boolean invoke()
    public boolean requiresActionButton()
    public boolean requiresOverflow()
    private static final int NO_ICON
    private static final int CHECKABLE
    private static final int CHECKED
    private static final int EXCLUSIVE
    private static final int HIDDEN
    private static final int ENABLED
com.yd.photoeditor.vv.DialogUtils$ConfirmDialogOnClickListener
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState
com.bumptech.glide.util.Preconditions:
    private void <init>()
org.greenrobot.greendao.rx.RxQuery$3
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams:
    public void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams)
    public void setFullSpan(boolean)
    public static final int INVALID_SPAN_ID
androidx.annotation.PluralsRes
com.yd.photoeditor.view.colorpicker.ColorPickerView
androidx.recyclerview.widget.DiffUtil
com.yd.photoeditor.imageprocessing.filter.colour.P7:
    public static final java.lang.String DDDDDDDDDDD
com.yd.photoeditor.listener.OnDoneActionsClickListener:
    public abstract void onApplyButtonClick()
androidx.transition.CircularPropagation
com.eptonic.photocollage.ui.wrapper.dah.Vv
com.bumptech.glide.load.resource.gif.GifBitmapProvider:
    public void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)
com.yd.photoeditor.R$interpolator
com.yd.photoeditor.vv.DialogUtils$2
com.google.android.material.datepicker.RangeDateSelector$2
androidx.recyclerview.widget.ListUpdateCallback
com.google.android.material.internal.ViewUtils$RelativePadding
com.eptonic.photocollage.ui.view.frame.FrameEntity
androidx.vectordrawable.animated.R$style
com.eptonic.photocollage.ui.view.PhotoLayout:
    public static java.util.List parseImageTemplate(com.eptonic.photocollage.model.ImageTemplate)
    public void <init>(android.content.Context,com.eptonic.photocollage.model.ImageTemplate)
    private static final int ID_CANCEL
    private static final int ID_CHANGE
    private static final int ID_DELETE
    private static final int ID_EDIT
com.google.android.material.shape.EdgeTreatment:
    public void getEdgePath(float,float,com.google.android.material.shape.ShapePath)
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter
org.greenrobot.greendao.rx.RxDao$11
org.greenrobot.greendao.internal.DaoConfig:
    public void clearIdentityScope()
    public void setIdentityScope(org.greenrobot.greendao.identityscope.IdentityScope)
com.bumptech.glide.load.engine.ResourceRecycler$ResourceRecyclerCallback:
    static final int RECYCLE_RESOURCE
com.google.android.material.bottomnavigation.BottomNavigationView$SavedState
com.yd.photoeditor.imageprocessing.filter.effect.F12345:
    public static final java.lang.String SKETCH_FRAGMENT_SHADER
com.bumptech.glide.annotation.GlideOption
androidx.fragment.app.DialogFragment:
    public void <init>()
    public void setStyle(int,int)
    public void show(androidx.fragment.app.FragmentManager,java.lang.String)
    public int show(androidx.fragment.app.FragmentTransaction,java.lang.String)
    public void showNow(androidx.fragment.app.FragmentManager,java.lang.String)
    public void dismiss()
    public void dismissAllowingStateLoss()
    void dismissInternal(boolean,boolean)
    public android.app.Dialog getDialog()
    public final android.app.Dialog requireDialog()
    public int getTheme()
    public void setCancelable(boolean)
    public boolean isCancelable()
    public void setShowsDialog(boolean)
    public boolean getShowsDialog()
    public void onAttach(android.content.Context)
    public void onDetach()
    public void onCreate(android.os.Bundle)
    public android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
    public void setupDialog(android.app.Dialog,int)
    public android.app.Dialog onCreateDialog(android.os.Bundle)
    public void onCancel(android.content.DialogInterface)
    public void onDismiss(android.content.DialogInterface)
    public void onActivityCreated(android.os.Bundle)
    public void onStart()
    public void onSaveInstanceState(android.os.Bundle)
    public void onStop()
    public void onDestroyView()
    private android.os.Handler mHandler
    private java.lang.Runnable mDismissRunnable
    int mStyle
    int mTheme
    boolean mCancelable
    boolean mShowsDialog
    int mBackStackId
    android.app.Dialog mDialog
    boolean mViewDestroyed
    boolean mDismissed
    boolean mShownByMe
    public static final int STYLE_NORMAL
    public static final int STYLE_NO_TITLE
    public static final int STYLE_NO_FRAME
    public static final int STYLE_NO_INPUT
    private static final java.lang.String SAVED_DIALOG_STATE_TAG
    private static final java.lang.String SAVED_STYLE
    private static final java.lang.String SAVED_THEME
    private static final java.lang.String SAVED_CANCELABLE
    private static final java.lang.String SAVED_SHOWS_DIALOG
    private static final java.lang.String SAVED_BACK_STACK_ID
androidx.viewpager2.adapter.FragmentStateAdapter$3
androidx.appcompat.R$styleable:
    private void <init>()
androidx.appcompat.app.AlertController:
    public void setButtonPanelLayoutHint(int)
    public android.widget.Button getButton(int)
androidx.recyclerview.widget.AsyncListDiffer$1$2
androidx.core.view.DisplayCutoutCompat
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat:
    private void <init>()
androidx.appcompat.widget.ActivityChooserModel$DefaultSorter
android.support.v4.os.ResultReceiver$MyResultReceiver
org.intellij.lang.annotations.Subst
androidx.recyclerview.widget.TileList
androidx.core.widget.TintableCompoundButton:
    public abstract android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.google.android.material.snackbar.SnackbarManager:
    private void showNextSnackbarLocked()
    private boolean isNextSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback)
    public void show(int,com.google.android.material.snackbar.SnackbarManager$Callback)
    public void dismiss(com.google.android.material.snackbar.SnackbarManager$Callback,int)
    public void onDismissed(com.google.android.material.snackbar.SnackbarManager$Callback)
    public void onShown(com.google.android.material.snackbar.SnackbarManager$Callback)
    public boolean isCurrent(com.google.android.material.snackbar.SnackbarManager$Callback)
    public boolean isCurrentOrNext(com.google.android.material.snackbar.SnackbarManager$Callback)
    static final int MSG_TIMEOUT
    private static final int SHORT_DURATION_MS
    private static final int LONG_DURATION_MS
com.bumptech.glide.util.LogTime:
    private void <init>()
com.bumptech.glide.load.engine.cache.ExternalPreferredCacheDiskCacheFactory$1
com.yd.photoeditor.model.EditedImageItem
com.google.android.material.floatingactionbutton.FloatingActionButton$Size
com.yd.photoeditor.view.PinchableImageView
com.bumptech.glide.load.resource.gif.GifDrawable:
    public void <init>(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,android.graphics.Bitmap)
    void <init>(com.bumptech.glide.load.resource.gif.GifFrameLoader,android.graphics.Paint)
    public com.bumptech.glide.load.Transformation getFrameTransformation()
    public void startFromFirstFrame()
    void setIsRunning(boolean)
    boolean isRecycled()
    public void setLoopCount(int)
    public void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public void clearAnimationCallbacks()
    public static final int LOOP_FOREVER
    public static final int LOOP_INTRINSIC
    private static final int GRAVITY
com.bumptech.glide.load.ImageHeaderParser:
    public abstract int getOrientation(java.nio.ByteBuffer,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)
    public static final int UNKNOWN_ORIENTATION
androidx.transition.Transition$MatchOrder
com.bumptech.glide.load.model.DataUrlLoader:
    private static final java.lang.String DATA_SCHEME_IMAGE
    private static final java.lang.String BASE64_TAG
androidx.viewpager.widget.PagerTitleStrip
androidx.core.hardware.fingerprint.FingerprintManagerCompat$1
com.google.android.material.behavior.SwipeDismissBehavior:
    public void setListener(com.google.android.material.behavior.SwipeDismissBehavior$OnDismissListener)
    public void setDragDismissDistance(float)
    public void setSensitivity(float)
    public int getDragState()
    public static final int STATE_IDLE
    public static final int STATE_DRAGGING
    public static final int STATE_SETTLING
    public static final int SWIPE_DIRECTION_START_TO_END
    public static final int SWIPE_DIRECTION_END_TO_START
    public static final int SWIPE_DIRECTION_ANY
    private static final float DEFAULT_DRAG_DISMISS_THRESHOLD
    private static final float DEFAULT_ALPHA_START_DISTANCE
    private static final float DEFAULT_ALPHA_END_DISTANCE
androidx.core.graphics.PathUtils
org.greenrobot.greendao.query.AbstractQueryData:
    org.greenrobot.greendao.query.AbstractQuery forCurrentThread(org.greenrobot.greendao.query.AbstractQuery)
com.google.android.material.button.MaterialButtonToggleGroup$1
androidx.appcompat.view.menu.MenuBuilder:
    private void dispatchSaveInstanceState(android.os.Bundle)
    private void dispatchRestoreInstanceState(android.os.Bundle)
    public void savePresenterStates(android.os.Bundle)
    public void restorePresenterStates(android.os.Bundle)
    public void removeItemAt(int)
    public void clearAll()
    public void setShortcutsVisible(boolean)
    public void setCurrentMenuInfo(android.view.ContextMenu$ContextMenuInfo)
    public void setOptionalIconsVisible(boolean)
    private android.util.SparseArray mFrozenViewStates
    private static final java.lang.String TAG
    private static final java.lang.String PRESENTER_KEY
    private static final java.lang.String ACTION_VIEW_STATES_KEY
    private static final java.lang.String EXPANDED_ACTION_VIEW_ID
androidx.transition.R$attr
org.greenrobot.greendao.annotation.Entity
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable:
    public void notifyItemRangeChanged(int,int)
    public void notifyItemRangeChanged(int,int,java.lang.Object)
    public void notifyItemRangeRemoved(int,int)
    public void notifyItemMoved(int,int)
androidx.viewpager2.widget.ViewPager2$1
org.greenrobot.greendao.query.CursorQuery$QueryData
androidx.recyclerview.widget.RecyclerView$ViewCacheExtension:
    public void <init>()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat:
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean)
    public int getColumnCount()
    public int getRowCount()
    public boolean isHierarchical()
    public int getSelectionMode()
    public static final int SELECTION_MODE_NONE
    public static final int SELECTION_MODE_SINGLE
    public static final int SELECTION_MODE_MULTIPLE
org.greenrobot.greendao.rx.RxDao$6
org.jetbrains.annotations.Nls
org.greenrobot.greendao.identityscope.IdentityScopeLong:
    public boolean detach(java.lang.Long,java.lang.Object)
    public void remove(java.lang.Long)
    public void remove(java.lang.Iterable)
    public void clear()
    public synthetic bridge void remove(java.lang.Object)
    public synthetic bridge boolean detach(java.lang.Object,java.lang.Object)
org.greenrobot.greendao.query.WhereCondition$StringCondition
androidx.appcompat.widget.ThemeUtils:
    public static android.content.res.ColorStateList createDisabledStateList(int,int)
    private void <init>()
androidx.appcompat.resources.R
androidx.appcompat.app.ActionBarDrawerToggle$Delegate
androidx.appcompat.widget.ButtonBarLayout:
    private static final int PEEK_BUTTON_DP
androidx.appcompat.widget.RtlSpacingHelper:
    public static final int UNDEFINED
com.google.android.material.behavior.SwipeDismissBehavior$1:
    private static final int INVALID_POINTER_ID
androidx.recyclerview.widget.LinearLayoutManager$LayoutState:
    void log()
    static final java.lang.String TAG
    static final int LAYOUT_START
    static final int LAYOUT_END
    static final int INVALID_LAYOUT
    static final int ITEM_DIRECTION_HEAD
    static final int ITEM_DIRECTION_TAIL
    static final int SCROLLING_OFFSET_NaN
com.eptonic.photocollage.util.FileUtils:
    public void <init>()
    public static final java.lang.String MIME_TYPE_IMAGE
    public static final java.lang.String MIME_TYPE_IMAGE2
    public static final java.lang.String MIME_TYPE_IMAGE3
    public static final java.lang.String MIME_TYPE_IMAGE4
androidx.core.view.ActionProvider:
    public android.content.Context getContext()
    public void refreshVisibility()
    public void subUiVisibilityChanged(boolean)
    private static final java.lang.String TAG
com.eptonic.photocollage.util.Utils:
    public void <init>()
    public static java.lang.String toUTCDateTimeStringxx(java.util.Date)
    public static final void setRecyclerAdapter(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$LayoutManager)
    public static void f(android.view.View,int)
com.google.android.material.floatingactionbutton.AnimatorTracker
com.bumptech.glide.request.target.ImageViewTarget:
    public void <init>(android.widget.ImageView,boolean)
    public android.graphics.drawable.Drawable getCurrentDrawable()
com.google.android.material.shape.InterpolateOnScrollPositionChangeHelper$1
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl:
    void initializeBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int)
    void setMinTouchTargetSize(int)
    final void setMaxImageSize(int)
    void removeOnShowAnimationListener(android.animation.Animator$AnimatorListener)
    public void removeOnHideAnimationListener(android.animation.Animator$AnimatorListener)
    void removeTransformationCallback(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback)
    com.google.android.material.shape.MaterialShapeDrawable createShapeDrawable()
    static final long ELEVATION_ANIM_DURATION
    static final long ELEVATION_ANIM_DELAY
    static final int ANIM_STATE_NONE
    static final int ANIM_STATE_HIDING
    static final int ANIM_STATE_SHOWING
    static final float SHADOW_MULTIPLIER
    private static final float HIDE_OPACITY
    private static final float HIDE_SCALE
    private static final float HIDE_ICON_SCALE
    private static final float SHOW_OPACITY
    private static final float SHOW_SCALE
    private static final float SHOW_ICON_SCALE
com.bumptech.glide.manager.RequestManagerRetriever:
    private static void findAllSupportFragmentsWithViews(java.util.Collection,java.util.Map)
    private androidx.fragment.app.Fragment findSupportFragment(android.view.View,androidx.fragment.app.FragmentActivity)
    private android.app.Fragment findFragment(android.view.View,android.app.Activity)
    private void findAllFragmentsWithViews(android.app.FragmentManager,androidx.collection.ArrayMap)
    private void findAllFragmentsWithViewsPreO(android.app.FragmentManager,androidx.collection.ArrayMap)
    public com.bumptech.glide.RequestManager get(androidx.fragment.app.Fragment)
    public com.bumptech.glide.RequestManager get(android.view.View)
    public com.bumptech.glide.RequestManager get(android.app.Fragment)
    static final java.lang.String FRAGMENT_TAG
    private static final java.lang.String TAG
    private static final int ID_REMOVE_FRAGMENT_MANAGER
    private static final int ID_REMOVE_SUPPORT_FRAGMENT_MANAGER
    private static final java.lang.String FRAGMENT_INDEX_KEY
com.bumptech.glide.RequestManager:
    private synchronized void updateRequestOptions(com.bumptech.glide.request.RequestOptions)
    public synchronized com.bumptech.glide.RequestManager applyDefaultRequestOptions(com.bumptech.glide.request.RequestOptions)
    public synchronized com.bumptech.glide.RequestManager setDefaultRequestOptions(com.bumptech.glide.request.RequestOptions)
    public com.bumptech.glide.RequestManager addDefaultRequestListener(com.bumptech.glide.request.RequestListener)
    public void setPauseAllRequestsOnTrimMemoryModerate(boolean)
    public synchronized boolean isPaused()
    public synchronized void pauseRequestsRecursive()
    public synchronized void resumeRequestsRecursive()
    public com.bumptech.glide.RequestBuilder asGif()
    public com.bumptech.glide.RequestBuilder load(android.graphics.Bitmap)
    public com.bumptech.glide.RequestBuilder load(android.graphics.drawable.Drawable)
    public com.bumptech.glide.RequestBuilder load(java.net.URL)
    public com.bumptech.glide.RequestBuilder load(byte[])
    public com.bumptech.glide.RequestBuilder load(java.lang.Object)
    public com.bumptech.glide.RequestBuilder downloadOnly()
    public com.bumptech.glide.RequestBuilder download(java.lang.Object)
    public com.bumptech.glide.RequestBuilder asFile()
    public void clear(android.view.View)
    public synthetic bridge java.lang.Object load(java.lang.Object)
    public synthetic bridge java.lang.Object load(byte[])
    public synthetic bridge java.lang.Object load(java.net.URL)
    public synthetic bridge java.lang.Object load(java.lang.Integer)
    public synthetic bridge java.lang.Object load(java.io.File)
    public synthetic bridge java.lang.Object load(android.net.Uri)
    public synthetic bridge java.lang.Object load(java.lang.String)
    public synthetic bridge java.lang.Object load(android.graphics.drawable.Drawable)
    public synthetic bridge java.lang.Object load(android.graphics.Bitmap)
com.bumptech.glide.Registry:
    public com.bumptech.glide.Registry register(java.lang.Class,com.bumptech.glide.load.Encoder)
    public com.bumptech.glide.Registry prepend(java.lang.Class,com.bumptech.glide.load.Encoder)
    public com.bumptech.glide.Registry prepend(java.lang.Class,java.lang.Class,com.bumptech.glide.load.ResourceDecoder)
    public com.bumptech.glide.Registry prepend(java.lang.String,java.lang.Class,java.lang.Class,com.bumptech.glide.load.ResourceDecoder)
    public com.bumptech.glide.Registry register(java.lang.Class,com.bumptech.glide.load.ResourceEncoder)
    public com.bumptech.glide.Registry prepend(java.lang.Class,com.bumptech.glide.load.ResourceEncoder)
    public com.bumptech.glide.Registry prepend(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory)
    public com.bumptech.glide.Registry replace(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory)
    public static final java.lang.String BUCKET_GIF
    public static final java.lang.String BUCKET_BITMAP
    public static final java.lang.String BUCKET_BITMAP_DRAWABLE
    private static final java.lang.String BUCKET_PREPEND_ALL
    private static final java.lang.String BUCKET_APPEND_ALL
com.google.android.material.shape.InterpolateOnScrollPositionChangeHelper
org.intellij.lang.annotations.RegExp
androidx.versionedparcelable.R
androidx.core.app.NotificationManagerCompat
androidx.vectordrawable.animated.R
androidx.core.app.RemoteInput$Source
androidx.appcompat.app.NavItemSelectedListener
androidx.core.app.NotificationManagerCompat$CancelTask
androidx.appcompat.widget.ActivityChooserView$4
androidx.collection.ArraySet:
    public void <init>(androidx.collection.ArraySet)
    public void <init>(java.util.Collection)
    public void addAll(androidx.collection.ArraySet)
    public boolean removeAll(androidx.collection.ArraySet)
    private static final boolean DEBUG
    private static final java.lang.String TAG
    private static final int BASE_SIZE
    private static final int CACHE_SIZE
org.greenrobot.greendao.identityscope.IdentityScope:
    public abstract boolean detach(java.lang.Object,java.lang.Object)
    public abstract void remove(java.lang.Object)
    public abstract void remove(java.lang.Iterable)
    public abstract void clear()
com.eptonic.photocollage.ui.view.template.ItemImageView:
    public void clearMainImage()
androidx.coordinatorlayout.R
androidx.core.os.OperationCanceledException
com.google.android.material.datepicker.UtcDates:
    private void <init>()
    static java.text.SimpleDateFormat getTextInputFormat()
    static java.lang.String getTextInputHint(android.content.res.Resources,java.text.SimpleDateFormat)
    static java.text.SimpleDateFormat getSimpleFormat(java.lang.String)
    static android.icu.text.DateFormat getYearAbbrMonthDayFormat(java.util.Locale)
    static android.icu.text.DateFormat getAbbrMonthDayFormat(java.util.Locale)
    static java.text.DateFormat getMediumFormat()
    static java.text.DateFormat getMediumFormat(java.util.Locale)
    static java.text.DateFormat getMediumNoYear()
    static java.text.DateFormat getMediumNoYear(java.util.Locale)
    static java.text.DateFormat getFullFormat()
    private static java.lang.String removeYearFromDateFormatPattern(java.lang.String)
    private static int findCharactersInDateFormatPattern(java.lang.String,java.lang.String,int,int)
    static final java.lang.String UTC
org.greenrobot.greendao.Property:
    public org.greenrobot.greendao.query.WhereCondition eq(java.lang.Object)
    public org.greenrobot.greendao.query.WhereCondition notEq(java.lang.Object)
    public org.greenrobot.greendao.query.WhereCondition like(java.lang.String)
    public org.greenrobot.greendao.query.WhereCondition between(java.lang.Object,java.lang.Object)
    public varargs org.greenrobot.greendao.query.WhereCondition in(java.lang.Object[])
    public org.greenrobot.greendao.query.WhereCondition in(java.util.Collection)
    public varargs org.greenrobot.greendao.query.WhereCondition notIn(java.lang.Object[])
    public org.greenrobot.greendao.query.WhereCondition notIn(java.util.Collection)
    public org.greenrobot.greendao.query.WhereCondition gt(java.lang.Object)
    public org.greenrobot.greendao.query.WhereCondition lt(java.lang.Object)
    public org.greenrobot.greendao.query.WhereCondition ge(java.lang.Object)
    public org.greenrobot.greendao.query.WhereCondition le(java.lang.Object)
    public org.greenrobot.greendao.query.WhereCondition isNull()
    public org.greenrobot.greendao.query.WhereCondition isNotNull()
androidx.savedstate.SavedStateRegistry:
    public void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)
    public void unregisterSavedStateProvider(java.lang.String)
    public boolean isRestored()
    public void runOnNextRecreation(java.lang.Class)
    private androidx.savedstate.Recreator$SavedStateProvider mRecreatorProvider
    private static final java.lang.String SAVED_COMPONENTS_KEY
androidx.exifinterface.media.ExifInterface:
    public void <init>(java.lang.String)
    private boolean updateAttribute(java.lang.String,androidx.exifinterface.media.ExifInterface$ExifAttribute)
    private void removeAttribute(java.lang.String)
    private void printAttributes()
    private static double convertRationalLatLonToDouble(java.lang.String,java.lang.String)
    private java.lang.String convertDecimalDegree(double)
    private void saveJpegAttributes(java.io.InputStream,java.io.OutputStream)
    private int writeExifSegment(androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream,int)
    private static android.util.Pair guessDataFormat(java.lang.String)
    private static void closeQuietly(java.io.Closeable)
    private static int copy(java.io.InputStream,java.io.OutputStream)
    public double getAttributeDouble(java.lang.String,double)
    public void setAttribute(java.lang.String,java.lang.String)
    public void resetOrientation()
    public void rotate(int)
    public void flipVertically()
    public void flipHorizontally()
    public boolean isFlipped()
    public int getRotationDegrees()
    public void saveAttributes()
    public boolean hasThumbnail()
    public byte[] getThumbnail()
    public byte[] getThumbnailBytes()
    public android.graphics.Bitmap getThumbnailBitmap()
    public boolean isThumbnailCompressed()
    public long[] getThumbnailRange()
    public boolean getLatLong(float[])
    public double[] getLatLong()
    public void setGpsInfo(android.location.Location)
    public void setLatLong(double,double)
    public double getAltitude(double)
    public void setAltitude(double)
    public void setDateTime(long)
    public long getDateTime()
    public long getGpsDateTime()
    private static final java.lang.String TAG
    private static final boolean DEBUG
    public static final java.lang.String TAG_IMAGE_WIDTH
    public static final java.lang.String TAG_IMAGE_LENGTH
    public static final java.lang.String TAG_BITS_PER_SAMPLE
    public static final java.lang.String TAG_COMPRESSION
    public static final java.lang.String TAG_PHOTOMETRIC_INTERPRETATION
    public static final java.lang.String TAG_ORIENTATION
    public static final java.lang.String TAG_SAMPLES_PER_PIXEL
    public static final java.lang.String TAG_PLANAR_CONFIGURATION
    public static final java.lang.String TAG_Y_CB_CR_SUB_SAMPLING
    public static final java.lang.String TAG_Y_CB_CR_POSITIONING
    public static final java.lang.String TAG_X_RESOLUTION
    public static final java.lang.String TAG_Y_RESOLUTION
    public static final java.lang.String TAG_RESOLUTION_UNIT
    public static final java.lang.String TAG_STRIP_OFFSETS
    public static final java.lang.String TAG_ROWS_PER_STRIP
    public static final java.lang.String TAG_STRIP_BYTE_COUNTS
    public static final java.lang.String TAG_JPEG_INTERCHANGE_FORMAT
    public static final java.lang.String TAG_JPEG_INTERCHANGE_FORMAT_LENGTH
    public static final java.lang.String TAG_TRANSFER_FUNCTION
    public static final java.lang.String TAG_WHITE_POINT
    public static final java.lang.String TAG_PRIMARY_CHROMATICITIES
    public static final java.lang.String TAG_Y_CB_CR_COEFFICIENTS
    public static final java.lang.String TAG_REFERENCE_BLACK_WHITE
    public static final java.lang.String TAG_DATETIME
    public static final java.lang.String TAG_IMAGE_DESCRIPTION
    public static final java.lang.String TAG_MAKE
    public static final java.lang.String TAG_MODEL
    public static final java.lang.String TAG_SOFTWARE
    public static final java.lang.String TAG_ARTIST
    public static final java.lang.String TAG_COPYRIGHT
    public static final java.lang.String TAG_EXIF_VERSION
    public static final java.lang.String TAG_FLASHPIX_VERSION
    public static final java.lang.String TAG_COLOR_SPACE
    public static final java.lang.String TAG_GAMMA
    public static final java.lang.String TAG_PIXEL_X_DIMENSION
    public static final java.lang.String TAG_PIXEL_Y_DIMENSION
    public static final java.lang.String TAG_COMPONENTS_CONFIGURATION
    public static final java.lang.String TAG_COMPRESSED_BITS_PER_PIXEL
    public static final java.lang.String TAG_MAKER_NOTE
    public static final java.lang.String TAG_USER_COMMENT
    public static final java.lang.String TAG_RELATED_SOUND_FILE
    public static final java.lang.String TAG_DATETIME_ORIGINAL
    public static final java.lang.String TAG_DATETIME_DIGITIZED
    public static final java.lang.String TAG_SUBSEC_TIME
    public static final java.lang.String TAG_SUBSEC_TIME_ORIGINAL
    public static final java.lang.String TAG_SUBSEC_TIME_DIGITIZED
    public static final java.lang.String TAG_EXPOSURE_TIME
    public static final java.lang.String TAG_F_NUMBER
    public static final java.lang.String TAG_EXPOSURE_PROGRAM
    public static final java.lang.String TAG_SPECTRAL_SENSITIVITY
    public static final java.lang.String TAG_ISO_SPEED_RATINGS
    public static final java.lang.String TAG_PHOTOGRAPHIC_SENSITIVITY
    public static final java.lang.String TAG_OECF
    public static final java.lang.String TAG_SENSITIVITY_TYPE
    public static final java.lang.String TAG_STANDARD_OUTPUT_SENSITIVITY
    public static final java.lang.String TAG_RECOMMENDED_EXPOSURE_INDEX
    public static final java.lang.String TAG_ISO_SPEED
    public static final java.lang.String TAG_ISO_SPEED_LATITUDE_YYY
    public static final java.lang.String TAG_ISO_SPEED_LATITUDE_ZZZ
    public static final java.lang.String TAG_SHUTTER_SPEED_VALUE
    public static final java.lang.String TAG_APERTURE_VALUE
    public static final java.lang.String TAG_BRIGHTNESS_VALUE
    public static final java.lang.String TAG_EXPOSURE_BIAS_VALUE
    public static final java.lang.String TAG_MAX_APERTURE_VALUE
    public static final java.lang.String TAG_SUBJECT_DISTANCE
    public static final java.lang.String TAG_METERING_MODE
    public static final java.lang.String TAG_LIGHT_SOURCE
    public static final java.lang.String TAG_FLASH
    public static final java.lang.String TAG_SUBJECT_AREA
    public static final java.lang.String TAG_FOCAL_LENGTH
    public static final java.lang.String TAG_FLASH_ENERGY
    public static final java.lang.String TAG_SPATIAL_FREQUENCY_RESPONSE
    public static final java.lang.String TAG_FOCAL_PLANE_X_RESOLUTION
    public static final java.lang.String TAG_FOCAL_PLANE_Y_RESOLUTION
    public static final java.lang.String TAG_FOCAL_PLANE_RESOLUTION_UNIT
    public static final java.lang.String TAG_SUBJECT_LOCATION
    public static final java.lang.String TAG_EXPOSURE_INDEX
    public static final java.lang.String TAG_SENSING_METHOD
    public static final java.lang.String TAG_FILE_SOURCE
    public static final java.lang.String TAG_SCENE_TYPE
    public static final java.lang.String TAG_CFA_PATTERN
    public static final java.lang.String TAG_CUSTOM_RENDERED
    public static final java.lang.String TAG_EXPOSURE_MODE
    public static final java.lang.String TAG_WHITE_BALANCE
    public static final java.lang.String TAG_DIGITAL_ZOOM_RATIO
    public static final java.lang.String TAG_FOCAL_LENGTH_IN_35MM_FILM
    public static final java.lang.String TAG_SCENE_CAPTURE_TYPE
    public static final java.lang.String TAG_GAIN_CONTROL
    public static final java.lang.String TAG_CONTRAST
    public static final java.lang.String TAG_SATURATION
    public static final java.lang.String TAG_SHARPNESS
    public static final java.lang.String TAG_DEVICE_SETTING_DESCRIPTION
    public static final java.lang.String TAG_SUBJECT_DISTANCE_RANGE
    public static final java.lang.String TAG_IMAGE_UNIQUE_ID
    public static final java.lang.String TAG_CAMARA_OWNER_NAME
    public static final java.lang.String TAG_BODY_SERIAL_NUMBER
    public static final java.lang.String TAG_LENS_SPECIFICATION
    public static final java.lang.String TAG_LENS_MAKE
    public static final java.lang.String TAG_LENS_MODEL
    public static final java.lang.String TAG_LENS_SERIAL_NUMBER
    public static final java.lang.String TAG_GPS_VERSION_ID
    public static final java.lang.String TAG_GPS_LATITUDE_REF
    public static final java.lang.String TAG_GPS_LATITUDE
    public static final java.lang.String TAG_GPS_LONGITUDE_REF
    public static final java.lang.String TAG_GPS_LONGITUDE
    public static final java.lang.String TAG_GPS_ALTITUDE_REF
    public static final java.lang.String TAG_GPS_ALTITUDE
    public static final java.lang.String TAG_GPS_TIMESTAMP
    public static final java.lang.String TAG_GPS_SATELLITES
    public static final java.lang.String TAG_GPS_STATUS
    public static final java.lang.String TAG_GPS_MEASURE_MODE
    public static final java.lang.String TAG_GPS_DOP
    public static final java.lang.String TAG_GPS_SPEED_REF
    public static final java.lang.String TAG_GPS_SPEED
    public static final java.lang.String TAG_GPS_TRACK_REF
    public static final java.lang.String TAG_GPS_TRACK
    public static final java.lang.String TAG_GPS_IMG_DIRECTION_REF
    public static final java.lang.String TAG_GPS_IMG_DIRECTION
    public static final java.lang.String TAG_GPS_MAP_DATUM
    public static final java.lang.String TAG_GPS_DEST_LATITUDE_REF
    public static final java.lang.String TAG_GPS_DEST_LATITUDE
    public static final java.lang.String TAG_GPS_DEST_LONGITUDE_REF
    public static final java.lang.String TAG_GPS_DEST_LONGITUDE
    public static final java.lang.String TAG_GPS_DEST_BEARING_REF
    public static final java.lang.String TAG_GPS_DEST_BEARING
    public static final java.lang.String TAG_GPS_DEST_DISTANCE_REF
    public static final java.lang.String TAG_GPS_DEST_DISTANCE
    public static final java.lang.String TAG_GPS_PROCESSING_METHOD
    public static final java.lang.String TAG_GPS_AREA_INFORMATION
    public static final java.lang.String TAG_GPS_DATESTAMP
    public static final java.lang.String TAG_GPS_DIFFERENTIAL
    public static final java.lang.String TAG_GPS_H_POSITIONING_ERROR
    public static final java.lang.String TAG_INTEROPERABILITY_INDEX
    public static final java.lang.String TAG_THUMBNAIL_IMAGE_LENGTH
    public static final java.lang.String TAG_THUMBNAIL_IMAGE_WIDTH
    public static final java.lang.String TAG_DNG_VERSION
    public static final java.lang.String TAG_DEFAULT_CROP_SIZE
    public static final java.lang.String TAG_ORF_THUMBNAIL_IMAGE
    public static final java.lang.String TAG_ORF_PREVIEW_IMAGE_START
    public static final java.lang.String TAG_ORF_PREVIEW_IMAGE_LENGTH
    public static final java.lang.String TAG_ORF_ASPECT_FRAME
    public static final java.lang.String TAG_RW2_SENSOR_BOTTOM_BORDER
    public static final java.lang.String TAG_RW2_SENSOR_LEFT_BORDER
    public static final java.lang.String TAG_RW2_SENSOR_RIGHT_BORDER
    public static final java.lang.String TAG_RW2_SENSOR_TOP_BORDER
    public static final java.lang.String TAG_RW2_ISO
    public static final java.lang.String TAG_RW2_JPG_FROM_RAW
    public static final java.lang.String TAG_NEW_SUBFILE_TYPE
    public static final java.lang.String TAG_SUBFILE_TYPE
    private static final java.lang.String TAG_EXIF_IFD_POINTER
    private static final java.lang.String TAG_GPS_INFO_IFD_POINTER
    private static final java.lang.String TAG_INTEROPERABILITY_IFD_POINTER
    private static final java.lang.String TAG_SUB_IFD_POINTER
    private static final java.lang.String TAG_ORF_CAMERA_SETTINGS_IFD_POINTER
    private static final java.lang.String TAG_ORF_IMAGE_PROCESSING_IFD_POINTER
    private static final java.lang.String TAG_HAS_THUMBNAIL
    private static final java.lang.String TAG_THUMBNAIL_OFFSET
    private static final java.lang.String TAG_THUMBNAIL_LENGTH
    private static final java.lang.String TAG_THUMBNAIL_DATA
    private static final int MAX_THUMBNAIL_SIZE
    public static final int ORIENTATION_UNDEFINED
    public static final int ORIENTATION_NORMAL
    public static final int ORIENTATION_FLIP_HORIZONTAL
    public static final int ORIENTATION_ROTATE_180
    public static final int ORIENTATION_FLIP_VERTICAL
    public static final int ORIENTATION_TRANSPOSE
    public static final int ORIENTATION_ROTATE_90
    public static final int ORIENTATION_TRANSVERSE
    public static final int ORIENTATION_ROTATE_270
    public static final short FORMAT_CHUNKY
    public static final short FORMAT_PLANAR
    public static final short Y_CB_CR_POSITIONING_CENTERED
    public static final short Y_CB_CR_POSITIONING_CO_SITED
    public static final short RESOLUTION_UNIT_INCHES
    public static final short RESOLUTION_UNIT_CENTIMETERS
    public static final int COLOR_SPACE_S_RGB
    public static final int COLOR_SPACE_UNCALIBRATED
    public static final short EXPOSURE_PROGRAM_NOT_DEFINED
    public static final short EXPOSURE_PROGRAM_MANUAL
    public static final short EXPOSURE_PROGRAM_NORMAL
    public static final short EXPOSURE_PROGRAM_APERTURE_PRIORITY
    public static final short EXPOSURE_PROGRAM_SHUTTER_PRIORITY
    public static final short EXPOSURE_PROGRAM_CREATIVE
    public static final short EXPOSURE_PROGRAM_ACTION
    public static final short EXPOSURE_PROGRAM_PORTRAIT_MODE
    public static final short EXPOSURE_PROGRAM_LANDSCAPE_MODE
    public static final short SENSITIVITY_TYPE_UNKNOWN
    public static final short SENSITIVITY_TYPE_SOS
    public static final short SENSITIVITY_TYPE_REI
    public static final short SENSITIVITY_TYPE_ISO_SPEED
    public static final short SENSITIVITY_TYPE_SOS_AND_REI
    public static final short SENSITIVITY_TYPE_SOS_AND_ISO
    public static final short SENSITIVITY_TYPE_REI_AND_ISO
    public static final short SENSITIVITY_TYPE_SOS_AND_REI_AND_ISO
    public static final short METERING_MODE_UNKNOWN
    public static final short METERING_MODE_AVERAGE
    public static final short METERING_MODE_CENTER_WEIGHT_AVERAGE
    public static final short METERING_MODE_SPOT
    public static final short METERING_MODE_MULTI_SPOT
    public static final short METERING_MODE_PATTERN
    public static final short METERING_MODE_PARTIAL
    public static final short METERING_MODE_OTHER
    public static final short LIGHT_SOURCE_UNKNOWN
    public static final short LIGHT_SOURCE_DAYLIGHT
    public static final short LIGHT_SOURCE_FLUORESCENT
    public static final short LIGHT_SOURCE_TUNGSTEN
    public static final short LIGHT_SOURCE_FLASH
    public static final short LIGHT_SOURCE_FINE_WEATHER
    public static final short LIGHT_SOURCE_CLOUDY_WEATHER
    public static final short LIGHT_SOURCE_SHADE
    public static final short LIGHT_SOURCE_DAYLIGHT_FLUORESCENT
    public static final short LIGHT_SOURCE_DAY_WHITE_FLUORESCENT
    public static final short LIGHT_SOURCE_COOL_WHITE_FLUORESCENT
    public static final short LIGHT_SOURCE_WHITE_FLUORESCENT
    public static final short LIGHT_SOURCE_WARM_WHITE_FLUORESCENT
    public static final short LIGHT_SOURCE_STANDARD_LIGHT_A
    public static final short LIGHT_SOURCE_STANDARD_LIGHT_B
    public static final short LIGHT_SOURCE_STANDARD_LIGHT_C
    public static final short LIGHT_SOURCE_D55
    public static final short LIGHT_SOURCE_D65
    public static final short LIGHT_SOURCE_D75
    public static final short LIGHT_SOURCE_D50
    public static final short LIGHT_SOURCE_ISO_STUDIO_TUNGSTEN
    public static final short LIGHT_SOURCE_OTHER
    public static final short FLAG_FLASH_FIRED
    public static final short FLAG_FLASH_RETURN_LIGHT_NOT_DETECTED
    public static final short FLAG_FLASH_RETURN_LIGHT_DETECTED
    public static final short FLAG_FLASH_MODE_COMPULSORY_FIRING
    public static final short FLAG_FLASH_MODE_COMPULSORY_SUPPRESSION
    public static final short FLAG_FLASH_MODE_AUTO
    public static final short FLAG_FLASH_NO_FLASH_FUNCTION
    public static final short FLAG_FLASH_RED_EYE_SUPPORTED
    public static final short SENSOR_TYPE_NOT_DEFINED
    public static final short SENSOR_TYPE_ONE_CHIP
    public static final short SENSOR_TYPE_TWO_CHIP
    public static final short SENSOR_TYPE_THREE_CHIP
    public static final short SENSOR_TYPE_COLOR_SEQUENTIAL
    public static final short SENSOR_TYPE_TRILINEAR
    public static final short SENSOR_TYPE_COLOR_SEQUENTIAL_LINEAR
    public static final short FILE_SOURCE_OTHER
    public static final short FILE_SOURCE_TRANSPARENT_SCANNER
    public static final short FILE_SOURCE_REFLEX_SCANNER
    public static final short FILE_SOURCE_DSC
    public static final short SCENE_TYPE_DIRECTLY_PHOTOGRAPHED
    public static final short RENDERED_PROCESS_NORMAL
    public static final short RENDERED_PROCESS_CUSTOM
    public static final short EXPOSURE_MODE_AUTO
    public static final short EXPOSURE_MODE_MANUAL
    public static final short EXPOSURE_MODE_AUTO_BRACKET
    public static final int WHITEBALANCE_AUTO
    public static final int WHITEBALANCE_MANUAL
    public static final short WHITE_BALANCE_AUTO
    public static final short WHITE_BALANCE_MANUAL
    public static final short SCENE_CAPTURE_TYPE_STANDARD
    public static final short SCENE_CAPTURE_TYPE_LANDSCAPE
    public static final short SCENE_CAPTURE_TYPE_PORTRAIT
    public static final short SCENE_CAPTURE_TYPE_NIGHT
    public static final short GAIN_CONTROL_NONE
    public static final short GAIN_CONTROL_LOW_GAIN_UP
    public static final short GAIN_CONTROL_HIGH_GAIN_UP
    public static final short GAIN_CONTROL_LOW_GAIN_DOWN
    public static final short GAIN_CONTROL_HIGH_GAIN_DOWN
    public static final short CONTRAST_NORMAL
    public static final short CONTRAST_SOFT
    public static final short CONTRAST_HARD
    public static final short SATURATION_NORMAL
    public static final short SATURATION_LOW
    public static final short SATURATION_HIGH
    public static final short SHARPNESS_NORMAL
    public static final short SHARPNESS_SOFT
    public static final short SHARPNESS_HARD
    public static final short SUBJECT_DISTANCE_RANGE_UNKNOWN
    public static final short SUBJECT_DISTANCE_RANGE_MACRO
    public static final short SUBJECT_DISTANCE_RANGE_CLOSE_VIEW
    public static final short SUBJECT_DISTANCE_RANGE_DISTANT_VIEW
    public static final java.lang.String LATITUDE_NORTH
    public static final java.lang.String LATITUDE_SOUTH
    public static final java.lang.String LONGITUDE_EAST
    public static final java.lang.String LONGITUDE_WEST
    public static final short ALTITUDE_ABOVE_SEA_LEVEL
    public static final short ALTITUDE_BELOW_SEA_LEVEL
    public static final java.lang.String GPS_MEASUREMENT_IN_PROGRESS
    public static final java.lang.String GPS_MEASUREMENT_INTERRUPTED
    public static final java.lang.String GPS_MEASUREMENT_2D
    public static final java.lang.String GPS_MEASUREMENT_3D
    public static final java.lang.String GPS_SPEED_KILOMETERS_PER_HOUR
    public static final java.lang.String GPS_SPEED_MILES_PER_HOUR
    public static final java.lang.String GPS_SPEED_KNOTS
    public static final java.lang.String GPS_DIRECTION_TRUE
    public static final java.lang.String GPS_DIRECTION_MAGNETIC
    public static final java.lang.String GPS_DISTANCE_KILOMETERS
    public static final java.lang.String GPS_DISTANCE_MILES
    public static final java.lang.String GPS_DISTANCE_NAUTICAL_MILES
    public static final short GPS_MEASUREMENT_NO_DIFFERENTIAL
    public static final short GPS_MEASUREMENT_DIFFERENTIAL_CORRECTED
    public static final int DATA_UNCOMPRESSED
    public static final int DATA_HUFFMAN_COMPRESSED
    public static final int DATA_JPEG
    public static final int DATA_JPEG_COMPRESSED
    public static final int DATA_DEFLATE_ZIP
    public static final int DATA_PACK_BITS_COMPRESSED
    public static final int DATA_LOSSY_JPEG
    public static final int PHOTOMETRIC_INTERPRETATION_WHITE_IS_ZERO
    public static final int PHOTOMETRIC_INTERPRETATION_BLACK_IS_ZERO
    public static final int PHOTOMETRIC_INTERPRETATION_RGB
    public static final int PHOTOMETRIC_INTERPRETATION_YCBCR
    public static final int ORIGINAL_RESOLUTION_IMAGE
    public static final int REDUCED_RESOLUTION_IMAGE
    private static final int SIGNATURE_CHECK_SIZE
    private static final java.lang.String RAF_SIGNATURE
    private static final int RAF_OFFSET_TO_JPEG_IMAGE_OFFSET
    private static final int RAF_INFO_SIZE
    private static final int RAF_JPEG_LENGTH_VALUE_SIZE
    private static final short ORF_SIGNATURE_1
    private static final short ORF_SIGNATURE_2
    private static final int ORF_MAKER_NOTE_HEADER_1_SIZE
    private static final int ORF_MAKER_NOTE_HEADER_2_SIZE
    private static final short RW2_SIGNATURE
    private static final java.lang.String PEF_SIGNATURE
    private static final int PEF_MAKER_NOTE_SKIP_SIZE
    static final short BYTE_ALIGN_II
    static final short BYTE_ALIGN_MM
    static final byte START_CODE
    private static final int IFD_OFFSET
    private static final int IFD_FORMAT_BYTE
    private static final int IFD_FORMAT_STRING
    private static final int IFD_FORMAT_USHORT
    private static final int IFD_FORMAT_ULONG
    private static final int IFD_FORMAT_URATIONAL
    private static final int IFD_FORMAT_SBYTE
    private static final int IFD_FORMAT_UNDEFINED
    private static final int IFD_FORMAT_SSHORT
    private static final int IFD_FORMAT_SLONG
    private static final int IFD_FORMAT_SRATIONAL
    private static final int IFD_FORMAT_SINGLE
    private static final int IFD_FORMAT_DOUBLE
    private static final int IFD_FORMAT_IFD
    static final int IFD_TYPE_PRIMARY
    private static final int IFD_TYPE_EXIF
    private static final int IFD_TYPE_GPS
    private static final int IFD_TYPE_INTEROPERABILITY
    static final int IFD_TYPE_THUMBNAIL
    static final int IFD_TYPE_PREVIEW
    private static final int IFD_TYPE_ORF_MAKER_NOTE
    private static final int IFD_TYPE_ORF_CAMERA_SETTINGS
    private static final int IFD_TYPE_ORF_IMAGE_PROCESSING
    private static final int IFD_TYPE_PEF
    static final byte MARKER
    private static final byte MARKER_SOI
    private static final byte MARKER_SOF0
    private static final byte MARKER_SOF1
    private static final byte MARKER_SOF2
    private static final byte MARKER_SOF3
    private static final byte MARKER_SOF5
    private static final byte MARKER_SOF6
    private static final byte MARKER_SOF7
    private static final byte MARKER_SOF9
    private static final byte MARKER_SOF10
    private static final byte MARKER_SOF11
    private static final byte MARKER_SOF13
    private static final byte MARKER_SOF14
    private static final byte MARKER_SOF15
    private static final byte MARKER_SOS
    static final byte MARKER_APP1
    private static final byte MARKER_COM
    static final byte MARKER_EOI
    private static final int IMAGE_TYPE_UNKNOWN
    private static final int IMAGE_TYPE_ARW
    private static final int IMAGE_TYPE_CR2
    private static final int IMAGE_TYPE_DNG
    private static final int IMAGE_TYPE_JPEG
    private static final int IMAGE_TYPE_NEF
    private static final int IMAGE_TYPE_NRW
    private static final int IMAGE_TYPE_ORF
    private static final int IMAGE_TYPE_PEF
    private static final int IMAGE_TYPE_RAF
    private static final int IMAGE_TYPE_RW2
    private static final int IMAGE_TYPE_SRW
androidx.vectordrawable.animated.R$styleable
com.google.android.material.resources.MaterialResources:
    private void <init>()
androidx.recyclerview.R$style
com.yd.photoeditor.view.colorpicker.ColorPickerPanelView
com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder:
    private static final java.lang.String TAG
com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$2
androidx.core.app.NotificationCompat$GroupAlertBehavior
androidx.viewpager2.adapter.FragmentStateAdapter$2:
    void <init>(androidx.viewpager2.adapter.FragmentStateAdapter,androidx.viewpager2.adapter.FragmentViewHolder)
com.bumptech.glide.request.transition.ViewTransition$ViewTransitionAnimationFactory
androidx.appcompat.widget.AppCompatSpinner:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,int)
    private static final int MAX_ITEMS_MEASURED
    private static final java.lang.String TAG
    private static final int MODE_DIALOG
    private static final int MODE_DROPDOWN
    private static final int MODE_THEME
androidx.activity.R$style
androidx.exifinterface.media.ExifInterface$IfdType
com.google.android.material.expandable.ExpandableTransformationWidget:
    public abstract int getExpandedComponentIdHint()
    public abstract void setExpandedComponentIdHint(int)
androidx.transition.ChangeTransform$3
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper
androidx.core.content.res.ColorStateListInflaterCompat:
    private void <init>()
org.intellij.lang.annotations.JdkConstants$TreeSelectionMode
androidx.transition.FragmentTransitionSupport$4:
    public android.graphics.Rect onGetEpicenter(androidx.transition.Transition)
androidx.appcompat.widget.ScrollingTabContainerView:
    public void <init>(android.content.Context)
    private androidx.appcompat.widget.LinearLayoutCompat createTabLayout()
    public void animateToVisibility(int)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)
    public void updateTab(int)
    public void removeTabAt(int)
    public void removeAllTabs()
    protected android.view.ViewPropertyAnimator mVisibilityAnim
    protected final androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener mVisAnimListener
    private static final java.lang.String TAG
    private static final int FADE_DURATION
com.eptonic.photocollage.model.DaoMaster$DevOpenHelper:
    public void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory)
androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener
androidx.core.database.DatabaseUtilsCompat
com.google.android.material.appbar.AppBarLayout$Behavior:
    public synthetic bridge void setDragCallback(com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback)
    public synthetic bridge boolean isHorizontalOffsetEnabled()
    public synthetic bridge void setHorizontalOffsetEnabled(boolean)
    public synthetic bridge boolean isVerticalOffsetEnabled()
    public synthetic bridge void setVerticalOffsetEnabled(boolean)
    public synthetic bridge int getLeftAndRightOffset()
    public synthetic bridge boolean setLeftAndRightOffset(int)
com.google.android.material.snackbar.BaseTransientBottomBar$7
com.google.android.material.appbar.ViewUtilsLollipop:
    void <init>()
    static void setBoundsViewOutlineProvider(android.view.View)
    static void setStateListAnimatorFromAttrs(android.view.View,android.util.AttributeSet,int,int)
org.greenrobot.greendao.annotation.Unique
com.bumptech.glide.load.model.ByteBufferFileLoader$Factory:
    public void teardown()
androidx.viewpager2.adapter.FragmentViewHolder:
    private void <init>(android.widget.FrameLayout)
    static androidx.viewpager2.adapter.FragmentViewHolder create(android.view.ViewGroup)
androidx.appcompat.view.menu.ListMenuPresenter:
    int getItemIndexOffset()
    public void setItemIndexOffset(int)
    public void saveHierarchyState(android.os.Bundle)
    public void restoreHierarchyState(android.os.Bundle)
    public void setId(int)
    public int getId()
    public android.os.Parcelable onSaveInstanceState()
    public void onRestoreInstanceState(android.os.Parcelable)
    private int mId
    private static final java.lang.String TAG
    public static final java.lang.String VIEWS_TAG
com.google.android.material.bottomsheet.BottomSheetBehavior$SaveFlags
androidx.recyclerview.widget.GridLayoutManager:
    public void setSpanSizeLookup(androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup)
    public androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup getSpanSizeLookup()
    public void setUsingSpansToEstimateScrollbarDimensions(boolean)
    public boolean isUsingSpansToEstimateScrollbarDimensions()
    private static final boolean DEBUG
    private static final java.lang.String TAG
    public static final int DEFAULT_SPAN_COUNT
com.google.android.material.appbar.AppBarLayout$Behavior$DragCallback
com.yd.photoeditor.imageprocessing.filter.effect.Fxxx:
    public void <init>()
    public static final java.lang.String VIGNETTING_FRAGMENT_SHADER
com.bumptech.glide.util.ByteBufferUtil:
    private void <init>()
    public static void toStream(java.nio.ByteBuffer,java.io.OutputStream)
    private static final int BUFFER_SIZE
com.bumptech.glide.gifdecoder.GifHeaderParser:
    public com.bumptech.glide.gifdecoder.GifHeaderParser setData(byte[])
    public boolean isAnimated()
    private static final java.lang.String TAG
    private static final int MASK_INT_LOWEST_BYTE
    private static final int IMAGE_SEPARATOR
    private static final int EXTENSION_INTRODUCER
    private static final int TRAILER
    private static final int LABEL_GRAPHIC_CONTROL_EXTENSION
    private static final int LABEL_APPLICATION_EXTENSION
    private static final int LABEL_COMMENT_EXTENSION
    private static final int LABEL_PLAIN_TEXT_EXTENSION
    private static final int GCE_MASK_DISPOSAL_METHOD
    private static final int GCE_DISPOSAL_METHOD_SHIFT
    private static final int GCE_MASK_TRANSPARENT_COLOR_FLAG
    private static final int DESCRIPTOR_MASK_LCT_FLAG
    private static final int DESCRIPTOR_MASK_INTERLACE_FLAG
    private static final int DESCRIPTOR_MASK_LCT_SIZE
    private static final int LSD_MASK_GCT_FLAG
    private static final int LSD_MASK_GCT_SIZE
    static final int MIN_FRAME_DELAY
    static final int DEFAULT_FRAME_DELAY
    private static final int MAX_BLOCK_SIZE
androidx.annotation.AnimRes
androidx.annotation.XmlRes
androidx.lifecycle.ViewModelStore:
    java.util.Set keys()
androidx.appcompat.R
com.eptonic.photocollage.ui.wrapper.dah.ghjf.gfhs.fhsj.ghsj.hfjsh.fhsj.fhsj.hfjs.fdj.sjhfs.fgsj.jgks.vbb.uiManager.BaseTemplateManager$1
androidx.activity.OnBackPressedDispatcher:
    public void <init>()
    public void addCallback(androidx.activity.OnBackPressedCallback)
    public boolean hasEnabledCallbacks()
androidx.annotation.IntDef
androidx.core.os.CancellationSignal$OnCancelListener
androidx.recyclerview.R$layout
androidx.core.view.KeyEventDispatcher:
    private void <init>()
androidx.viewpager2.R$color
androidx.appcompat.view.menu.ActionMenuItemView:
    public void setShortcut(boolean,char)
    public boolean showsIcon()
    private static final java.lang.String TAG
    private static final int MAX_ICON_SIZE
androidx.core.content.res.TypedArrayUtils:
    public static boolean getBoolean(android.content.res.TypedArray,int,int,boolean)
    public static android.graphics.drawable.Drawable getDrawable(android.content.res.TypedArray,int,int)
    public static int getInt(android.content.res.TypedArray,int,int,int)
    public static int getResourceId(android.content.res.TypedArray,int,int,int)
    public static java.lang.String getString(android.content.res.TypedArray,int,int)
    public static java.lang.CharSequence getText(android.content.res.TypedArray,int,int)
    public static java.lang.CharSequence[] getTextArray(android.content.res.TypedArray,int,int)
    public static int getAttr(android.content.Context,int,int)
    private void <init>()
    private static final java.lang.String NAMESPACE
com.google.android.material.R$plurals
androidx.transition.TransitionInflater
com.google.android.material.R$string:
    private void <init>()
com.bumptech.glide.load.data.HttpUrlFetcher:
    private static final java.lang.String TAG
    private static final int MAXIMUM_REDIRECTS
    private static final int INVALID_STATUS_CODE
androidx.recyclerview.widget.DiffUtil$Range
com.google.android.material.snackbar.BaseTransientBottomBar$10
androidx.core.content.pm.ShortcutManagerCompat
androidx.coordinatorlayout.R$dimen
org.greenrobot.greendao.converter.PropertyConverter
org.greenrobot.greendao.annotation.OrderBy
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState:
    private static final long REVERSED_BIT
    private static final long REVERSIBLE_FLAG_BIT
androidx.core.widget.ScrollerCompat
androidx.core.provider.FontsContractCompat$4$7
com.eptonic.photocollage.ui.wrapper.dah.ghjf.gfhs.fhsj.ghsj.hfjsh.fhsj.fhsj.hfjs.fdj.sjhfs.fgsj.jgks.vbb.ActivityHandler:
    public java.lang.Object newProxyInstance(java.lang.Class)
com.bumptech.glide.provider.ResourceEncoderRegistry:
    public synchronized void prepend(java.lang.Class,com.bumptech.glide.load.ResourceEncoder)
androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator
com.google.android.material.switchmaterial.SwitchMaterial
com.bumptech.glide.request.transition.ViewAnimationFactory$ResourceViewTransitionAnimationFactory
androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl
androidx.appcompat.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener
org.greenrobot.greendao.rx.RxDao$19
androidx.viewpager.widget.PagerAdapter
com.bumptech.glide.request.target.ViewTarget$SizeDeterminer:
    private static final int PENDING_SIZE
androidx.appcompat.widget.ToolbarWidgetWrapper:
    private void ensureSpinner()
    public java.lang.CharSequence getSubtitle()
    public boolean hasIcon()
    public boolean hasLogo()
    public boolean hasEmbeddedTabs()
    public boolean isTitleTruncated()
    public void setNavigationMode(int)
    public void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener)
    public void setDropdownSelectedPosition(int)
    public int getDropdownSelectedPosition()
    public int getDropdownItemCount()
    public android.view.View getCustomView()
    public void animateToVisibility(int)
    public void setNavigationIcon(int)
    public void setDefaultNavigationIcon(android.graphics.drawable.Drawable)
    public void saveHierarchyState(android.util.SparseArray)
    public void restoreHierarchyState(android.util.SparseArray)
    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public int getHeight()
    public int getVisibility()
    public void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
    public android.view.Menu getMenu()
    private android.widget.Spinner mSpinner
    private static final java.lang.String TAG
    private static final int AFFECTS_LOGO_MASK
    private static final long DEFAULT_FADE_DURATION_MS
androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate
com.google.android.material.datepicker.MaterialTextInputPicker
androidx.constraintlayout.solver.SolverVariable$1
androidx.viewpager2.widget.ViewPager2$SavedState$1
androidx.viewpager2.widget.ViewPager2
androidx.drawerlayout.R$layout
com.yd.photoeditor.imageprocessing.temp.ImageFilter2:
    public void setdownSurfaceTexture(android.hardware.Camera)
    public void setImageBitmap(android.graphics.Bitmap)
    public void setRotationCamera(com.yd.photoeditor.imageprocessing.temp.ImageFilter6,boolean,boolean)
    public com.yd.photoeditor.imageprocessing.temp.ImageFilter6 getRotation()
    public boolean isFlippedHorizontally()
    public boolean isFlippedVertically()
    public java.nio.IntBuffer gLRgbBuffer
    public static final int NO_IMAGE
androidx.appcompat.resources.R$styleable:
    private void <init>()
com.eptonic.photocollage.ui.next.s.xx.xxx.yy.cc.activity.TemplateDetailActivity$4
androidx.core.provider.FontsContractCompat$Columns
com.google.android.material.circularreveal.cardview.CircularRevealCardView:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void actualDraw(android.graphics.Canvas)
    public boolean actualIsOpaque()
com.bumptech.glide.load.model.MultiModelLoaderFactory:
    private com.bumptech.glide.load.model.ModelLoaderFactory getFactory(com.bumptech.glide.load.model.MultiModelLoaderFactory$Entry)
    synchronized void prepend(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory)
    synchronized java.util.List replace(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory)
    synchronized java.util.List remove(java.lang.Class,java.lang.Class)
androidx.loader.content.Loader:
    public void <init>(android.content.Context)
    public void deliverResult(java.lang.Object)
    public void deliverCancellation()
    public android.content.Context getContext()
    public int getId()
    public void registerListener(int,androidx.loader.content.Loader$OnLoadCompleteListener)
    public void registerOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener)
    public void unregisterOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener)
    public boolean isStarted()
    public boolean isAbandoned()
    public boolean isReset()
    protected void onStartLoading()
    protected boolean onCancelLoad()
    public void forceLoad()
    protected void onForceLoad()
    protected void onStopLoading()
    protected void onAbandon()
    protected void onReset()
    public boolean takeContentChanged()
    public void commitContentChanged()
    public void rollbackContentChanged()
    public void onContentChanged()
    public java.lang.String toString()
    int mId
    androidx.loader.content.Loader$OnLoadCompleteListener mListener
    androidx.loader.content.Loader$OnLoadCanceledListener mOnLoadCanceledListener
    android.content.Context mContext
    boolean mStarted
    boolean mAbandoned
    boolean mReset
    boolean mContentChanged
    boolean mProcessingChange
com.bumptech.glide.request.transition.NoTransition:
    public static com.bumptech.glide.request.transition.Transition get()
com.bumptech.glide.annotation.Excludes
com.google.android.material.bottomsheet.BottomSheetDialog
androidx.lifecycle.ClassesInfoCache:
    private static final int CALL_TYPE_NO_ARG
    private static final int CALL_TYPE_PROVIDER
    private static final int CALL_TYPE_PROVIDER_WITH_EVENT
androidx.constraintlayout.widget.ConstraintLayout:
    public void fillMetrics(androidx.constraintlayout.solver.Metrics)
    static final boolean ALLOWS_EMBEDDED
    private static final boolean CACHE_MEASURED_DIMENSION
    public static final java.lang.String VERSION
    private static final java.lang.String TAG
    private static final boolean USE_CONSTRAINTS_HELPER
    private static final boolean DEBUG
    public static final int DESIGN_INFO_ID
androidx.transition.ChangeImageTransform$1
androidx.drawerlayout.widget.DrawerLayout$LayoutParams
androidx.activity.R$id
androidx.appcompat.widget.ActivityChooserView$Callbacks
com.bumptech.glide.request.target.DrawableThumbnailImageViewTarget
org.intellij.lang.annotations.JdkConstants$CalendarMonth
com.bumptech.glide.util.FixedPreloadSizeProvider
androidx.core.view.MarginLayoutParamsCompat:
    public static void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
    public static void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
    public static boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
    public static int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
    public static void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
    public static void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
    private void <init>()
com.yd.photoeditor.vv.FileUtils:
    public void <init>()
    public static java.lang.String getExtension(java.lang.String)
    public static boolean isLocal(java.lang.String)
    public static boolean isMediaUri(android.net.Uri)
    public static android.net.Uri getUri(java.io.File)
    public static java.io.File getPathWithoutFilename(java.io.File)
    public static java.lang.String getMimeType(java.io.File)
    public static java.lang.String getMimeType(android.content.Context,android.net.Uri)
    public static java.io.File getFile(android.content.Context,android.net.Uri)
    public static java.lang.String getReadableFileSize(int)
    public static android.graphics.Bitmap getThumbnail(android.content.Context,java.io.File)
    public static android.graphics.Bitmap getThumbnail(android.content.Context,android.net.Uri)
    public static android.graphics.Bitmap getThumbnail(android.content.Context,android.net.Uri,java.lang.String)
    public static android.content.Intent createGetContentIntent()
    public static void cleanTempFiles()
    public static boolean saveToFile(java.io.InputStream,java.io.File)
    public static void downloadFile(java.lang.String,java.lang.String)
    public static java.lang.String sha128s(java.lang.String)
    public static void deleteFile(java.io.File)
    public static void unzip(java.lang.String,java.lang.String)
    private static void extractFolder(java.io.File,java.io.File)
    public static java.lang.String saveBitmapToFile(android.graphics.Bitmap,java.lang.String)
    public static java.lang.String generateMD5(java.lang.String,long,long)
    public static java.lang.String generateMD5(java.io.InputStream)
    public static java.lang.String byteArrayToHexString(byte[])
    public static boolean copyFile(java.io.File,java.io.File)
    private static final boolean DEBUG
    public static final java.lang.String HIDDEN_PREFIX
    public static final java.lang.String MIME_TYPE_APP
    public static final java.lang.String MIME_TYPE_AUDIO
    public static final java.lang.String MIME_TYPE_IMAGE
    public static final java.lang.String MIME_TYPE_TEXT
    public static final java.lang.String MIME_TYPE_VIDEO
    static final java.lang.String TAG
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat:
    public static androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat create(android.content.Context,int)
    private static boolean unregisterPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    private static void registerPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    private void removeAnimatorSetListener()
    public static void registerAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public static boolean unregisterAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public static void clearAnimationCallbacks(android.graphics.drawable.Drawable)
    public void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public void clearAnimationCallbacks()
    androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState mCachedConstantStateDelegate
    private static final java.lang.String LOGTAG
    private static final java.lang.String ANIMATED_VECTOR
    private static final java.lang.String TARGET
    private static final boolean DBG_ANIMATION_VECTOR_DRAWABLE
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask
com.eptonic.photocollage.resEncryption.SPHelper:
    public void <init>()
com.google.android.material.animation.AnimatorSetCompat:
    public void <init>()
com.eptonic.photocollage.ui.view.PhotoView:
    public void clearAllImageEntities()
    public void removeImageEntity(com.eptonic.photocollage.ui.mutitouchh.MultiTouchEntity)
    public android.graphics.Bitmap getImage(float)
    public void trackballClicked()
    private int height
    private int width
    private static final long DOUBLE_CLICK_TIME_INTERVAL
    private static final float SCREEN_MARGIN
    private static final int UI_MODE_ANISOTROPIC_SCALE
    private static final int UI_MODE_ROTATE
com.eptonic.photocollage.R$anim
com.google.android.material.R$interpolator
com.eptonic.photocollage.util.ResultContainer:
    public void removeImageEntity(com.eptonic.photocollage.ui.mutitouchh.MultiTouchEntity)
    public void putImageEntities(java.util.ArrayList)
    public java.util.ArrayList copyImageEntities()
    public android.net.Uri getPhotoBackgroundImage()
    public void setPhotoBackgroundImage(android.net.Uri)
    public void setFrameBackgroundImage(android.net.Uri)
    public android.net.Uri getFrameBackgroundImage()
    public void putFrameImage(com.eptonic.photocollage.ui.view.frame.FrameEntity)
    public java.util.ArrayList copyFrameImages()
    public void putFrameSticker(com.eptonic.photocollage.ui.mutitouchh.MultiTouchEntity)
    public void putFrameStickerImages(java.util.ArrayList)
    public java.util.ArrayList copyFrameStickerImages()
    public void removeFrameSticker(com.eptonic.photocollage.ui.mutitouchh.MultiTouchEntity)
    public void clearFrameImages()
    public void clearAll()
    public void clearAllImageInFrameCreator()
    public void saveToBundle(android.os.Bundle)
    public void restoreFromBundle(android.os.Bundle)
    public static final java.lang.String FRAME_BACKGROUND_IMAGE_KEY
    public static final java.lang.String FRAME_IMAGES_KEY
    public static final java.lang.String FRAME_STICKER_IMAGES_KEY
    public static final java.lang.String IMAGES_KEY
    public static final java.lang.String PHOTO_BACKGROUND_IMAGE_KEY
androidx.annotation.IntRange
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation
androidx.core.text.BidiFormatter$DirectionalityEstimator:
    private static final int DIR_TYPE_CACHE_SIZE
org.jetbrains.annotations.TestOnly
com.yd.photoeditor.imageprocessing.temp.ImageFilter4:
    public void saveToPictures(java.lang.String,java.lang.String,com.yd.photoeditor.imageprocessing.temp.ImageFilter3$OnPictureSavedListener)
com.google.android.material.resources.MaterialAttributes:
    public void <init>()
    public static boolean resolveBooleanOrThrow(android.content.Context,int,java.lang.String)
    public static int resolveMinimumAccessibleTouchTarget(android.content.Context)
    public static int resolveDimension(android.content.Context,int,int)
com.bumptech.glide.load.engine.executor.GlideExecutor:
    public static com.bumptech.glide.load.engine.executor.GlideExecutor newDiskCacheExecutor(com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy)
    public static com.bumptech.glide.load.engine.executor.GlideExecutor newDiskCacheExecutor(int,java.lang.String,com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy)
    public static com.bumptech.glide.load.engine.executor.GlideExecutor newSourceExecutor(com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy)
    public static com.bumptech.glide.load.engine.executor.GlideExecutor newSourceExecutor(int,java.lang.String,com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy)
    public static com.bumptech.glide.load.engine.executor.GlideExecutor newAnimationExecutor(int,com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy)
    private static final java.lang.String DEFAULT_SOURCE_EXECUTOR_NAME
    private static final java.lang.String DEFAULT_DISK_CACHE_EXECUTOR_NAME
    private static final int DEFAULT_DISK_CACHE_EXECUTOR_THREADS
    private static final java.lang.String TAG
    private static final java.lang.String DEFAULT_SOURCE_UNLIMITED_EXECUTOR_NAME
    private static final java.lang.String DEFAULT_ANIMATION_EXECUTOR_NAME
    private static final int MAXIMUM_AUTOMATIC_THREAD_COUNT
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuViewAccessibilityDelegate
com.yd.photoeditor.R$plurals
com.yd.photoeditor.imageprocessing.filter.colour.P4:
    public static final java.lang.String AAAAA
com.google.android.material.shape.ShapeAppearanceModel:
    public com.google.android.material.shape.ShapeAppearanceModel withCornerSize(com.google.android.material.shape.CornerSize)
com.bumptech.glide.load.model.stream.UrlLoader$StreamFactory:
    public void teardown()
com.google.android.material.R$styleable:
    private void <init>()
androidx.recyclerview.widget.MessageThreadUtil$2$1
org.greenrobot.greendao.async.AsyncOperationExecutor$1
androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback
com.bumptech.glide.request.target.PreloadTarget$1
com.google.android.material.datepicker.RangeDateSelector$1
org.greenrobot.greendao.identityscope.IdentityScopeObject:
    public boolean detach(java.lang.Object,java.lang.Object)
    public void remove(java.lang.Object)
    public void remove(java.lang.Iterable)
    public void clear()
com.bumptech.glide.gifdecoder.StandardGifDecoder:
    public void <init>(com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.gifdecoder.GifHeader,java.nio.ByteBuffer)
    private com.bumptech.glide.gifdecoder.GifHeaderParser getHeaderParser()
    public int getWidth()
    public int getHeight()
    public int getStatus()
    public int getLoopCount()
    public int getNetscapeLoopCount()
    public int getTotalIterationCount()
    public int read(java.io.InputStream,int)
    public synchronized void setData(com.bumptech.glide.gifdecoder.GifHeader,byte[])
    public synchronized void setData(com.bumptech.glide.gifdecoder.GifHeader,java.nio.ByteBuffer)
    public synchronized int read(byte[])
    private com.bumptech.glide.gifdecoder.GifHeaderParser parser
    private static final int MAX_STACK_SIZE
    private static final int NULL_CODE
    private static final int INITIAL_FRAME_POINTER
    private static final int BYTES_PER_INTEGER
    private static final int MASK_INT_LOWEST_BYTE
    private static final int COLOR_TRANSPARENT_BLACK
com.eptonic.photocollage.R$dimen
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuItem
org.greenrobot.greendao.async.AsyncDaoException
com.bumptech.glide.request.target.ViewTarget:
    public void <init>(android.view.View,boolean)
    public static void setTagId(int)
    public final com.bumptech.glide.request.target.ViewTarget clearOnDetach()
    void resumeMyRequest()
    void pauseMyRequest()
    public final com.bumptech.glide.request.target.ViewTarget waitForLayout()
    public android.view.View getView()
    private static final java.lang.String TAG
org.greenrobot.greendao.rx.RxDao$14
androidx.core.widget.ListViewCompat:
    public static boolean canScrollList(android.widget.ListView,int)
    private void <init>()
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer:
    void <init>(androidx.viewpager2.adapter.FragmentStateAdapter)
    private androidx.viewpager2.widget.ViewPager2 inferViewPager(androidx.recyclerview.widget.RecyclerView)
    void register(androidx.recyclerview.widget.RecyclerView)
    void unregister(androidx.recyclerview.widget.RecyclerView)
    private androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback mPageChangeCallback
    private androidx.recyclerview.widget.RecyclerView$AdapterDataObserver mDataObserver
    private androidx.lifecycle.LifecycleEventObserver mLifecycleObserver
    private androidx.viewpager2.widget.ViewPager2 mViewPager
    private long mPrimaryItemId
    final synthetic androidx.viewpager2.adapter.FragmentStateAdapter this$0
androidx.transition.Styleable$TransitionSet
androidx.viewpager2.adapter.StatefulAdapter
androidx.core.R$dimen
androidx.core.view.ViewCompat$FocusRealDirection
androidx.core.app.JobIntentService$GenericWorkItem
androidx.transition.ViewOverlayApi14$OverlayViewGroup:
    protected android.view.ViewParent invalidateChildInParentFast(int,int,android.graphics.Rect)
org.greenrobot.greendao.test.DbTest
com.google.android.material.dialog.MaterialDialogs
com.yd.photoeditor.imageprocessing.util.OpenGlUtils:
    public void <init>()
    public static int loadTexture(android.graphics.Bitmap,int)
    public static int loadTexture(java.nio.IntBuffer,android.hardware.Camera$Size,int)
    public static int loadTextureAsBitmap(java.nio.IntBuffer,android.hardware.Camera$Size,int)
    public static float rnd(float,float)
    public static final int NO_TEXTURE
com.bumptech.glide.load.engine.cache.MemoryCache:
    public abstract long getCurrentSize()
    public abstract long getMaxSize()
    public abstract void setSizeMultiplier(float)
org.intellij.lang.annotations.JdkConstants$TitledBorderTitlePosition
androidx.transition.ArcMotion
com.bumptech.glide.load.data.mediastore.MediaStoreUtil:
    private void <init>()
    private static final int MINI_THUMB_WIDTH
    private static final int MINI_THUMB_HEIGHT
com.yd.photoeditor.view.FocusImageView
com.eptonic.photocollage.model.ItemInfo:
    public void setLastModified(java.lang.String)
    public void setId(long)
    public void setStatus(java.lang.String)
    public java.lang.String getStatus()
    public long getId()
    public java.lang.String getLastModified()
    public void setShowingType(int)
    public int getShowingType()
    public void setThumbnail(java.lang.String)
    public java.lang.String getThumbnail()
    public void setSelectedThumbnail(java.lang.String)
    public java.lang.String getSelectedThumbnail()
    public static final int ADD_ITEM_TYPE
androidx.coordinatorlayout.R$attr:
    private void <init>()
com.bumptech.glide.load.engine.executor.GlideExecutor$Builder:
    public com.bumptech.glide.load.engine.executor.GlideExecutor$Builder setThreadTimeoutMillis(long)
    public com.bumptech.glide.load.engine.executor.GlideExecutor$Builder setUncaughtThrowableStrategy(com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy)
    public static final long NO_THREAD_TIMEOUT
org.jetbrains.annotations.Nullable
androidx.appcompat.R$layout:
    private void <init>()
androidx.appcompat.widget.AppCompatSeekBarHelper:
    android.graphics.drawable.Drawable getTickMark()
    void setTickMarkTintList(android.content.res.ColorStateList)
    android.content.res.ColorStateList getTickMarkTintList()
    void setTickMarkTintMode(android.graphics.PorterDuff$Mode)
    android.graphics.PorterDuff$Mode getTickMarkTintMode()
com.google.android.material.navigation.NavigationView$1
com.yd.photoeditor.particle.Explosion
com.google.android.material.navigation.NavigationView$SavedState
androidx.annotation.DrawableRes
com.eptonic.photocollage.ui.next.s.xx.xxx.yy.cc.activity.PCFreelyEditActivity:
    public void onSelectRecyclerClose()
    public void onTabUnselected(com.google.android.material.tabs.TabLayout$Tab)
    public void onSave()
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$2
com.eptonic.photocollage.R$style
com.yd.photoeditor.actions.BaseAction:
    public abstract java.lang.String getActionName()
    public void onActivityDestroy()
    public void onActivityPause()
    public void onActivityResume()
    public void saveInstanceState(android.os.Bundle)
    public void restoreInstanceState(android.os.Bundle)
    public void onApplyButtonClick()
androidx.recyclerview.widget.ItemTouchHelper$ViewDropHandler
androidx.viewpager2.adapter.FragmentStateAdapter$4
com.bumptech.glide.load.engine.prefill.PreFillQueue
androidx.recyclerview.widget.ItemTouchHelper$2
com.bumptech.glide.disklrucache.Util:
    private void <init>()
    static java.lang.String readFully(java.io.Reader)
com.google.android.material.textfield.IndicatorViewController:
    private boolean isCaptionStateHelperText(int)
    boolean errorIsDisplayed()
    boolean helperTextIsDisplayed()
    boolean helperTextShouldBeShown()
    android.content.res.ColorStateList getHelperTextViewColors()
    private static final int CAPTION_TRANSLATE_Y_ANIMATION_DURATION
    private static final int CAPTION_OPACITY_FADE_ANIMATION_DURATION
    static final int ERROR_INDEX
    static final int HELPER_INDEX
    static final int COUNTER_INDEX
    private static final int CAPTION_STATE_NONE
    private static final int CAPTION_STATE_ERROR
    private static final int CAPTION_STATE_HELPER_TEXT
com.eptonic.photocollage.model.DaoSession:
    public void clear()
    public com.eptonic.photocollage.model.PhotoStickerSaveDataDao getPhotoStickerSaveDataDao()
com.google.android.material.internal.ParcelableSparseBooleanArray
com.google.android.material.internal.NavigationMenuItemView:
    public void recycle()
    public void setShortcut(boolean,char)
    public boolean showsIcon()
com.bumptech.glide.signature.ApplicationVersionSignature:
    static void reset()
    private void <init>()
    private static final java.lang.String TAG
androidx.appcompat.widget.PopupMenu$2
com.eptonic.photocollage.R$id
androidx.transition.MatrixUtils
androidx.exifinterface.media.ExifInterface$Rational:
    void <init>(double)
androidx.lifecycle.MutableLiveData:
    public void postValue(java.lang.Object)
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener
com.yd.photoeditor.imageprocessing.filter.processing.WWWVWW
com.eptonic.photocollage.R$attr
androidx.viewpager2.widget.CompositePageTransformer
androidx.core.content.res.FontResourcesParserCompat$FetchStrategy
com.bumptech.glide.load.resource.bitmap.Downsampler:
    static final java.lang.String TAG
    private static final java.lang.String WBMP_MIME_TYPE
    private static final java.lang.String ICO_MIME_TYPE
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImpl
androidx.annotation.LongDef
com.google.android.material.R$anim
com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper:
    public static synchronized com.bumptech.glide.load.engine.cache.DiskCache get(java.io.File,long)
    private synchronized void resetDiskCache()
    public void delete(com.bumptech.glide.load.Key)
    public synchronized void clear()
    private static final java.lang.String TAG
    private static final int APP_VERSION
    private static final int VALUE_COUNT
    private static com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper wrapper
com.google.android.material.internal.DescendantOffsetUtils:
    public void <init>()
androidx.exifinterface.R
androidx.core.app.ServiceCompat
com.yd.photoeditor.vv.DialogUtils$1
androidx.constraintlayout.solver.widgets.ConstraintAnchor:
    private boolean isConnectionToMe(androidx.constraintlayout.solver.widgets.ConstraintWidget,java.util.HashSet)
    public androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType getConnectionType()
    public void setConnectionType(androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType)
    public void setConnectionCreator(int)
    public boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int)
    public boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)
    public boolean isSideAnchor()
    public boolean isSimilarDimensionConnection(androidx.constraintlayout.solver.widgets.ConstraintAnchor)
    public void setStrength(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength)
    public void setMargin(int)
    public void setGoneMargin(int)
    public boolean isVerticalAnchor()
    public int getSnapPriorityLevel()
    public int getPriorityLevel()
    public boolean isSnapCompatibleWith(androidx.constraintlayout.solver.widgets.ConstraintAnchor)
    public boolean isConnectionAllowed(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor)
    public boolean isConnectionAllowed(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public final androidx.constraintlayout.solver.widgets.ConstraintAnchor getOpposite()
    private static final boolean ALLOW_BINARY
    public static final int USER_CREATOR
    public static final int SCOUT_CREATOR
    public static final int AUTO_CONSTRAINT_CREATOR
    private static final int UNSET_GONE_MARGIN
com.google.android.material.circularreveal.CircularRevealHelper:
    public void <init>(com.google.android.material.circularreveal.CircularRevealHelper$Delegate)
    private void invalidateRevealInfo()
    private float getDistanceToFurthestCorner(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
    private void drawOverlayDrawable(android.graphics.Canvas)
    private boolean shouldDrawCircularReveal()
    private boolean shouldDrawScrim()
    private boolean shouldDrawOverlayDrawable()
    private void drawDebugMode(android.graphics.Canvas)
    private void drawDebugCircle(android.graphics.Canvas,int,float)
    private final com.google.android.material.circularreveal.CircularRevealHelper$Delegate delegate
    private final android.view.View view
    private final android.graphics.Path revealPath
    private final android.graphics.Paint revealPaint
    private final android.graphics.Paint scrimPaint
    private com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo revealInfo
    private android.graphics.drawable.Drawable overlayDrawable
    private android.graphics.Paint debugPaint
    private boolean buildingCircularRevealCache
    private boolean hasCircularRevealCache
    private static final boolean DEBUG
    public static final int BITMAP_SHADER
    public static final int CLIP_PATH
    public static final int REVEAL_ANIMATOR
androidx.loader.content.ModernAsyncTask$2
com.bumptech.glide.load.model.ModelLoaderRegistry:
    private void tearDown(java.util.List)
    public synchronized void prepend(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory)
    public synchronized void remove(java.lang.Class,java.lang.Class)
    public synchronized void replace(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory)
    public synchronized com.bumptech.glide.load.model.ModelLoader build(java.lang.Class,java.lang.Class)
com.eptonic.photocollage.resEncryption.utils.ReflectException:
    public void <init>(java.lang.String)
    public void <init>(java.lang.String,java.lang.Throwable)
    public void <init>()
    private static final long serialVersionUID
androidx.loader.content.ModernAsyncTask$WorkerRunnable
androidx.core.content.FileProvider
androidx.appcompat.R$string:
    private void <init>()
com.bumptech.glide.load.engine.DecodeJob:
    private static final java.lang.String TAG
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1
androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper
com.google.android.material.R$attr:
    private void <init>()
androidx.core.content.ContextCompat:
    protected void <init>()
    public static boolean startActivities(android.content.Context,android.content.Intent[])
    public static void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
    public static java.io.File getDataDir(android.content.Context)
    public static java.io.File[] getObbDirs(android.content.Context)
    public static java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)
    public static java.io.File[] getExternalCacheDirs(android.content.Context)
    public static java.io.File getNoBackupFilesDir(android.content.Context)
    public static java.io.File getCodeCacheDir(android.content.Context)
    private static synchronized java.io.File createFilesDir(java.io.File)
    public static android.content.Context createDeviceProtectedStorageContext(android.content.Context)
    public static boolean isDeviceProtectedStorage(android.content.Context)
    public static java.util.concurrent.Executor getMainExecutor(android.content.Context)
    public static void startForegroundService(android.content.Context,android.content.Intent)
    public static java.lang.Object getSystemService(android.content.Context,java.lang.Class)
    public static java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
    private static final java.lang.String TAG
androidx.annotation.Dimension
com.google.android.material.animation.MotionSpec:
    private android.animation.PropertyValuesHolder[] clonePropertyValuesHolder(android.animation.PropertyValuesHolder[])
    public boolean hasPropertyValues(java.lang.String)
    public android.animation.PropertyValuesHolder[] getPropertyValues(java.lang.String)
    public android.animation.ObjectAnimator getAnimator(java.lang.String,java.lang.Object,android.util.Property)
    private static final java.lang.String TAG
org.greenrobot.greendao.rx.RxDao
androidx.core.widget.EdgeEffectCompat:
    public void <init>(android.content.Context)
    public void setSize(int,int)
    public boolean isFinished()
    public void finish()
    public boolean onPull(float)
    public boolean onPull(float,float)
    public boolean onRelease()
    public boolean onAbsorb(int)
    public boolean draw(android.graphics.Canvas)
    private android.widget.EdgeEffect mEdgeEffect
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments:
    public int getStart()
    public int getEnd()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams$Table:
    private void <init>()
    public static final int UNUSED
    public static final int ANDROID_ORIENTATION
    public static final int LAYOUT_CONSTRAINT_CIRCLE
    public static final int LAYOUT_CONSTRAINT_CIRCLE_RADIUS
    public static final int LAYOUT_CONSTRAINT_CIRCLE_ANGLE
    public static final int LAYOUT_CONSTRAINT_GUIDE_BEGIN
    public static final int LAYOUT_CONSTRAINT_GUIDE_END
    public static final int LAYOUT_CONSTRAINT_GUIDE_PERCENT
    public static final int LAYOUT_CONSTRAINT_LEFT_TO_LEFT_OF
    public static final int LAYOUT_CONSTRAINT_LEFT_TO_RIGHT_OF
    public static final int LAYOUT_CONSTRAINT_RIGHT_TO_LEFT_OF
    public static final int LAYOUT_CONSTRAINT_RIGHT_TO_RIGHT_OF
    public static final int LAYOUT_CONSTRAINT_TOP_TO_TOP_OF
    public static final int LAYOUT_CONSTRAINT_TOP_TO_BOTTOM_OF
    public static final int LAYOUT_CONSTRAINT_BOTTOM_TO_TOP_OF
    public static final int LAYOUT_CONSTRAINT_BOTTOM_TO_BOTTOM_OF
    public static final int LAYOUT_CONSTRAINT_BASELINE_TO_BASELINE_OF
    public static final int LAYOUT_CONSTRAINT_START_TO_END_OF
    public static final int LAYOUT_CONSTRAINT_START_TO_START_OF
    public static final int LAYOUT_CONSTRAINT_END_TO_START_OF
    public static final int LAYOUT_CONSTRAINT_END_TO_END_OF
    public static final int LAYOUT_GONE_MARGIN_LEFT
    public static final int LAYOUT_GONE_MARGIN_TOP
    public static final int LAYOUT_GONE_MARGIN_RIGHT
    public static final int LAYOUT_GONE_MARGIN_BOTTOM
    public static final int LAYOUT_GONE_MARGIN_START
    public static final int LAYOUT_GONE_MARGIN_END
    public static final int LAYOUT_CONSTRAINED_WIDTH
    public static final int LAYOUT_CONSTRAINED_HEIGHT
    public static final int LAYOUT_CONSTRAINT_HORIZONTAL_BIAS
    public static final int LAYOUT_CONSTRAINT_VERTICAL_BIAS
    public static final int LAYOUT_CONSTRAINT_WIDTH_DEFAULT
    public static final int LAYOUT_CONSTRAINT_HEIGHT_DEFAULT
    public static final int LAYOUT_CONSTRAINT_WIDTH_MIN
    public static final int LAYOUT_CONSTRAINT_WIDTH_MAX
    public static final int LAYOUT_CONSTRAINT_WIDTH_PERCENT
    public static final int LAYOUT_CONSTRAINT_HEIGHT_MIN
    public static final int LAYOUT_CONSTRAINT_HEIGHT_MAX
    public static final int LAYOUT_CONSTRAINT_HEIGHT_PERCENT
    public static final int LAYOUT_CONSTRAINT_LEFT_CREATOR
    public static final int LAYOUT_CONSTRAINT_TOP_CREATOR
    public static final int LAYOUT_CONSTRAINT_RIGHT_CREATOR
    public static final int LAYOUT_CONSTRAINT_BOTTOM_CREATOR
    public static final int LAYOUT_CONSTRAINT_BASELINE_CREATOR
    public static final int LAYOUT_CONSTRAINT_DIMENSION_RATIO
    public static final int LAYOUT_CONSTRAINT_HORIZONTAL_WEIGHT
    public static final int LAYOUT_CONSTRAINT_VERTICAL_WEIGHT
    public static final int LAYOUT_CONSTRAINT_HORIZONTAL_CHAINSTYLE
    public static final int LAYOUT_CONSTRAINT_VERTICAL_CHAINSTYLE
    public static final int LAYOUT_EDITOR_ABSOLUTEX
    public static final int LAYOUT_EDITOR_ABSOLUTEY
com.yd.photoeditor.imageprocessing.filter.TwoInputRender:
    public void <init>(java.lang.String)
    public void <init>(java.lang.String,java.lang.String)
    public void setRotation(com.yd.photoeditor.imageprocessing.temp.ImageFilter6,boolean,boolean)
    public android.graphics.Bitmap getBitmap()
    public void recycleBitmap()
    private static final java.lang.String VERTEX_SHADER
androidx.appcompat.widget.ShareActionProvider
com.yd.photoeditor.imageprocessing.filter.effect.F123
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath:
    public void printVPath(int)
    public java.lang.String nodesToString(androidx.core.graphics.PathParser$PathDataNode[])
    public boolean canApplyTheme()
    public void applyTheme(android.content.res.Resources$Theme)
    protected static final int FILL_TYPE_WINDING
androidx.core.app.NotificationCompat$Action$Builder
com.google.android.material.floatingactionbutton.MotionStrategy:
    public abstract com.google.android.material.animation.MotionSpec getCurrentMotionSpec()
    public abstract int getDefaultMotionSpecResource()
    public abstract void addAnimationListener(android.animation.Animator$AnimatorListener)
    public abstract void removeAnimationListener(android.animation.Animator$AnimatorListener)
androidx.appcompat.R$bool:
    private void <init>()
androidx.core.os.UserManagerCompat
org.intellij.lang.annotations.PrintFormat
androidx.annotation.CallSuper
androidx.lifecycle.LiveData:
    public void observeForever(androidx.lifecycle.Observer)
    public void removeObservers(androidx.lifecycle.LifecycleOwner)
    protected void postValue(java.lang.Object)
    int getVersion()
    public boolean hasObservers()
    static final int START_VERSION
androidx.core.util.AtomicFile
androidx.appcompat.app.WindowDecorActionBar$TabImpl
androidx.vectordrawable.R$integer
androidx.loader.R$layout
com.google.android.material.datepicker.SmoothCalendarLayoutManager:
    private static final float MILLISECONDS_PER_INCH
com.google.android.material.snackbar.BaseTransientBottomBar$3
com.eptonic.photocollage.util.FrameImageUtils:
    public void <init>()
    private static com.eptonic.photocollage.model.TemplateItem template_2_4()
    private static com.eptonic.photocollage.model.TemplateItem template_2_3()
    private static com.eptonic.photocollage.model.TemplateItem template_2_2()
    private static com.eptonic.photocollage.model.TemplateItem template_2_1()
    private static com.eptonic.photocollage.model.TemplateItem template_2_0()
    private static final java.lang.String PREVIEW_POSTFIX
    private static final java.lang.String TEMPLATE_FOLDER
    private static final java.lang.String TEMPLATE_POSTFIX
com.eptonic.photocollage.ui.view.frame.FrameEntity$1
androidx.core.app.ShareCompat$IntentBuilder
androidx.fragment.app.FragmentManagerNonConfig
androidx.viewpager2.R$attr
com.google.android.material.circularreveal.CircularRevealWidget:
    public abstract void draw(android.graphics.Canvas)
    public abstract boolean isOpaque()
    public abstract android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
com.bumptech.glide.load.resource.bitmap.ExifInterfaceImageHeaderParser:
    public int getOrientation(java.nio.ByteBuffer,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)
androidx.core.view.MenuItemCompat:
    public static void setShowAsAction(android.view.MenuItem,int)
    public static android.view.MenuItem setActionView(android.view.MenuItem,android.view.View)
    public static android.view.MenuItem setActionView(android.view.MenuItem,int)
    public static android.view.View getActionView(android.view.MenuItem)
    public static androidx.core.view.ActionProvider getActionProvider(android.view.MenuItem)
    public static boolean expandActionView(android.view.MenuItem)
    public static boolean collapseActionView(android.view.MenuItem)
    public static boolean isActionViewExpanded(android.view.MenuItem)
    public static android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,androidx.core.view.MenuItemCompat$OnActionExpandListener)
    public static java.lang.CharSequence getContentDescription(android.view.MenuItem)
    public static java.lang.CharSequence getTooltipText(android.view.MenuItem)
    public static void setShortcut(android.view.MenuItem,char,char,int,int)
    public static int getNumericModifiers(android.view.MenuItem)
    public static int getAlphabeticModifiers(android.view.MenuItem)
    public static android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
    public static android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
    private void <init>()
    private static final java.lang.String TAG
    public static final int SHOW_AS_ACTION_NEVER
    public static final int SHOW_AS_ACTION_IF_ROOM
    public static final int SHOW_AS_ACTION_ALWAYS
    public static final int SHOW_AS_ACTION_WITH_TEXT
    public static final int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
androidx.appcompat.app.ActionBar:
    public abstract void setCustomView(android.view.View)
    public abstract void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams)
    public abstract void setCustomView(int)
    public abstract void setIcon(int)
    public abstract void setIcon(android.graphics.drawable.Drawable)
    public abstract void setLogo(int)
    public abstract void setLogo(android.graphics.drawable.Drawable)
    public abstract void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener)
    public abstract void setSelectedNavigationItem(int)
    public abstract int getSelectedNavigationIndex()
    public abstract int getNavigationItemCount()
    public abstract void setTitle(int)
    public abstract void setSubtitle(java.lang.CharSequence)
    public abstract void setSubtitle(int)
    public abstract void setDisplayOptions(int)
    public abstract void setDisplayOptions(int,int)
    public abstract void setDisplayUseLogoEnabled(boolean)
    public abstract void setDisplayShowHomeEnabled(boolean)
    public abstract void setDisplayHomeAsUpEnabled(boolean)
    public abstract void setDisplayShowTitleEnabled(boolean)
    public abstract void setDisplayShowCustomEnabled(boolean)
    public abstract void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
    public void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
    public abstract android.view.View getCustomView()
    public abstract java.lang.CharSequence getTitle()
    public abstract java.lang.CharSequence getSubtitle()
    public abstract int getNavigationMode()
    public abstract void setNavigationMode(int)
    public abstract androidx.appcompat.app.ActionBar$Tab newTab()
    public abstract void addTab(androidx.appcompat.app.ActionBar$Tab)
    public abstract void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)
    public abstract void addTab(androidx.appcompat.app.ActionBar$Tab,int)
    public abstract void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)
    public abstract void removeTab(androidx.appcompat.app.ActionBar$Tab)
    public abstract void removeTabAt(int)
    public abstract void removeAllTabs()
    public abstract void selectTab(androidx.appcompat.app.ActionBar$Tab)
    public abstract androidx.appcompat.app.ActionBar$Tab getSelectedTab()
    public abstract androidx.appcompat.app.ActionBar$Tab getTabAt(int)
    public abstract int getTabCount()
    public abstract int getHeight()
    public abstract void show()
    public abstract void hide()
    public abstract boolean isShowing()
    public abstract void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    public abstract void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    public void setHomeButtonEnabled(boolean)
    public boolean isTitleTruncated()
    public void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
    public void setHomeAsUpIndicator(int)
    public void setHomeActionContentDescription(java.lang.CharSequence)
    public void setHomeActionContentDescription(int)
    public void setHideOnContentScrollEnabled(boolean)
    public boolean isHideOnContentScrollEnabled()
    public int getHideOffset()
    public void setHideOffset(int)
    public void setElevation(float)
    public float getElevation()
    boolean requestFocus()
    public static final int NAVIGATION_MODE_STANDARD
    public static final int NAVIGATION_MODE_LIST
    public static final int NAVIGATION_MODE_TABS
    public static final int DISPLAY_USE_LOGO
    public static final int DISPLAY_SHOW_HOME
    public static final int DISPLAY_HOME_AS_UP
    public static final int DISPLAY_SHOW_TITLE
    public static final int DISPLAY_SHOW_CUSTOM
org.greenrobot.greendao.annotation.JoinEntity
androidx.transition.ChangeClipBounds
androidx.loader.content.Loader$OnLoadCompleteListener:
    public abstract void onLoadComplete(androidx.loader.content.Loader,java.lang.Object)
androidx.transition.ChangeTransform$GhostListener
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase
com.yd.photoeditor.imageprocessing.filter.processing.WWVVWWW
org.intellij.lang.annotations.JdkConstants$BoxLayoutAxis
androidx.core.widget.AutoSizeableTextView:
    public abstract void setAutoSizeTextTypeWithDefaults(int)
    public abstract void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
    public abstract void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
    public abstract int getAutoSizeTextType()
    public abstract int getAutoSizeStepGranularity()
    public abstract int getAutoSizeMinTextSize()
    public abstract int getAutoSizeMaxTextSize()
    public abstract int[] getAutoSizeTextAvailableSizes()
androidx.appcompat.widget.AppCompatCompoundButtonHelper$DirectSetButtonDrawableInterface
androidx.viewpager2.R$style
com.google.android.material.snackbar.BaseTransientBottomBar$4
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter:
    public androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
    public int getId()
    public android.os.Parcelable onSaveInstanceState()
    public void onRestoreInstanceState(android.os.Parcelable)
com.bumptech.glide.load.model.ByteBufferFileLoader:
    private static final java.lang.String TAG
androidx.versionedparcelable.VersionedParcelStream
androidx.appcompat.app.AppCompatDelegate:
    public static androidx.appcompat.app.AppCompatDelegate create(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback)
    public static androidx.appcompat.app.AppCompatDelegate create(android.content.Context,android.app.Activity,androidx.appcompat.app.AppCompatCallback)
    public static void setDefaultNightMode(int)
    public static void setCompatVectorFromResourcesEnabled(boolean)
    public static boolean isCompatVectorFromResourcesEnabled()
    private static void applyDayNightToActiveDelegates()
    public abstract void setSupportActionBar(androidx.appcompat.widget.Toolbar)
    public abstract androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
    public abstract boolean hasWindowFeature(int)
    public abstract androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
    public abstract android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
    public abstract void setHandleNativeActionModesEnabled(boolean)
    public abstract boolean isHandleNativeActionModesEnabled()
    public abstract boolean applyDayNight()
    public abstract void setLocalNightMode(int)
    static final java.lang.String TAG
    public static final int MODE_NIGHT_FOLLOW_SYSTEM
    public static final int MODE_NIGHT_AUTO_TIME
    public static final int MODE_NIGHT_AUTO
    public static final int MODE_NIGHT_NO
    public static final int MODE_NIGHT_YES
    public static final int MODE_NIGHT_AUTO_BATTERY
    public static final int MODE_NIGHT_UNSPECIFIED
    public static final int FEATURE_SUPPORT_ACTION_BAR
    public static final int FEATURE_SUPPORT_ACTION_BAR_OVERLAY
    public static final int FEATURE_ACTION_MODE_OVERLAY
com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader$Factory:
    public void teardown()
com.yd.photoeditor.imageprocessing.filter.processing.VVVVV
androidx.recyclerview.widget.DiffUtil$Callback
androidx.core.view.inputmethod.EditorInfoCompat
androidx.appcompat.view.menu.MenuHelper
androidx.appcompat.widget.ListPopupWindow$1
com.bumptech.glide.request.target.AppWidgetTarget
org.greenrobot.greendao.AbstractDaoSession:
    public long insertOrReplace(java.lang.Object)
    public void refresh(java.lang.Object)
    public void update(java.lang.Object)
    public void delete(java.lang.Object)
    public void deleteAll(java.lang.Class)
    public java.lang.Object load(java.lang.Class,java.lang.Object)
    public java.util.List loadAll(java.lang.Class)
    public varargs java.util.List queryRaw(java.lang.Class,java.lang.String,java.lang.String[])
    public void runInTx(java.lang.Runnable)
    public java.lang.Object callInTx(java.util.concurrent.Callable)
    public java.lang.Object callInTxNoException(java.util.concurrent.Callable)
    public org.greenrobot.greendao.database.Database getDatabase()
    public java.util.Collection getAllDaos()
    public org.greenrobot.greendao.async.AsyncSession startAsyncSession()
    public org.greenrobot.greendao.rx.RxTransaction rxTxPlain()
    public org.greenrobot.greendao.rx.RxTransaction rxTx()
    private volatile org.greenrobot.greendao.rx.RxTransaction rxTxPlain
    private volatile org.greenrobot.greendao.rx.RxTransaction rxTxIo
com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo:
    public void <init>(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
    public void set(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
    public boolean isInvalid()
    public static final float INVALID_RADIUS
androidx.viewpager.widget.ViewPager$4
com.bumptech.glide.load.model.DataUrlLoader$StreamFactory:
    public void teardown()
com.bumptech.glide.request.RequestFutureTarget
com.google.android.material.tabs.TabLayout
org.intellij.lang.annotations.JdkConstants$InputEventMask
com.eptonic.photocollage.util.Constants:
    public void <init>()
    public static final java.lang.String DB_NAME
    public static final java.lang.String EXTRA_IMAGE_IN_TEMPLATE_COUNT
    public static final java.lang.String EXTRA_IMAGE_PATHS
    public static final java.lang.String EXTRA_IS_FRAME_IMAGE
    public static final java.lang.String EXTRA_TITLE
    public static final java.lang.String EXTRA_SELECTED_TEMPLATE_INDEX
androidx.appcompat.widget.ActionMenuPresenter$SavedState$1
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo
androidx.viewpager2.R$drawable
com.bumptech.glide.util.ContentLengthInputStream:
    public static java.io.InputStream obtain(java.io.InputStream,java.lang.String)
    private static int parseContentLength(java.lang.String)
    private static final java.lang.String TAG
    private static final int UNKNOWN
androidx.constraintlayout.solver.ArrayRow:
    public androidx.constraintlayout.solver.ArrayRow createRowGreaterThan(androidx.constraintlayout.solver.SolverVariable,int,androidx.constraintlayout.solver.SolverVariable)
    public androidx.constraintlayout.solver.ArrayRow createRowEqualDimension(float,float,float,androidx.constraintlayout.solver.SolverVariable,int,androidx.constraintlayout.solver.SolverVariable,int,androidx.constraintlayout.solver.SolverVariable,int,androidx.constraintlayout.solver.SolverVariable,int)
    int sizeInBytes()
    private static final boolean DEBUG
    private static final float epsilon
com.yd.photoeditor.imageprocessing.filter.ImageRender:
    public static java.lang.String loadShader(java.lang.String,android.content.Context)
    public static java.lang.String convertStreamToString(java.io.InputStream)
    public int getAttribPosition()
    public int getAttribTextureCoordinate()
    public int getUniformTexture()
    public void setFloatVec2(int,float[])
    public void setFloatVec4(int,float[])
    public void setFloatVec4Array(int,float[])
    public void setFloatArray(int,float[])
    public static final java.lang.String NO_FILTER_FRAGMENT_SHADER
    public static final java.lang.String NO_FILTER_VERTEX_SHADER
androidx.annotation.Px
androidx.vectordrawable.R$color
org.greenrobot.greendao.test.AbstractDaoSessionTest
androidx.appcompat.text.AllCapsTransformationMethod
org.intellij.lang.annotations.JdkConstants$PatternFlags
com.yd.photoeditor.R$xml
com.eptonic.photocollage.ui.view.template.MultiTouchHandler:
    public void setMatrix(android.graphics.Matrix)
    public void reset()
    private static final int DRAG
    private static final int NONE
    private static final int ZOOM
com.bumptech.glide.load.engine.executor.RuntimeCompat:
    private void <init>()
    private static final java.lang.String TAG
    private static final java.lang.String CPU_NAME_REGEX
    private static final java.lang.String CPU_LOCATION
androidx.core.provider.FontsContractCompat$4$8
androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1
com.yd.photoeditor.vv.Utils:
    public static void clearCachedImage(java.lang.String)
    public static java.io.File savedAndRemoveCachedImage(java.lang.String)
    public static java.io.File copyFileFromAsset(android.content.Context,java.lang.String,java.lang.String,boolean)
    public static boolean hasKitKat()
    public static float dpFromPx(android.content.Context,float)
    public static float pxFromDp(android.content.Context,float)
    public static boolean copyFile(java.io.File,java.io.File)
    public static void enableStrictMode()
    public static boolean hasFroyo()
    public static boolean hasGingerbread()
    public static boolean hasHoneycomb()
    public static boolean hasHoneycombMR1()
    public static boolean hasJellyBean()
    public static java.lang.String stringTransform(java.lang.String,int)
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder:
    public void <init>(android.content.Context)
    private static final java.lang.String TAG
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser:
    public int getOrientation(java.nio.ByteBuffer,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)
    private static final java.lang.String TAG
    private static final int GIF_HEADER
    private static final int PNG_HEADER
    static final int EXIF_MAGIC_NUMBER
    private static final int MOTOROLA_TIFF_MAGIC_NUMBER
    private static final int INTEL_TIFF_MAGIC_NUMBER
    private static final java.lang.String JPEG_EXIF_SEGMENT_PREAMBLE
    private static final int SEGMENT_SOS
    private static final int MARKER_EOI
    static final int SEGMENT_START_ID
    static final int EXIF_SEGMENT_TYPE
    private static final int ORIENTATION_TAG_TYPE
    private static final int RIFF_HEADER
    private static final int WEBP_HEADER
    private static final int VP8_HEADER
    private static final int VP8_HEADER_MASK
    private static final int VP8_HEADER_TYPE_MASK
    private static final int VP8_HEADER_TYPE_EXTENDED
    private static final int VP8_HEADER_TYPE_LOSSLESS
    private static final int WEBP_EXTENDED_ALPHA_FLAG
    private static final int WEBP_LOSSLESS_ALPHA_FLAG
com.yd.photoeditor.vv.DialogUtils$DialogOnClickListener
androidx.core.app.NotificationManagerCompat$Task
androidx.core.os.ConfigurationCompat
androidx.cardview.widget.CardView$1
androidx.recyclerview.R$styleable:
    private void <init>()
androidx.annotation.StringRes
com.yd.photoeditor.imageprocessing.filter.ImageRender$3
androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent
com.yd.photoeditor.actions.RotationAction:
    public java.lang.String getActionName()
    public void saveInstanceState(android.os.Bundle)
    public void restoreInstanceState(android.os.Bundle)
    public void onActivityResume()
    private static final java.lang.String ROTATION_ACTION_PREF_NAME
    private static final java.lang.String SHOW_GUIDE_NAME
androidx.core.view.inputmethod.InputConnectionCompat$2
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper
androidx.core.app.JobIntentService$WorkEnqueuer
com.google.android.material.internal.ViewUtils$3
androidx.appcompat.app.ToolbarActionBar:
    void <init>(androidx.appcompat.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback)
    private android.view.Menu getMenu()
    public android.view.Window$Callback getWrappedWindowCallback()
    public void setCustomView(android.view.View)
    public void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams)
    public void setCustomView(int)
    public void setIcon(int)
    public void setIcon(android.graphics.drawable.Drawable)
    public void setLogo(int)
    public void setLogo(android.graphics.drawable.Drawable)
    public void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
    public void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
    public void setHomeButtonEnabled(boolean)
    public void setElevation(float)
    public float getElevation()
    public android.content.Context getThemedContext()
    public boolean isTitleTruncated()
    public void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
    public void setHomeAsUpIndicator(int)
    public void setHomeActionContentDescription(java.lang.CharSequence)
    public void setDefaultDisplayHomeAsUpEnabled(boolean)
    public void setHomeActionContentDescription(int)
    public void setShowHideAnimationEnabled(boolean)
    public void onConfigurationChanged(android.content.res.Configuration)
    public void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener)
    public void setSelectedNavigationItem(int)
    public int getSelectedNavigationIndex()
    public int getNavigationItemCount()
    public void setTitle(java.lang.CharSequence)
    public void setTitle(int)
    public void setWindowTitle(java.lang.CharSequence)
    public boolean requestFocus()
    public void setSubtitle(java.lang.CharSequence)
    public void setSubtitle(int)
    public void setDisplayOptions(int)
    public void setDisplayOptions(int,int)
    public void setDisplayUseLogoEnabled(boolean)
    public void setDisplayShowHomeEnabled(boolean)
    public void setDisplayHomeAsUpEnabled(boolean)
    public void setDisplayShowTitleEnabled(boolean)
    public void setDisplayShowCustomEnabled(boolean)
    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public android.view.View getCustomView()
    public java.lang.CharSequence getTitle()
    public java.lang.CharSequence getSubtitle()
    public int getNavigationMode()
    public void setNavigationMode(int)
    public int getDisplayOptions()
    public androidx.appcompat.app.ActionBar$Tab newTab()
    public void addTab(androidx.appcompat.app.ActionBar$Tab)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,int)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)
    public void removeTab(androidx.appcompat.app.ActionBar$Tab)
    public void removeTabAt(int)
    public void removeAllTabs()
    public void selectTab(androidx.appcompat.app.ActionBar$Tab)
    public androidx.appcompat.app.ActionBar$Tab getSelectedTab()
    public androidx.appcompat.app.ActionBar$Tab getTabAt(int)
    public int getTabCount()
    public int getHeight()
    public void show()
    public void hide()
    public boolean isShowing()
    public boolean openOptionsMenu()
    public boolean closeOptionsMenu()
    public boolean invalidateOptionsMenu()
    public boolean collapseActionView()
    void populateOptionsMenu()
    public boolean onMenuKeyEvent(android.view.KeyEvent)
    public boolean onKeyShortcut(int,android.view.KeyEvent)
    void onDestroy()
    public void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    public void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    public void dispatchMenuVisibilityChanged(boolean)
    androidx.appcompat.widget.DecorToolbar mDecorToolbar
    boolean mToolbarMenuPrepared
    android.view.Window$Callback mWindowCallback
    private boolean mMenuCallbackSet
    private boolean mLastMenuVisibility
    private java.util.ArrayList mMenuVisibilityListeners
    private final java.lang.Runnable mMenuInvalidator
    private final androidx.appcompat.widget.Toolbar$OnMenuItemClickListener mMenuClicker
com.google.android.material.tabs.TabLayout$SlidingTabIndicator$2
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult
androidx.fragment.app.Fragment$SavedState
androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback
androidx.transition.Styleable$Slide
androidx.core.app.NotificationCompat$InboxStyle
androidx.transition.Slide$3
com.eptonic.photocollage.ui.next.s.xx.xxx.yy.cc.activity.BasePhotoActivity:
    public void onBackgroundColorButtonClick()
    public void onBackgroundPhotoButtonClick()
    public void onTextButtonClick()
    public void resultAddTextItem(java.lang.String,int,java.lang.String)
    public void resultEditTextItem(java.lang.String,int,java.lang.String)
    public void resultSticker(android.net.Uri)
    public void onCameraButtonClick()
    public void onGalleryButtonClick()
    public void onStickerButtonClick()
    public void pickImageFromGallery()
    public void getImageFromCamera()
    public void pickSticker()
    public void addTextItem()
    public void editTextItem(java.lang.String,java.lang.String,int)
    public void pickBackground()
    public void requestEditingImage(android.net.Uri)
    private android.view.View mAddImageView
    private android.view.animation.Animation mAnimation
    protected static final int CAPTURE_IMAGE
    protected static final int PICK_BACKGROUND
    protected static final int PICK_IMAGE
    protected static final int PICK_MULTIPLE
    protected static final int PICK_STICKER
    protected static final int REQUEST_ADD_TEXT_ITEM
    protected static final int REQUEST_EDIT_IMAGE
    protected static final int REQUEST_EDIT_TEXT_ITEM
    protected static final int REQUEST_PHOTO_EDITOR
com.bumptech.glide.request.target.ViewTarget$1
androidx.recyclerview.widget.DiffUtil$DiffResult
androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider$1
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl
com.bumptech.glide.load.model.UrlUriLoader$StreamFactory:
    public void teardown()
androidx.core.util.Preconditions:
    public static void checkArgument(boolean)
    public static void checkState(boolean,java.lang.String)
    public static void checkState(boolean)
    public static int checkArgumentNonnegative(int,java.lang.String)
    public static int checkArgumentInRange(int,int,int,java.lang.String)
    private void <init>()
androidx.core.widget.CompoundButtonCompat:
    private void <init>()
    public static android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)
    private static final java.lang.String TAG
androidx.core.text.TextUtilsCompat:
    public static java.lang.String htmlEncode(java.lang.String)
    private void <init>()
    private static final java.lang.String ARAB_SCRIPT_SUBTAG
    private static final java.lang.String HEBR_SCRIPT_SUBTAG
androidx.appcompat.resources.R$style
androidx.core.app.NotificationCompat$Action$WearableExtender
com.google.android.material.internal.NavigationMenuPresenter$1
com.yd.photoeditor.view.FocusImageView$OnImageFocusListener
android.support.v4.os.ResultReceiver$MyRunnable
com.google.android.material.drawable.DrawableUtils:
    private void <init>()
    public static android.util.AttributeSet parseDrawableXml(android.content.Context,int,java.lang.CharSequence)
com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$KeyPool
androidx.versionedparcelable.ParcelImpl:
    public void <init>(androidx.versionedparcelable.VersionedParcelable)
    public androidx.versionedparcelable.VersionedParcelable getVersionedParcel()
androidx.recyclerview.R$id
com.yd.photoeditor.imageprocessing.filter.processing.VWWWV:
    public static final java.lang.String FRAGMENT_SHADER
    public static final java.lang.String VERTEX_SHADER
com.eptonic.photocollage.ui.view.sticker.Sticker$Position
androidx.appcompat.app.AppCompatDialog:
    public void <init>(android.content.Context)
    protected void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)
    public androidx.appcompat.app.ActionBar getSupportActionBar()
com.eptonic.photocollage.ui.next.s.xx.xxx.yy.cc.activity.FrameDetailActivity:
    public void onEditActionClick(com.eptonic.photocollage.ui.view.template.ItemImageView)
androidx.constraintlayout.solver.LinearSystem:
    private void addSingleError(androidx.constraintlayout.solver.ArrayRow,int)
    private androidx.constraintlayout.solver.SolverVariable createVariable(java.lang.String,androidx.constraintlayout.solver.SolverVariable$Type)
    private void displayRows()
    private void displaySolverVariables()
    private java.lang.String getDisplaySize(int)
    private java.lang.String getDisplayStrength(int)
    public static androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean)
    public static androidx.constraintlayout.solver.ArrayRow createRowGreaterThan(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean)
    public static androidx.constraintlayout.solver.ArrayRow createRowLowerThan(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean)
    public static androidx.constraintlayout.solver.ArrayRow createRowCentering(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean)
    public void fillMetrics(androidx.constraintlayout.solver.Metrics)
    androidx.constraintlayout.solver.LinearSystem$Row getGoal()
    androidx.constraintlayout.solver.ArrayRow getRow(int)
    float getValueFor(java.lang.String)
    androidx.constraintlayout.solver.SolverVariable getVariable(java.lang.String,androidx.constraintlayout.solver.SolverVariable$Type)
    void displayReadableRows()
    public void displayVariablesReadableRows()
    public int getMemoryUsed()
    public int getNumEquations()
    public int getNumVariables()
    void displaySystemInformations()
    public void addGreaterThan(androidx.constraintlayout.solver.SolverVariable,int)
    public void addEquality(androidx.constraintlayout.solver.SolverVariable,int,int)
    public static final boolean FULL_DEBUG
    private static final boolean DEBUG
com.google.android.material.snackbar.SnackbarManager$Callback:
    public abstract void show()
androidx.core.view.animation.PathInterpolatorApi14
androidx.exifinterface.media.ExifInterface$ExifAttribute:
    public static androidx.exifinterface.media.ExifInterface$ExifAttribute createSLong(int[],java.nio.ByteOrder)
    public static androidx.exifinterface.media.ExifInterface$ExifAttribute createSLong(int,java.nio.ByteOrder)
    public static androidx.exifinterface.media.ExifInterface$ExifAttribute createByte(java.lang.String)
    public static androidx.exifinterface.media.ExifInterface$ExifAttribute createSRational(androidx.exifinterface.media.ExifInterface$Rational[],java.nio.ByteOrder)
    public static androidx.exifinterface.media.ExifInterface$ExifAttribute createSRational(androidx.exifinterface.media.ExifInterface$Rational,java.nio.ByteOrder)
    public static androidx.exifinterface.media.ExifInterface$ExifAttribute createDouble(double[],java.nio.ByteOrder)
    public static androidx.exifinterface.media.ExifInterface$ExifAttribute createDouble(double,java.nio.ByteOrder)
    public int size()
org.jetbrains.annotations.PropertyKey
androidx.fragment.app.FragmentActivity:
    public void <init>(int)
    private int allocateRequestIndex(androidx.fragment.app.Fragment)
    public void supportFinishAfterTransition()
    public void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
    public void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
    public void supportPostponeEnterTransition()
    public void supportStartPostponedEnterTransition()
    public androidx.loader.app.LoaderManager getSupportLoaderManager()
    public final void validateRequestPermissionsRequestCode(int)
    public void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
    public void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
    public void startIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
    void requestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int)
    boolean mRequestedPermissionsFromFragment
    private static final java.lang.String TAG
    static final java.lang.String FRAGMENTS_TAG
    static final java.lang.String NEXT_CANDIDATE_REQUEST_INDEX_TAG
    static final java.lang.String ALLOCATED_REQUEST_INDICIES_TAG
    static final java.lang.String REQUEST_FRAGMENT_WHO_TAG
    static final int MAX_NUM_PENDING_FRAGMENT_ACTIVITY_RESULTS
androidx.annotation.FractionRes
org.intellij.lang.annotations.JdkConstants$ListSelectionMode
androidx.appcompat.widget.LinearLayoutCompat$DividerMode
androidx.fragment.app.ListFragment$1
androidx.core.app.NotificationManagerCompat$SideChannelManager
org.greenrobot.greendao.database.StandardDatabaseStatement:
    public void execute()
    public long simpleQueryForLong()
    public void bindNull(int)
    public void bindBlob(int,byte[])
    public void bindDouble(int,double)
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key:
    void <init>(com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool,int,android.graphics.Bitmap$Config)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState:
    public void clearMenuPresenters()
    android.os.Parcelable onSaveInstanceState()
    void onRestoreInstanceState(android.os.Parcelable)
    void applyFrozenState()
    boolean wasLastOpen
    android.os.Bundle frozenMenuState
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool:
    public void <init>()
    public void put(java.lang.Object,java.lang.Class)
    int getCurrentSize()
    private static final int DEFAULT_SIZE
    static final int MAX_OVER_SIZE_MULTIPLE
    private static final int SINGLE_ARRAY_MAX_SIZE_DIVISOR
androidx.core.app.DialogCompat
androidx.core.view.MenuItemCompat$1
com.yd.photoeditor.vv.LocalStorageProvider
org.greenrobot.greendao.rx.RxDao$9
com.google.android.material.shadow.ShadowViewDelegate:
    public abstract float getRadius()
androidx.appcompat.widget.Toolbar:
    private static boolean isCustomView(android.view.View)
    public void setTitleMargin(int,int,int,int)
    public boolean isTitleTruncated()
    public void setContentInsetsAbsolute(int,int)
    public void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
    private static final java.lang.String TAG
com.google.android.material.shadow.ShadowRenderer:
    private static final int COLOR_ALPHA_START
    private static final int COLOR_ALPHA_MIDDLE
    private static final int COLOR_ALPHA_END
com.yd.photoeditor.imageprocessing.filter.processing.VVVVVVV
com.bumptech.glide.load.model.ResourceLoader$AssetFileDescriptorFactory:
    public void teardown()
com.google.android.material.internal.TextScale
androidx.core.content.pm.PackageInfoCompat
androidx.fragment.app.FragmentManagerViewModel:
    void restoreFromSnapshot(androidx.fragment.app.FragmentManagerNonConfig)
    androidx.fragment.app.FragmentManagerNonConfig getSnapshot()
androidx.lifecycle.LiveData$AlwaysActiveObserver
androidx.core.app.ActivityManagerCompat
androidx.appcompat.app.ActionBarDrawerToggle$DelegateProvider
com.yd.photoeditor.vv.TempDataContainer:
    public void clear()
com.google.android.material.expandable.ExpandableWidget:
    public abstract boolean setExpanded(boolean)
androidx.appcompat.widget.AppCompatHintHelper:
    private void <init>()
com.google.android.material.datepicker.DateStrings:
    private void <init>()
    static java.lang.String getYearMonthDay(long)
    static java.lang.String getYearMonthDay(long,java.util.Locale)
    static java.lang.String getMonthDay(long)
    static java.lang.String getMonthDay(long,java.util.Locale)
    static java.lang.String getDateString(long)
    static java.lang.String getDateString(long,java.text.SimpleDateFormat)
    static androidx.core.util.Pair getDateRangeString(java.lang.Long,java.lang.Long)
    static androidx.core.util.Pair getDateRangeString(java.lang.Long,java.lang.Long,java.text.SimpleDateFormat)
com.bumptech.glide.load.engine.cache.ExternalCacheDiskCacheFactory$1
org.greenrobot.greendao.query.CountQuery$1
androidx.transition.AnimatorUtils:
    private void <init>()
androidx.constraintlayout.widget.R$styleable:
    private void <init>()
androidx.recyclerview.widget.RecyclerView$LayoutManager:
    public static int getChildMeasureSpec(int,int,int,boolean)
    public void assertInLayoutOrScroll(java.lang.String)
    public void setAutoMeasureEnabled(boolean)
    public final void setItemPrefetchEnabled(boolean)
    public void postOnAnimation(java.lang.Runnable)
    public void endAnimation(android.view.View)
    public void removeAllViews()
    public int getItemViewType(android.view.View)
    public void detachView(android.view.View)
    public void attachView(android.view.View)
    public void removeDetachedView(android.view.View)
    public void detachAndScrapView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler)
    public void detachAndScrapViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler)
    public int getPaddingStart()
    public int getPaddingEnd()
    public boolean isFocused()
    public boolean hasFocus()
    public void ignoreView(android.view.View)
    public void stopIgnoringView(android.view.View)
    public void measureChild(android.view.View,int,int)
    public boolean isMeasurementCacheEnabled()
    public void setMeasurementCacheEnabled(boolean)
    public void layoutDecorated(android.view.View,int,int,int,int)
com.google.android.material.shape.RelativeCornerSize:
    public float getRelativePercent()
androidx.recyclerview.R
org.intellij.lang.annotations.Identifier
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation
com.eptonic.photocollage.presenter.listener.OnFrameTouchListener:
    public abstract void onFrameDoubleClick(android.view.MotionEvent)
androidx.customview.R$id
androidx.appcompat.widget.SwitchCompat$1
androidx.core.view.ViewCompat$FocusRelativeDirection
com.bumptech.glide.request.target.SimpleTarget
com.eptonic.photocollage.BuildConfig
com.bumptech.glide.load.resource.bitmap.HardwareConfigState:
    static final int MIN_HARDWARE_DIMENSION_O
    private static final int MIN_HARDWARE_DIMENSION_P
    private static final int MINIMUM_DECODES_BETWEEN_FD_CHECKS
    private static final int MAXIMUM_FDS_FOR_HARDWARE_CONFIGS_O
    private static final int MAXIMUM_FDS_FOR_HARDWARE_CONFIGS_P
com.google.android.material.datepicker.CalendarConstraints$Builder
com.bumptech.glide.load.resource.drawable.DrawableDecoderCompat:
    private void <init>()
com.google.android.material.appbar.AppBarLayout:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public void addOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener)
    public void addOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener)
    public void removeOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener)
    public void removeOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener)
    public boolean setLiftable(boolean)
    public boolean setLifted(boolean)
    androidx.core.view.WindowInsetsCompat onWindowInsetChanged(androidx.core.view.WindowInsetsCompat)
    static final int PENDING_ACTION_NONE
    static final int PENDING_ACTION_EXPANDED
    static final int PENDING_ACTION_COLLAPSED
    static final int PENDING_ACTION_ANIMATE_ENABLED
    static final int PENDING_ACTION_FORCE
    private static final int INVALID_SCROLL_RANGE
androidx.appcompat.widget.PopupMenu$3
androidx.versionedparcelable.VersionedParcel$1
com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder:
    public com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder setMemoryCacheScreens(float)
    public com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder setBitmapPoolScreens(float)
    public com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder setMaxSizeMultiplier(float)
    public com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder setLowMemoryMaxSizeMultiplier(float)
    public com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder setArrayPoolSize(int)
    com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder setActivityManager(android.app.ActivityManager)
    com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder setScreenDimensions(com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions)
    static final int MEMORY_CACHE_TARGET_SCREENS
    static final float MAX_SIZE_MULTIPLIER
    static final float LOW_MEMORY_MAX_SIZE_MULTIPLIER
    static final int ARRAY_POOL_SIZE_BYTES
androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl
com.yd.photoeditor.imageprocessing.temp.ImageFilter5:
    private void listConfig()
    private int getConfigAttrib(javax.microedition.khronos.egl.EGLConfig,int)
    private android.graphics.Bitmap createBitmapFromGLSurface()
    static final boolean LIST_CONFIGS
    static final java.lang.String TAG
org.intellij.lang.annotations.Language
com.google.android.material.internal.NavigationMenuPresenter$HeaderViewHolder
com.yd.photoeditor.view.DrawableCropImageView:
    public void restoreInstanceState(android.os.Bundle)
    public void setImagePainterTouchListener()
    public boolean isFingerDrawingMode()
    public void clear()
    public android.graphics.Bitmap createRectangleCameraBitmap(int,int,int)
    public float dpFromPx(float)
com.yd.photoeditor.view.TouchBlurView
androidx.transition.ChangeTransform$Transforms
com.yd.photoeditor.view.TouchBlurView$OnTouchBlurListener
com.bumptech.glide.load.model.ResourceLoader:
    private static final java.lang.String TAG
androidx.versionedparcelable.NonParcelField
com.bumptech.glide.util.ByteBufferUtil$ByteBufferStream:
    private static final int UNSET
com.eptonic.photocollage.ui.view.sticker.FlipHorizontallyEvent
org.greenrobot.greendao.rx.RxQuery$1
androidx.core.view.GravityCompat:
    public static void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)
    public static void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
    private void <init>()
    public static final int RELATIVE_LAYOUT_DIRECTION
    public static final int START
    public static final int END
    public static final int RELATIVE_HORIZONTAL_GRAVITY_MASK
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState:
    final void clearMutated()
    public final int getEnterFadeDuration()
    public final int getExitFadeDuration()
    public final boolean isStateful()
androidx.recyclerview.widget.ScrollbarHelper:
    private void <init>()
com.yd.photoeditor.imageprocessing.filter.colour.P5:
    public static final java.lang.String WWWWWWWWWWWW
com.bumptech.glide.module.ManifestParser:
    private static final java.lang.String TAG
    private static final java.lang.String GLIDE_MODULE_VALUE
androidx.annotation.InspectableProperty$ValueType
com.bumptech.glide.load.engine.cache.DiskCache:
    public abstract void delete(com.bumptech.glide.load.Key)
    public abstract void clear()
com.google.android.material.badge.BadgeUtils
androidx.transition.ChangeImageTransform$2
org.greenrobot.greendao.rx.RxDao$13
androidx.transition.ChangeTransform
androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener
androidx.core.app.NotificationManagerCompat$NotifyTask
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior:
    public static void setTag(android.view.View,java.lang.Object)
    public static java.lang.Object getTag(android.view.View)
androidx.constraintlayout.widget.Guideline:
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public void <init>(android.content.Context,android.util.AttributeSet,int,int)
androidx.core.view.NestedScrollingParent:
    public abstract int getNestedScrollAxes()
androidx.fragment.app.ListFragment
androidx.coordinatorlayout.R$style:
    private void <init>()
com.google.android.material.chip.ChipGroup$LayoutParams:
    public void <init>(android.view.ViewGroup$MarginLayoutParams)
androidx.core.provider.FontsContractCompat$4$1
androidx.viewpager.R$dimen
androidx.appcompat.widget.MenuPopupWindow:
    private static final java.lang.String TAG
org.intellij.lang.annotations.JdkConstants$TitledBorderJustification
com.bumptech.glide.load.model.MediaStoreFileLoader$Factory:
    public void teardown()
androidx.loader.content.ModernAsyncTask
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener
com.google.android.material.bottomsheet.BottomSheetDialogFragment$1
androidx.viewpager2.widget.ViewPager2$DataSetChangeObserver
com.bumptech.glide.provider.ModelToResourceClassCache:
    public void clear()
com.bumptech.glide.load.model.ResourceLoader$StreamFactory:
    public void teardown()
androidx.transition.R$integer
com.google.android.material.snackbar.BaseTransientBottomBar$17
androidx.fragment.R$integer
androidx.appcompat.view.menu.MenuPopup:
    public androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
    public int getId()
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$1
androidx.transition.ObjectAnimatorUtils:
    private void <init>()
com.bumptech.glide.request.transition.DrawableCrossFadeTransition
com.google.android.material.elevation.ElevationOverlayProvider:
    public int compositeOverlayWithThemeSurfaceColorIfNeeded(float,android.view.View)
    public int compositeOverlayWithThemeSurfaceColorIfNeeded(float)
    public int compositeOverlayIfNeeded(int,float,android.view.View)
    public int compositeOverlay(int,float,android.view.View)
    public int calculateOverlayAlpha(float)
    public int getThemeElevationOverlayColor()
    public int getThemeSurfaceColor()
    public float getParentAbsoluteElevation(android.view.View)
    private static final float FORMULA_MULTIPLIER
    private static final float FORMULA_OFFSET
androidx.core.graphics.drawable.DrawableCompat:
    private void <init>()
    private static final java.lang.String TAG
com.bumptech.glide.load.engine.CallbackException:
    private static final long serialVersionUID
org.greenrobot.greendao.annotation.Transient
androidx.viewpager.R$id
com.eptonic.photocollage.model.ImageTemplate:
    public void setPackageId(long)
    public long getPackageId()
    public void setChild(java.lang.String)
    public java.lang.String getChild()
    public com.yd.photoeditor.model.Language[] getLanguages()
    public void setLanguages(com.yd.photoeditor.model.Language[])
    private java.lang.String mChild
    private com.yd.photoeditor.model.Language[] mNames
    private long mPackageId
com.google.android.material.snackbar.BaseTransientBottomBar$Duration
org.greenrobot.greendao.query.CloseableListIterator
com.google.android.material.floatingactionbutton.FloatingActionButton:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public boolean shouldEnsureMinTouchTargetSize()
    public void show()
    public void removeOnShowAnimationListener(android.animation.Animator$AnimatorListener)
    public void hide()
    public void removeOnHideAnimationListener(android.animation.Animator$AnimatorListener)
    public boolean setExpanded(boolean)
    public void clearCustomSize()
    public void removeTransformationCallback(com.google.android.material.animation.TransformationCallback)
    private int borderWidth
    private static final java.lang.String LOG_TAG
    private static final java.lang.String EXPANDABLE_WIDGET_HELPER_KEY
    public static final int SIZE_MINI
    public static final int SIZE_NORMAL
    public static final int SIZE_AUTO
    public static final int NO_CUSTOM_SIZE
    private static final int AUTO_MINI_LARGEST_SCREEN_WIDTH
com.google.android.material.appbar.AppBarLayout$1
com.bumptech.glide.disklrucache.DiskLruCache:
    private static java.lang.String inputStreamToString(java.io.InputStream)
    static synthetic com.bumptech.glide.disklrucache.DiskLruCache$Editor access$1700(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String,long)
    static synthetic java.lang.String access$1800(java.io.InputStream)
    public java.io.File getDirectory()
    public synchronized long getMaxSize()
    public synchronized void setMaxSize(long)
    public synchronized long size()
    public synchronized boolean isClosed()
    public synchronized void flush()
    static final java.lang.String JOURNAL_FILE
    static final java.lang.String JOURNAL_FILE_TEMP
    static final java.lang.String JOURNAL_FILE_BACKUP
    static final java.lang.String MAGIC
    static final java.lang.String VERSION_1
    static final long ANY_SEQUENCE_NUMBER
    private static final java.lang.String CLEAN
    private static final java.lang.String DIRTY
    private static final java.lang.String REMOVE
    private static final java.lang.String READ
androidx.constraintlayout.solver.widgets.Guideline:
    public int getRelativeBehaviour()
    public androidx.constraintlayout.solver.widgets.Rectangle getHead()
    public androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor()
    public java.lang.String getType()
    public void setMinimumPosition(int)
    public void setPositionRelaxed(boolean)
    public void setGuidePercent(int)
    public float getRelativePercent()
    public int getRelativeBegin()
    public int getRelativeEnd()
    public void setDrawOrigin(int,int)
    void inferRelativePercentPosition()
    void inferRelativeBeginPosition()
    void inferRelativeEndPosition()
    public void cyclePosition()
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int RELATIVE_PERCENT
    public static final int RELATIVE_BEGIN
    public static final int RELATIVE_END
    public static final int RELATIVE_UNKNWON
com.bumptech.glide.load.engine.bitmap_recycle.PrettyPrintTreeMap
org.greenrobot.greendao.internal.TableStatements:
    public org.greenrobot.greendao.database.DatabaseStatement getInsertOrReplaceStatement()
    public org.greenrobot.greendao.database.DatabaseStatement getDeleteStatement()
    public org.greenrobot.greendao.database.DatabaseStatement getUpdateStatement()
    public org.greenrobot.greendao.database.DatabaseStatement getCountStatement()
    public java.lang.String getSelectAll()
    public java.lang.String getSelectKeys()
    public java.lang.String getSelectByKey()
    public java.lang.String getSelectByRowId()
    private org.greenrobot.greendao.database.DatabaseStatement insertOrReplaceStatement
    private org.greenrobot.greendao.database.DatabaseStatement updateStatement
    private org.greenrobot.greendao.database.DatabaseStatement deleteStatement
    private org.greenrobot.greendao.database.DatabaseStatement countStatement
    private volatile java.lang.String selectAll
    private volatile java.lang.String selectByKey
    private volatile java.lang.String selectByRowId
    private volatile java.lang.String selectKeys
androidx.recyclerview.widget.ItemTouchHelper$1
com.eptonic.photocollage.R$mipmap
androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate
com.yd.photoeditor.R$mipmap
androidx.viewpager.R$attr
com.google.android.material.tabs.TabLayout$Tab
com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder
com.google.android.material.navigation.NavigationView$SavedState$1
com.eptonic.photocollage.ui.mutitouchh.MultiTouchController:
    public void setHandleSingleTouchEvents(boolean)
    public boolean getHandleSingleTouchEvents()
    public boolean dragOccurred()
    public int getMode()
    public static final boolean DEBUG
    private static final long EVENT_SETTLE_TIME_INTERVAL
    private static final float MAX_MULTITOUCH_DIM_JUMP_SIZE
    private static final float MAX_MULTITOUCH_POS_JUMP_SIZE
    public static final int MAX_TOUCH_POINTS
    private static final float MIN_MULTITOUCH_SEPARATION
    public static final int MODE_DRAG
    public static final int MODE_NOTHING
    public static final int MODE_PINCH
    public static final int MODE_ST_GRAB
    private static final float THRESHOLD
com.google.android.material.bottomnavigation.BottomNavigationPresenter
androidx.lifecycle.Transformations$1
com.bumptech.glide.load.resource.bitmap.DrawableToBitmapConverter:
    private void <init>()
    private static final java.lang.String TAG
androidx.core.util.TimeUtils
com.google.android.material.R$dimen:
    private void <init>()
androidx.activity.R$layout
androidx.appcompat.widget.DecorContentParent:
    public abstract java.lang.CharSequence getTitle()
    public abstract void setUiOptions(int)
    public abstract boolean hasIcon()
    public abstract boolean hasLogo()
    public abstract void setIcon(int)
    public abstract void setIcon(android.graphics.drawable.Drawable)
    public abstract void setLogo(int)
    public abstract void saveToolbarHierarchyState(android.util.SparseArray)
    public abstract void restoreToolbarHierarchyState(android.util.SparseArray)
androidx.viewpager.R$style
androidx.core.widget.AutoScrollHelper:
    public boolean isEnabled()
    public androidx.core.widget.AutoScrollHelper setExclusive(boolean)
    public boolean isExclusive()
    public static final float RELATIVE_UNSPECIFIED
    public static final float NO_MAX
    public static final float NO_MIN
    public static final int EDGE_TYPE_INSIDE
    public static final int EDGE_TYPE_INSIDE_EXTEND
    public static final int EDGE_TYPE_OUTSIDE
    private static final int HORIZONTAL
    private static final int VERTICAL
    private static final int DEFAULT_EDGE_TYPE
    private static final int DEFAULT_MINIMUM_VELOCITY_DIPS
    private static final int DEFAULT_MAXIMUM_VELOCITY_DIPS
    private static final float DEFAULT_MAXIMUM_EDGE
    private static final float DEFAULT_RELATIVE_EDGE
    private static final float DEFAULT_RELATIVE_VELOCITY
    private static final int DEFAULT_RAMP_UP_DURATION
    private static final int DEFAULT_RAMP_DOWN_DURATION
androidx.transition.FragmentTransitionSupport$1:
    public android.graphics.Rect onGetEpicenter(androidx.transition.Transition)
com.bumptech.glide.load.data.StreamLocalUriFetcher:
    private static final int ID_CONTACTS_LOOKUP
    private static final int ID_CONTACTS_THUMBNAIL
    private static final int ID_CONTACTS_CONTACT
    private static final int ID_CONTACTS_PHOTO
    private static final int ID_LOOKUP_BY_PHONE
com.yd.photoeditor.view.FingerPaintView$FingerPath
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment:
    public void <init>(float,float,float)
    public float getHorizontalOffset()
    private static final int ARC_QUARTER
    private static final int ARC_HALF
    private static final int ANGLE_UP
    private static final int ANGLE_LEFT
com.bumptech.glide.load.resource.bitmap.GranularRoundedCorners
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView:
    public void <init>(android.content.Context)
androidx.loader.content.ModernAsyncTask$1
androidx.core.widget.TextViewCompat$AutoSizeTextType
androidx.annotation.NavigationRes
com.google.android.material.badge.BadgeDrawable$SavedState$1
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState:
    public void <init>(android.os.Parcel)
    public void <init>(android.os.Parcelable,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat:
    static androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object)
    public void <init>(java.lang.Object)
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int)
    private java.util.List extrasCharSequenceList(java.lang.String)
    public java.lang.Object getInfo()
    public void setSource(android.view.View)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int)
    public int getWindowId()
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getChild(int)
    public void addChild(android.view.View)
    public boolean removeChild(android.view.View)
    public boolean removeChild(android.view.View,int)
    public boolean removeAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
    public boolean performAction(int)
    public void setMovementGranularities(int)
    public int getMovementGranularities()
    public java.util.List findAccessibilityNodeInfosByText(java.lang.String)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getParent()
    public boolean isVisibleToUser()
    public boolean isAccessibilityFocused()
    public void setSelected(boolean)
    public void setLongClickable(boolean)
    public void setPassword(boolean)
    public boolean isImportantForAccessibility()
    public void setImportantForAccessibility(boolean)
    public void setViewIdResourceName(java.lang.String)
    public int getLiveRegion()
    public void setLiveRegion(int)
    public int getDrawingOrder()
    public void setDrawingOrder(int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat getCollectionInfo()
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat getCollectionItemInfo()
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat getRangeInfo()
    public void setRangeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat)
    public java.util.List getActionList()
    public boolean isContentInvalid()
    public boolean isContextClickable()
    public void setContextClickable(boolean)
    public java.lang.CharSequence getHintText()
    public java.lang.CharSequence getError()
    public void setLabelFor(android.view.View)
    public void setLabelFor(android.view.View,int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabelFor()
    public void setLabeledBy(android.view.View)
    public void setLabeledBy(android.view.View,int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabeledBy()
    public boolean canOpenPopup()
    public void setCanOpenPopup(boolean)
    public java.util.List findAccessibilityNodeInfosByViewId(java.lang.String)
    public int getInputType()
    public void setInputType(int)
    public void setMaxTextLength(int)
    public int getMaxTextLength()
    public void setTextSelection(int,int)
    public int getTextSelectionStart()
    public int getTextSelectionEnd()
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore()
    public void setTraversalBefore(android.view.View)
    public void setTraversalBefore(android.view.View,int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalAfter()
    public void setTraversalAfter(android.view.View)
    public void setTraversalAfter(android.view.View,int)
    public androidx.core.view.accessibility.AccessibilityWindowInfoCompat getWindow()
    public boolean isDismissable()
    public void setDismissable(boolean)
    public boolean isEditable()
    public void setEditable(boolean)
    public boolean isMultiLine()
    public void setMultiLine(boolean)
    public java.lang.CharSequence getTooltipText()
    public void setTooltipText(java.lang.CharSequence)
    public java.lang.CharSequence getPaneTitle()
    public boolean isScreenReaderFocusable()
    public boolean isHeading()
    public boolean isTextEntryKey()
    public void setTextEntryKey(boolean)
    public boolean refresh()
    public java.lang.CharSequence getRoleDescription()
    public void setRoleDescription(java.lang.CharSequence)
    private static final java.lang.String ROLE_DESCRIPTION_KEY
    private static final java.lang.String PANE_TITLE_KEY
    private static final java.lang.String TOOLTIP_TEXT_KEY
    private static final java.lang.String HINT_TEXT_KEY
    private static final java.lang.String BOOLEAN_PROPERTY_KEY
    private static final java.lang.String SPANS_ID_KEY
    private static final java.lang.String SPANS_START_KEY
    private static final java.lang.String SPANS_END_KEY
    private static final java.lang.String SPANS_FLAGS_KEY
    private static final java.lang.String SPANS_ACTION_ID_KEY
    private static final int BOOLEAN_PROPERTY_SCREEN_READER_FOCUSABLE
    private static final int BOOLEAN_PROPERTY_IS_HEADING
    private static final int BOOLEAN_PROPERTY_IS_SHOWING_HINT
    private static final int BOOLEAN_PROPERTY_IS_TEXT_ENTRY_KEY
    public static final int ACTION_FOCUS
    public static final int ACTION_CLEAR_FOCUS
    public static final int ACTION_SELECT
    public static final int ACTION_CLEAR_SELECTION
    public static final int ACTION_CLICK
    public static final int ACTION_LONG_CLICK
    public static final int ACTION_ACCESSIBILITY_FOCUS
    public static final int ACTION_CLEAR_ACCESSIBILITY_FOCUS
    public static final int ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    public static final int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    public static final int ACTION_NEXT_HTML_ELEMENT
    public static final int ACTION_PREVIOUS_HTML_ELEMENT
    public static final int ACTION_SCROLL_FORWARD
    public static final int ACTION_SCROLL_BACKWARD
    public static final int ACTION_COPY
    public static final int ACTION_PASTE
    public static final int ACTION_CUT
    public static final int ACTION_SET_SELECTION
    public static final int ACTION_EXPAND
    public static final int ACTION_COLLAPSE
    public static final int ACTION_DISMISS
    public static final int ACTION_SET_TEXT
    public static final java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    public static final java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING
    public static final java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
    public static final java.lang.String ACTION_ARGUMENT_SELECTION_START_INT
    public static final java.lang.String ACTION_ARGUMENT_SELECTION_END_INT
    public static final java.lang.String ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE
    public static final java.lang.String ACTION_ARGUMENT_ROW_INT
    public static final java.lang.String ACTION_ARGUMENT_COLUMN_INT
    public static final java.lang.String ACTION_ARGUMENT_PROGRESS_VALUE
    public static final java.lang.String ACTION_ARGUMENT_MOVE_WINDOW_X
    public static final java.lang.String ACTION_ARGUMENT_MOVE_WINDOW_Y
    public static final int FOCUS_INPUT
    public static final int FOCUS_ACCESSIBILITY
    public static final int MOVEMENT_GRANULARITY_CHARACTER
    public static final int MOVEMENT_GRANULARITY_WORD
    public static final int MOVEMENT_GRANULARITY_LINE
    public static final int MOVEMENT_GRANULARITY_PARAGRAPH
    public static final int MOVEMENT_GRANULARITY_PAGE
androidx.appcompat.view.menu.MenuView:
    public abstract int getWindowAnimations()
com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener
androidx.appcompat.widget.SuggestionsAdapter:
    public int getQueryRefinement()
    public void close()
    private static final boolean DBG
    private static final java.lang.String LOG_TAG
    private static final int QUERY_LIMIT
    static final int REFINE_NONE
    static final int REFINE_BY_ENTRY
    static final int REFINE_ALL
    static final int INVALID_INDEX
com.yd.photoeditor.imageprocessing.filter.processing.WWWWWWWWWWWW
com.google.android.material.tabs.TabLayoutMediator
com.yd.photoeditor.imageprocessing.filter.effect.F111:
    public static final java.lang.String TOON_FRAGMENT_SHADER
com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy
androidx.viewpager2.adapter.FragmentStateAdapter$5:
    void <init>(androidx.viewpager2.adapter.FragmentStateAdapter,android.os.Handler,java.lang.Runnable)
    final synthetic androidx.viewpager2.adapter.FragmentStateAdapter this$0
com.eptonic.photocollage.util.TemplateUtils:
    public void <init>()
    public static android.graphics.Path[] createTwoHeartItem()
    public static android.graphics.Path createHeartItem(float,float)
    public static android.graphics.Path createFatHeartItem()
    public static android.graphics.Path createHeartItem()
    public static final java.lang.String FRAME_FOLDER
com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key
androidx.transition.VisibilityPropagation
androidx.core.view.WindowInsetsCompat:
    public void <init>(androidx.core.view.WindowInsetsCompat)
    public boolean hasSystemWindowInsets()
    public boolean hasInsets()
    public boolean isRound()
    public androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
    public androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect)
    public int getStableInsetTop()
    public int getStableInsetLeft()
    public int getStableInsetRight()
    public int getStableInsetBottom()
    public boolean hasStableInsets()
    public androidx.core.view.WindowInsetsCompat consumeStableInsets()
    public androidx.core.view.DisplayCutoutCompat getDisplayCutout()
    public androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
androidx.appcompat.widget.TooltipPopup:
    private static final java.lang.String TAG
androidx.appcompat.app.AppCompatActivity:
    public void <init>(int)
    public void setSupportActionBar(androidx.appcompat.widget.Toolbar)
    public boolean supportRequestWindowFeature(int)
    public androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
    public void setSupportProgressBarVisibility(boolean)
    public void setSupportProgressBarIndeterminateVisibility(boolean)
    public void setSupportProgressBarIndeterminate(boolean)
    public void setSupportProgress(int)
    public androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
androidx.transition.ChangeClipBounds$1
androidx.recyclerview.widget.ViewInfoStore$InfoRecord:
    static final int FLAG_DISAPPEARED
    static final int FLAG_APPEAR
    static final int FLAG_PRE
    static final int FLAG_POST
    static final int FLAG_APPEAR_AND_DISAPPEAR
    static final int FLAG_PRE_AND_POST
    static final int FLAG_APPEAR_PRE_AND_POST
com.eptonic.photocollage.resEncryption.utils.StreamUtils:
    public void <init>()
com.google.android.material.radiobutton.MaterialRadioButton:
    public void <init>(android.content.Context)
    public boolean isUseMaterialThemeColors()
androidx.appcompat.widget.AppCompatRatingBar:
    public void <init>(android.content.Context)
com.yd.photoeditor.R$color:
    private void <init>()
com.yd.photoeditor.imageprocessing.filter.processing.WWWWVW
androidx.appcompat.widget.AppCompatSpinner$DialogPopup:
    public int getHorizontalOriginalOffset()
org.greenrobot.greendao.DbUtils
androidx.core.text.BidiFormatter:
    public static androidx.core.text.BidiFormatter getInstance(boolean)
    public static androidx.core.text.BidiFormatter getInstance(java.util.Locale)
    public boolean isRtlContext()
    public boolean isRtl(java.lang.String)
    public boolean isRtl(java.lang.CharSequence)
    public java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat,boolean)
    public java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat)
    public java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat)
    public java.lang.String unicodeWrap(java.lang.String,boolean)
    public java.lang.CharSequence unicodeWrap(java.lang.CharSequence,boolean)
    public java.lang.String unicodeWrap(java.lang.String)
    private static final char LRE
    private static final char RLE
    private static final char PDF
    private static final char LRM
    private static final char RLM
    private static final java.lang.String EMPTY_STRING
    private static final int FLAG_STEREO_RESET
    private static final int DEFAULT_FLAGS
    private static final int DIR_LTR
    private static final int DIR_UNKNOWN
    private static final int DIR_RTL
androidx.core.view.inputmethod.InputConnectionCompat$1
androidx.loader.content.AsyncTaskLoader
com.bumptech.glide.R$dimen
androidx.viewpager2.widget.AnimateLayoutChangeDetector$1
com.eptonic.photocollage.ui.view.PhotoLayout$OnQuickActionClickListener:
    public abstract void onEditActionClick(com.eptonic.photocollage.ui.view.template.ItemImageView)
com.bumptech.glide.load.model.LazyHeaders$Builder:
    private java.util.List getFactories(java.lang.String)
    private void copyIfNecessary()
    private java.util.Map copyHeaders()
    public com.bumptech.glide.load.model.LazyHeaders$Builder addHeader(java.lang.String,java.lang.String)
    public com.bumptech.glide.load.model.LazyHeaders$Builder addHeader(java.lang.String,com.bumptech.glide.load.model.LazyHeaderFactory)
    public com.bumptech.glide.load.model.LazyHeaders$Builder setHeader(java.lang.String,java.lang.String)
    public com.bumptech.glide.load.model.LazyHeaders$Builder setHeader(java.lang.String,com.bumptech.glide.load.model.LazyHeaderFactory)
    private static final java.lang.String USER_AGENT_HEADER
com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameLoaderCallback:
    static final int MSG_DELAY
    static final int MSG_CLEAR
androidx.recyclerview.widget.DiffUtil$Snake
androidx.constraintlayout.widget.ConstraintSet$Constraint:
    static synthetic void access$100(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams)
    static final int UNSET
com.bumptech.glide.load.engine.GlideException$IndentedAppendable:
    private static final java.lang.String EMPTY_SEQUENCE
    private static final java.lang.String INDENT
androidx.recyclerview.R$drawable
androidx.fragment.app.FragmentTabHost$DummyTabFactory
com.bumptech.glide.load.resource.bitmap.TransformationUtils$2
androidx.recyclerview.R$color
androidx.fragment.R$id
androidx.activity.R$string
androidx.recyclerview.widget.ItemTouchHelper
androidx.viewpager2.widget.ViewPager2$PageTransformer
com.google.android.material.tabs.TabLayout$1
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop:
    void initializeBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int)
    com.google.android.material.floatingactionbutton.BorderDrawable createBorderDrawable(int,android.content.res.ColorStateList)
    com.google.android.material.shape.MaterialShapeDrawable createShapeDrawable()
androidx.lifecycle.ComputableLiveData$1
androidx.drawerlayout.widget.DrawerLayout$1
com.eptonic.photocollage.R$styleable:
    private void <init>()
androidx.core.app.NotificationCompat$Builder
com.google.android.material.transformation.FabTransformationScrimBehavior:
    public static final long EXPAND_DELAY
    public static final long EXPAND_DURATION
    public static final long COLLAPSE_DELAY
    public static final long COLLAPSE_DURATION
com.google.android.material.snackbar.BaseTransientBottomBar$5
com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder:
    private static final java.lang.String ANDROID_PACKAGE_NAME
    private static final int MISSING_RESOURCE_ID
    private static final int NAME_URI_PATH_SEGMENTS
    private static final int TYPE_PATH_SEGMENT_INDEX
    private static final int NAME_PATH_SEGMENT_INDEX
    private static final int ID_PATH_SEGMENTS
    private static final int RESOURCE_ID_SEGMENT_INDEX
androidx.core.graphics.TypefaceCompatApi21Impl:
    private static final java.lang.String TAG
    private static final java.lang.String FONT_FAMILY_CLASS
    private static final java.lang.String ADD_FONT_WEIGHT_STYLE_METHOD
    private static final java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
com.eptonic.photocollage.util.DialogUtils2
androidx.appcompat.widget.AppCompatDrawableManager:
    synchronized android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int)
    boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)
    private static final java.lang.String TAG
    private static final boolean DEBUG
androidx.transition.TransitionUtils$MatrixEvaluator
androidx.recyclerview.widget.DividerItemDecoration
com.yd.photoeditor.vv.ImageDecoder:
    public void <init>()
    public static android.graphics.Bitmap decodeAsset(android.content.Context,java.lang.String)
    public static android.graphics.Bitmap decodeBlobToBitmap(byte[])
    public static android.graphics.drawable.Drawable decodeBlobToDrawable(byte[],int,int,android.content.res.Resources)
    public static android.graphics.Bitmap decodeBlobToBitmap(byte[],int,int,android.content.res.Resources)
    public static android.graphics.drawable.Drawable decodeBlobToDrawble(byte[],android.content.res.Resources)
    public static android.graphics.drawable.Drawable decodeStreamToDrawble(java.io.InputStream,android.content.res.Resources)
    public static android.graphics.Bitmap decodeStreamToBitmap(java.io.InputStream)
    public static android.graphics.Bitmap decodeStreamToBitmap(java.io.InputStream,int,int)
    public static android.graphics.drawable.Drawable decodeStreamToDrawable(java.io.InputStream,int,int,android.content.res.Resources)
    public static android.graphics.Bitmap decodeSampledBitmapFromResource(android.content.res.Resources,int,int,int)
    public static android.graphics.drawable.Drawable decodeSampledDrawableFromResource(android.content.res.Resources,int,int,int)
    public static int calculateInSampleSize(android.graphics.BitmapFactory$Options,int,int)
com.google.android.material.tabs.TabLayout$TabGravity
androidx.loader.content.ModernAsyncTask$Status
androidx.core.view.ViewCompat:
    public static boolean canScrollHorizontally(android.view.View,int)
    public static boolean canScrollVertically(android.view.View,int)
    public static int getOverScrollMode(android.view.View)
    public static void setOverScrollMode(android.view.View,int)
    public static void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
    public static void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
    public static varargs void setAutofillHints(android.view.View,java.lang.String[])
    public static boolean isImportantForAutofill(android.view.View)
    public static boolean hasAccessibilityDelegate(android.view.View)
    public static void postInvalidateOnAnimation(android.view.View,int,int,int,int)
    public static boolean isImportantForAccessibility(android.view.View)
    public static int addAccessibilityAction(android.view.View,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)
    private static int getAvailableActionIdFromResources(android.view.View)
    public static void enableAccessibleClickableSpanSupport(android.view.View)
    public static androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
    public static float getAlpha(android.view.View)
    public static void setLayerType(android.view.View,int,android.graphics.Paint)
    public static int getLayerType(android.view.View)
    public static int getLabelFor(android.view.View)
    public static void setLabelFor(android.view.View,int)
    public static void setLayerPaint(android.view.View,android.graphics.Paint)
    public static void setLayoutDirection(android.view.View,int)
    public static android.view.ViewParent getParentForAccessibility(android.view.View)
    public static android.view.View requireViewById(android.view.View,int)
    public static boolean isOpaque(android.view.View)
    public static int resolveSizeAndState(int,int,int)
    public static int getMeasuredWidthAndState(android.view.View)
    public static int getMeasuredHeightAndState(android.view.View)
    public static int getMeasuredState(android.view.View)
    public static int combineMeasuredStates(int,int)
    private static void bindTempDetach()
    public static void dispatchStartTemporaryDetach(android.view.View)
    public static void dispatchFinishTemporaryDetach(android.view.View)
    public static float getTranslationX(android.view.View)
    public static float getTranslationY(android.view.View)
    public static android.graphics.Matrix getMatrix(android.view.View)
    public static void setTranslationX(android.view.View,float)
    public static void setTranslationY(android.view.View,float)
    public static void setAlpha(android.view.View,float)
    public static void setX(android.view.View,float)
    public static void setY(android.view.View,float)
    public static void setRotation(android.view.View,float)
    public static void setRotationX(android.view.View,float)
    public static void setRotationY(android.view.View,float)
    public static void setScaleX(android.view.View,float)
    public static void setScaleY(android.view.View,float)
    public static float getPivotX(android.view.View)
    public static void setPivotX(android.view.View,float)
    public static float getPivotY(android.view.View)
    public static void setPivotY(android.view.View,float)
    public static float getRotation(android.view.View)
    public static float getRotationX(android.view.View)
    public static float getRotationY(android.view.View)
    public static float getScaleX(android.view.View)
    public static float getScaleY(android.view.View)
    public static float getX(android.view.View)
    public static float getY(android.view.View)
    public static void setTranslationZ(android.view.View,float)
    public static float getTranslationZ(android.view.View)
    public static void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean)
    public static void setFitsSystemWindows(android.view.View,boolean)
    public static void jumpDrawablesToCurrentState(android.view.View)
    public static androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
    public static void setSaveFromParentEnabled(android.view.View,boolean)
    public static void setActivated(android.view.View,boolean)
    public static void setNestedScrollingEnabled(android.view.View,boolean)
    public static boolean startNestedScroll(android.view.View,int)
    public static boolean hasNestedScrollingParent(android.view.View)
    public static boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
    public static boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
    public static boolean startNestedScroll(android.view.View,int,int)
    public static void stopNestedScroll(android.view.View,int)
    public static boolean hasNestedScrollingParent(android.view.View,int)
    public static void dispatchNestedScroll(android.view.View,int,int,int,int,int[],int,int[])
    public static boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[],int)
    public static boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[],int)
    public static boolean dispatchNestedFling(android.view.View,float,float,boolean)
    public static boolean dispatchNestedPreFling(android.view.View,float,float)
    public static boolean isInLayout(android.view.View)
    public static boolean isLayoutDirectionResolved(android.view.View)
    public static void setZ(android.view.View,float)
    public static void setScrollIndicators(android.view.View,int)
    public static int getScrollIndicators(android.view.View)
    public static void setPointerIcon(android.view.View,androidx.core.view.PointerIconCompat)
    public static void setTooltipText(android.view.View,java.lang.CharSequence)
    public static boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)
    public static void cancelDragAndDrop(android.view.View)
    public static void updateDragShadow(android.view.View,android.view.View$DragShadowBuilder)
    public static int getNextClusterForwardId(android.view.View)
    public static void setNextClusterForwardId(android.view.View,int)
    public static boolean isKeyboardNavigationCluster(android.view.View)
    public static void setKeyboardNavigationCluster(android.view.View,boolean)
    public static boolean isFocusedByDefault(android.view.View)
    public static void setFocusedByDefault(android.view.View,boolean)
    public static android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
    public static void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
    public static boolean restoreDefaultFocus(android.view.View)
    public static boolean hasExplicitFocusable(android.view.View)
    public static int generateViewId()
    public static void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
    public static void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
    protected void <init>()
    public static void setScreenReaderFocusable(android.view.View,boolean)
    public static void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
    private static final java.lang.String TAG
    public static final int OVER_SCROLL_ALWAYS
    public static final int OVER_SCROLL_IF_CONTENT_SCROLLS
    public static final int OVER_SCROLL_NEVER
    public static final int IMPORTANT_FOR_ACCESSIBILITY_AUTO
    public static final int IMPORTANT_FOR_ACCESSIBILITY_YES
    public static final int IMPORTANT_FOR_ACCESSIBILITY_NO
    public static final int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS
    public static final int ACCESSIBILITY_LIVE_REGION_NONE
    public static final int ACCESSIBILITY_LIVE_REGION_POLITE
    public static final int ACCESSIBILITY_LIVE_REGION_ASSERTIVE
    public static final int LAYER_TYPE_NONE
    public static final int LAYER_TYPE_SOFTWARE
    public static final int LAYER_TYPE_HARDWARE
    public static final int LAYOUT_DIRECTION_LTR
    public static final int LAYOUT_DIRECTION_RTL
    public static final int LAYOUT_DIRECTION_INHERIT
    public static final int LAYOUT_DIRECTION_LOCALE
    public static final int MEASURED_SIZE_MASK
    public static final int MEASURED_STATE_MASK
    public static final int MEASURED_HEIGHT_STATE_SHIFT
    public static final int MEASURED_STATE_TOO_SMALL
    public static final int SCROLL_AXIS_NONE
    public static final int SCROLL_AXIS_HORIZONTAL
    public static final int SCROLL_AXIS_VERTICAL
    public static final int TYPE_TOUCH
    public static final int TYPE_NON_TOUCH
    public static final int SCROLL_INDICATOR_TOP
    public static final int SCROLL_INDICATOR_BOTTOM
    public static final int SCROLL_INDICATOR_LEFT
    public static final int SCROLL_INDICATOR_RIGHT
    public static final int SCROLL_INDICATOR_START
    public static final int SCROLL_INDICATOR_END
    private static java.lang.reflect.Method sDispatchStartTemporaryDetach
    private static java.lang.reflect.Method sDispatchFinishTemporaryDetach
    private static boolean sTempDetachBound
    private static java.lang.reflect.Method sChildrenDrawingOrderMethod
com.bumptech.glide.manager.DefaultConnectivityMonitor:
    private static final java.lang.String TAG
com.bumptech.glide.load.engine.bitmap_recycle.ByteArrayAdapter:
    private static final java.lang.String TAG
androidx.fragment.app.FragmentManagerImpl$FragmentTag:
    private void <init>()
    public static final int Fragment_id
    public static final int Fragment_name
    public static final int Fragment_tag
androidx.vectordrawable.animated.R$string
com.bumptech.glide.load.engine.cache.DiskLruCacheFactory:
    public void <init>(java.lang.String,long)
    public void <init>(java.lang.String,java.lang.String,long)
com.yd.photoeditor.view.RectangleCropMaskImageView$IChangeDirection
androidx.core.os.CancellationSignal
org.greenrobot.greendao.async.AsyncOperation$OperationType
androidx.core.app.NotificationCompat$BadgeIconType
androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem
com.eptonic.photocollage.ui.view.PhotoLayout$5:
    public void onItemClick(com.eptonic.photocollage.ui.quickAction.QuickAction,int,int)
androidx.recyclerview.widget.RecyclerView$SmoothScroller:
    public void instantScrollToPosition(int)
org.jetbrains.annotations.NotNull
com.yd.photoeditor.imageprocessing.filter.effect.VVVVVVVVVVVVVVVV:
    public float getIntensity()
androidx.appcompat.widget.Toolbar$LayoutParams:
    public void <init>(int,int,int)
    public void <init>(int)
    static final int CUSTOM
    static final int SYSTEM
    static final int EXPANDED
androidx.transition.Fade:
    public void <init>()
    public void <init>(android.content.Context,android.util.AttributeSet)
    private static final java.lang.String PROPNAME_TRANSITION_ALPHA
    private static final java.lang.String LOG_TAG
    public static final int IN
    public static final int OUT
androidx.viewpager2.R$layout
androidx.recyclerview.widget.AsyncListDiffer
android.support.v4.os.IResultReceiver$Stub
android.support.v4.app.INotificationSideChannel$Stub$Proxy
androidx.lifecycle.MediatorLiveData
com.eptonic.photocollage.R$integer
com.google.android.material.dialog.InsetDialogOnTouchListener
com.yd.photoeditor.vv.DialogUtils$EditedImageLongClickListener
androidx.loader.R$string
androidx.appcompat.app.WindowDecorActionBar:
    public void <init>(android.view.View)
    private void ensureTabsExist()
    private void cleanupTabs()
    private void configureTab(androidx.appcompat.app.ActionBar$Tab,int)
    public float getElevation()
    public void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    public void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    public void setCustomView(int)
    public void setDisplayUseLogoEnabled(boolean)
    public void setDisplayShowHomeEnabled(boolean)
    public void setDisplayShowTitleEnabled(boolean)
    public void setDisplayShowCustomEnabled(boolean)
    public void setTitle(int)
    public void setSubtitle(int)
    public void setSelectedNavigationItem(int)
    public void removeAllTabs()
    public boolean requestFocus()
    public void setSubtitle(java.lang.CharSequence)
    public void setDisplayOptions(int)
    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
    public void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
    public android.view.View getCustomView()
    public java.lang.CharSequence getTitle()
    public java.lang.CharSequence getSubtitle()
    public void addTab(androidx.appcompat.app.ActionBar$Tab)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,int)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)
    public androidx.appcompat.app.ActionBar$Tab newTab()
    public void removeTab(androidx.appcompat.app.ActionBar$Tab)
    public void removeTabAt(int)
    public void selectTab(androidx.appcompat.app.ActionBar$Tab)
    public androidx.appcompat.app.ActionBar$Tab getSelectedTab()
    public int getHeight()
    public void show()
    public void hide()
    public boolean isHideOnContentScrollEnabled()
    public int getHideOffset()
    public void setHideOffset(int)
    public boolean isShowing()
    public boolean isTitleTruncated()
    public void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
    public void setHomeAsUpIndicator(int)
    public void setHomeActionContentDescription(java.lang.CharSequence)
    public void setHomeActionContentDescription(int)
    public void setCustomView(android.view.View)
    public void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams)
    public void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener)
    public int getSelectedNavigationIndex()
    public int getNavigationItemCount()
    public int getTabCount()
    public void setNavigationMode(int)
    public androidx.appcompat.app.ActionBar$Tab getTabAt(int)
    public void setIcon(int)
    public void setIcon(android.graphics.drawable.Drawable)
    public boolean hasIcon()
    public void setLogo(int)
    public void setLogo(android.graphics.drawable.Drawable)
    public boolean hasLogo()
    private androidx.appcompat.app.WindowDecorActionBar$TabImpl mSelectedTab
    private static final java.lang.String TAG
    private static final int INVALID_POSITION
    private static final long FADE_OUT_DURATION_MS
    private static final long FADE_IN_DURATION_MS
androidx.core.os.LocaleListCompat
com.yd.photoeditor.model.ItemPackageInfo
com.eptonic.photocollage.resEncryption.utils.Reflect:
    public static com.eptonic.photocollage.resEncryption.utils.Reflect on(java.lang.String)
    public static com.eptonic.photocollage.resEncryption.utils.Reflect on(java.lang.String,java.lang.ClassLoader)
    public static com.eptonic.photocollage.resEncryption.utils.Reflect on(java.lang.Class)
    public static com.eptonic.photocollage.resEncryption.utils.Reflect onClass(java.lang.String,java.lang.ClassLoader)
    public static java.lang.Object initValue(java.lang.Class)
    private static java.lang.String property(java.lang.String)
    private static varargs com.eptonic.photocollage.resEncryption.utils.Reflect on(java.lang.reflect.Constructor,java.lang.Object[])
    private static java.lang.Class forName(java.lang.String,java.lang.ClassLoader)
    static synthetic java.lang.Class access$000(com.eptonic.photocollage.resEncryption.utils.Reflect)
    static synthetic java.lang.Object access$100(com.eptonic.photocollage.resEncryption.utils.Reflect)
    static synthetic com.eptonic.photocollage.resEncryption.utils.Reflect access$200(java.lang.Class,java.lang.Object)
    static synthetic java.lang.String access$300(java.lang.String)
    public java.util.Map fields()
    public com.eptonic.photocollage.resEncryption.utils.Reflect call(java.lang.String)
    public com.eptonic.photocollage.resEncryption.utils.Reflect create()
    public varargs com.eptonic.photocollage.resEncryption.utils.Reflect create(java.lang.Object[])
    public java.lang.Object as(java.lang.Class)
    public varargs java.lang.Object as(java.lang.Class,java.lang.Class[])
com.google.android.material.ripple.RippleUtils:
    public static android.content.res.ColorStateList convertToRippleDrawableColor(android.content.res.ColorStateList)
    private static int getColorForState(android.content.res.ColorStateList,int[])
    private static int doubleAlpha(int)
    static final java.lang.String TRANSPARENT_DEFAULT_COLOR_WARNING
androidx.core.view.ViewCompat$UnhandledKeyEventManager:
    static void registerListeningView(android.view.View)
    static void unregisterListeningView(android.view.View)
androidx.transition.R$style
androidx.core.provider.FontsContractCompat$4$9
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams:
    public void <init>(int,int,float)
    public void <init>(android.view.ViewGroup$MarginLayoutParams)
    public void <init>(androidx.appcompat.widget.LinearLayoutCompat$LayoutParams)
androidx.annotation.AnyRes
androidx.appcompat.widget.AppCompatToggleButton:
    public void <init>(android.content.Context)
com.google.android.material.datepicker.MaterialStyledDatePickerDialog
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$ThrowingBitmapTracker
androidx.viewpager2.widget.ViewPager2$BasicAccessibilityProvider
com.bumptech.glide.util.ViewPreloadSizeProvider
android.support.v4.app.INotificationSideChannel$Stub
androidx.core.app.JobIntentService$JobServiceEngineImpl
com.eptonic.photocollage.adapter.SaveAdapter:
    public void setOnItemClickListener(com.eptonic.photocollage.presenter.listener.OnItemClickListener)
    private com.eptonic.photocollage.presenter.listener.OnItemClickListener mItemListener
androidx.vectordrawable.R$attr
com.bumptech.glide.load.model.UriLoader$StreamFactory:
    public void teardown()
androidx.core.app.BundleCompat
com.bumptech.glide.R
androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask
com.bumptech.glide.request.RequestOptions:
    public static com.bumptech.glide.request.RequestOptions sizeMultiplierOf(float)
    public static com.bumptech.glide.request.RequestOptions priorityOf(com.bumptech.glide.Priority)
    public static com.bumptech.glide.request.RequestOptions placeholderOf(android.graphics.drawable.Drawable)
    public static com.bumptech.glide.request.RequestOptions placeholderOf(int)
    public static com.bumptech.glide.request.RequestOptions errorOf(android.graphics.drawable.Drawable)
    public static com.bumptech.glide.request.RequestOptions errorOf(int)
    public static com.bumptech.glide.request.RequestOptions skipMemoryCacheOf(boolean)
    public static com.bumptech.glide.request.RequestOptions overrideOf(int,int)
    public static com.bumptech.glide.request.RequestOptions overrideOf(int)
    public static com.bumptech.glide.request.RequestOptions fitCenterTransform()
    public static com.bumptech.glide.request.RequestOptions centerInsideTransform()
    public static com.bumptech.glide.request.RequestOptions centerCropTransform()
    public static com.bumptech.glide.request.RequestOptions circleCropTransform()
    public static com.bumptech.glide.request.RequestOptions bitmapTransform(com.bumptech.glide.load.Transformation)
    public static com.bumptech.glide.request.RequestOptions noTransformation()
    public static com.bumptech.glide.request.RequestOptions option(com.bumptech.glide.load.Option,java.lang.Object)
    public static com.bumptech.glide.request.RequestOptions formatOf(com.bumptech.glide.load.DecodeFormat)
    public static com.bumptech.glide.request.RequestOptions frameOf(long)
    public static com.bumptech.glide.request.RequestOptions downsampleOf(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy)
    public static com.bumptech.glide.request.RequestOptions timeoutOf(int)
    public static com.bumptech.glide.request.RequestOptions encodeQualityOf(int)
    public static com.bumptech.glide.request.RequestOptions encodeFormatOf(android.graphics.Bitmap$CompressFormat)
    public static com.bumptech.glide.request.RequestOptions noAnimation()
    private static com.bumptech.glide.request.RequestOptions skipMemoryCacheTrueOptions
    private static com.bumptech.glide.request.RequestOptions skipMemoryCacheFalseOptions
    private static com.bumptech.glide.request.RequestOptions fitCenterOptions
    private static com.bumptech.glide.request.RequestOptions centerInsideOptions
    private static com.bumptech.glide.request.RequestOptions centerCropOptions
    private static com.bumptech.glide.request.RequestOptions circleCropOptions
    private static com.bumptech.glide.request.RequestOptions noTransformOptions
    private static com.bumptech.glide.request.RequestOptions noAnimationOptions
com.eptonic.photocollage.ui.wrapper.dah.interfaces.BaseTemplateDetailInterface
androidx.loader.content.CursorLoader
androidx.core.app.NavUtils:
    public static void navigateUpFromSameTask(android.app.Activity)
    public static android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class)
    private void <init>()
    private static final java.lang.String TAG
    public static final java.lang.String PARENT_ACTIVITY
androidx.core.graphics.ColorUtils:
    private void <init>()
    public static android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)
    public static double calculateLuminance(int)
    public static double calculateContrast(int,int)
    public static int calculateMinimumAlpha(int,int,float)
    public static void RGBToHSL(int,int,int,float[])
    public static void colorToHSL(int,float[])
    public static int HSLToColor(float[])
    public static void colorToLAB(int,double[])
    public static void RGBToLAB(int,int,int,double[])
    public static void colorToXYZ(int,double[])
    public static void RGBToXYZ(int,int,int,double[])
    public static void XYZToLAB(double,double,double,double[])
    public static void LABToXYZ(double,double,double,double[])
    public static int XYZToColor(double,double,double)
    public static int LABToColor(double,double,double)
    public static double distanceEuclidean(double[],double[])
    private static float constrain(float,float,float)
    private static int constrain(int,int,int)
    private static double pivotXyzComponent(double)
    public static int blendARGB(int,int,float)
    public static void blendHSL(float[],float[],float,float[])
    public static void blendLAB(double[],double[],double,double[])
    static float circularInterpolate(float,float,float)
    private static double[] getTempDouble3Array()
    private static final double XYZ_WHITE_REFERENCE_X
    private static final double XYZ_WHITE_REFERENCE_Y
    private static final double XYZ_WHITE_REFERENCE_Z
    private static final double XYZ_EPSILON
    private static final double XYZ_KAPPA
    private static final int MIN_ALPHA_SEARCH_MAX_ITERATIONS
    private static final int MIN_ALPHA_SEARCH_PRECISION
androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener
androidx.constraintlayout.widget.Placeholder:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public void <init>(android.content.Context,android.util.AttributeSet,int,int)
    private void init(android.util.AttributeSet)
androidx.coordinatorlayout.widget.DirectedAcyclicGraph:
    int size()
androidx.core.content.res.ResourcesCompat:
    public static android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
    public static int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
    public static android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
    public static float getFloat(android.content.res.Resources,int)
    private void <init>()
    private static final java.lang.String TAG
org.jetbrains.annotations.Contract
androidx.viewpager2.R$string
com.yd.photoeditor.imageprocessing.filter.processing.WWWVV
com.google.android.material.internal.ViewUtils$2
com.yd.photoeditor.imageprocessing.filter.effect.F1234
androidx.arch.core.executor.TaskExecutor:
    public void executeOnMainThread(java.lang.Runnable)
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper
androidx.core.graphics.PathSegment
com.yd.photoeditor.imageprocessing.filter.processing.WWW
androidx.vectordrawable.animated.R$layout
com.bumptech.glide.load.engine.cache.DiskCacheAdapter:
    public void delete(com.bumptech.glide.load.Key)
    public void clear()
com.google.android.material.snackbar.BaseTransientBottomBar$AnimationMode
androidx.core.graphics.drawable.RoundedBitmapDrawable
com.google.android.material.tabs.TabLayout$TabIndicatorGravity
androidx.constraintlayout.widget.Constraints:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    private void init(android.util.AttributeSet)
    public static final java.lang.String TAG
androidx.coordinatorlayout.widget.CoordinatorLayout$DispatchChangeEvent
androidx.recyclerview.widget.PagerSnapHelper
androidx.core.database.sqlite.SQLiteCursorCompat
androidx.fragment.app.ListFragment$2
org.greenrobot.greendao.database.StandardDatabase:
    public boolean inTransaction()
    public void execSQL(java.lang.String,java.lang.Object[])
    public boolean isOpen()
    public void close()
    public android.database.sqlite.SQLiteDatabase getSQLiteDatabase()
com.bumptech.glide.Glide:
    public static java.io.File getPhotoCacheDir(android.content.Context)
    public static java.io.File getPhotoCacheDir(android.content.Context,java.lang.String)
    public static synchronized void init(com.bumptech.glide.Glide)
    public static void init(android.content.Context,com.bumptech.glide.GlideBuilder)
    public static synchronized void tearDown()
    public static com.bumptech.glide.RequestManager with(android.app.Activity)
    public static com.bumptech.glide.RequestManager with(androidx.fragment.app.FragmentActivity)
    public static com.bumptech.glide.RequestManager with(androidx.fragment.app.Fragment)
    public static com.bumptech.glide.RequestManager with(android.app.Fragment)
    public static com.bumptech.glide.RequestManager with(android.view.View)
    public synchronized varargs void preFillBitmapPool(com.bumptech.glide.load.engine.prefill.PreFillType$Builder[])
    public void clearDiskCache()
    public com.bumptech.glide.MemoryCategory setMemoryCategory(com.bumptech.glide.MemoryCategory)
    private com.bumptech.glide.load.engine.prefill.BitmapPreFiller bitmapPreFiller
    private static final java.lang.String DEFAULT_DISK_CACHE_DIR
    private static final java.lang.String TAG
androidx.appcompat.app.AppCompatDialogFragment
androidx.core.net.TrafficStatsCompat
org.greenrobot.greendao.rx.RxDao$8
com.bumptech.glide.load.resource.bitmap.CenterCrop:
    private static final java.lang.String ID
com.google.android.material.internal.ContextUtils
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop$AlwaysStatefulMaterialShapeDrawable
com.google.android.material.tabs.TabLayout$TabView
androidx.activity.ImmLeaksCleaner:
    private static final int NOT_INITIALIAZED
    private static final int INIT_SUCCESS
    private static final int INIT_FAILED
androidx.appcompat.widget.ScrollingTabContainerView$TabView:
    private static final java.lang.String ACCESSIBILITY_CLASS_NAME
androidx.core.app.NotificationCompat$Action$Extender
com.google.android.material.bottomsheet.BottomSheetDialogFragment$BottomSheetDismissCallback
org.greenrobot.greendao.test.AbstractDaoTest
com.bumptech.glide.load.engine.prefill.BitmapPreFillRunner
com.google.android.material.circularreveal.CircularRevealHelper$Strategy
com.google.android.material.appbar.CollapsingToolbarLayout$OffsetUpdateListener
com.eptonic.photocollage.ui.quickAction.QuickAction$C24381
com.google.android.material.bottomnavigation.LabelVisibilityMode
com.yd.photoeditor.R
com.google.android.material.resources.TextAppearance:
    private static final java.lang.String TAG
    private static final int TYPEFACE_SANS
    private static final int TYPEFACE_SERIF
    private static final int TYPEFACE_MONOSPACE
com.bumptech.glide.load.model.stream.HttpGlideUrlLoader$Factory:
    public void teardown()
com.google.android.material.tabs.TabLayout$SlidingTabIndicator
androidx.appcompat.view.menu.BaseMenuPresenter:
    public boolean flagActionItems()
    public int getId()
androidx.annotation.ColorLong
com.bumptech.glide.load.HttpException:
    public int getStatusCode()
    private static final long serialVersionUID
    public static final int UNKNOWN
androidx.transition.Slide$2
com.eptonic.photocollage.model.PhotoStickerSaveData:
    public int getId()
    public void setId(int)
    public void setFilename(java.lang.String)
    public void setIdx(int)
    public void setFilenamex(java.lang.String)
com.bumptech.glide.GlideBuilder:
    public com.bumptech.glide.GlideBuilder setBitmapPool(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)
    public com.bumptech.glide.GlideBuilder setArrayPool(com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)
    public com.bumptech.glide.GlideBuilder setMemoryCache(com.bumptech.glide.load.engine.cache.MemoryCache)
    public com.bumptech.glide.GlideBuilder setDiskCache(com.bumptech.glide.load.engine.cache.DiskCache$Factory)
    public com.bumptech.glide.GlideBuilder setResizeExecutor(com.bumptech.glide.load.engine.executor.GlideExecutor)
    public com.bumptech.glide.GlideBuilder setSourceExecutor(com.bumptech.glide.load.engine.executor.GlideExecutor)
    public com.bumptech.glide.GlideBuilder setDiskCacheExecutor(com.bumptech.glide.load.engine.executor.GlideExecutor)
    public com.bumptech.glide.GlideBuilder setAnimationExecutor(com.bumptech.glide.load.engine.executor.GlideExecutor)
    public com.bumptech.glide.GlideBuilder setDefaultRequestOptions(com.bumptech.glide.request.RequestOptions)
    public com.bumptech.glide.GlideBuilder setDefaultRequestOptions(com.bumptech.glide.Glide$RequestOptionsFactory)
    public com.bumptech.glide.GlideBuilder setDefaultTransitionOptions(java.lang.Class,com.bumptech.glide.TransitionOptions)
    public com.bumptech.glide.GlideBuilder setMemorySizeCalculator(com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder)
    public com.bumptech.glide.GlideBuilder setMemorySizeCalculator(com.bumptech.glide.load.engine.cache.MemorySizeCalculator)
    public com.bumptech.glide.GlideBuilder setConnectivityMonitorFactory(com.bumptech.glide.manager.ConnectivityMonitorFactory)
    public com.bumptech.glide.GlideBuilder setLogLevel(int)
    public com.bumptech.glide.GlideBuilder setIsActiveResourceRetentionAllowed(boolean)
    public com.bumptech.glide.GlideBuilder addGlobalRequestListener(com.bumptech.glide.request.RequestListener)
    public com.bumptech.glide.GlideBuilder setLogRequestOrigins(boolean)
    public com.bumptech.glide.GlideBuilder setImageDecoderEnabledForBitmaps(boolean)
    com.bumptech.glide.GlideBuilder setEngine(com.bumptech.glide.load.engine.Engine)
androidx.appcompat.widget.SwitchCompat
androidx.appcompat.view.StandaloneActionMode:
    public void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
    public boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
    public void onCloseSubMenu(androidx.appcompat.view.menu.SubMenuBuilder)
    public boolean isUiFocusable()
androidx.transition.GhostViewUtils
androidx.core.os.MessageCompat
com.google.android.material.tabs.TabLayout$TabView$1
com.google.android.material.transformation.ExpandableBehavior:
    public static com.google.android.material.transformation.ExpandableBehavior from(android.view.View,java.lang.Class)
    private static final int STATE_UNINITIALIZED
    private static final int STATE_EXPANDED
    private static final int STATE_COLLAPSED
androidx.appcompat.widget.AppCompatBackgroundHelper:
    public final boolean shouldApplyFrameworkTintUsingColorFilter()
    public final boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable)
com.bumptech.glide.load.resource.bitmap.VideoDecoder$ByteBufferInitializer$1:
    public final synthetic com.bumptech.glide.load.resource.bitmap.VideoDecoder$ByteBufferInitializer this$0
com.bumptech.glide.load.model.ByteBufferEncoder:
    public boolean encode(java.nio.ByteBuffer,java.io.File)
androidx.core.view.ActionProvider$VisibilityListener:
    public abstract void onActionProviderVisibilityChanged(boolean)
androidx.cardview.widget.CardViewBaseImpl
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath:
    public void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)
    public final void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)
androidx.transition.ViewUtils:
    public static void setTransitionAlpha(android.view.View,float)
    public static void saveNonTransitionAlpha(android.view.View)
    public static void clearNonTransitionAlpha(android.view.View)
    public static void setTransitionVisibility(android.view.View,int)
    public static void transformMatrixToGlobal(android.view.View,android.graphics.Matrix)
    public static void transformMatrixToLocal(android.view.View,android.graphics.Matrix)
    public static final android.util.Property CLIP_BOUNDS
com.google.android.material.bottomappbar.BottomAppBar$Behavior:
    public static synthetic java.lang.ref.WeakReference access$1300(com.google.android.material.bottomappbar.BottomAppBar$Behavior)
    public static synthetic android.graphics.Rect access$1400(com.google.android.material.bottomappbar.BottomAppBar$Behavior)
    public static synthetic int access$1500(com.google.android.material.bottomappbar.BottomAppBar$Behavior)
    public boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,int)
    public boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,android.view.View,android.view.View,int,int)
androidx.cardview.widget.CardViewApi21Impl:
    public void setRadius(androidx.cardview.widget.CardViewDelegate,float)
    public void initStatic()
    public float getMinWidth(androidx.cardview.widget.CardViewDelegate)
    public float getMinHeight(androidx.cardview.widget.CardViewDelegate)
    public void setElevation(androidx.cardview.widget.CardViewDelegate,float)
    public float getElevation(androidx.cardview.widget.CardViewDelegate)
    public void updatePadding(androidx.cardview.widget.CardViewDelegate)
    public void onCompatPaddingChanged(androidx.cardview.widget.CardViewDelegate)
    public void onPreventCornerOverlapChanged(androidx.cardview.widget.CardViewDelegate)
    public android.content.res.ColorStateList getBackgroundColor(androidx.cardview.widget.CardViewDelegate)
com.google.android.material.chip.ChipDrawable:
    public static com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int)
    public static boolean isStateful(com.google.android.material.resources.TextAppearance)
    public static boolean hasState(int[],int)
    public boolean getUseCompatRipple()
    public void setDelegate(com.google.android.material.chip.ChipDrawable$Delegate)
    public void getCloseIconTouchBounds(android.graphics.RectF)
    public android.graphics.Paint$Align calculateTextOriginAndAlignment(android.graphics.Rect,android.graphics.PointF)
    public boolean isCloseIconStateful()
    public int[] getCloseIconState()
    public android.content.res.ColorStateList getChipBackgroundColor()
    public void setChipBackgroundColorResource(int)
    public float getChipMinHeight()
    public void setChipMinHeightResource(int)
    public void setChipCornerRadiusResource(int)
    public android.content.res.ColorStateList getChipStrokeColor()
    public void setChipStrokeColorResource(int)
    public float getChipStrokeWidth()
    public void setChipStrokeWidthResource(int)
    public android.content.res.ColorStateList getRippleColor()
    public void setRippleColorResource(int)
    public java.lang.CharSequence getText()
    public com.google.android.material.resources.TextAppearance getTextAppearance()
    public void setTextAppearanceResource(int)
    public android.text.TextUtils$TruncateAt getEllipsize()
    public void setEllipsize(android.text.TextUtils$TruncateAt)
    public void setChipIconVisible(int)
    public android.graphics.drawable.Drawable getChipIcon()
    public void setChipIconResource(int)
    public android.content.res.ColorStateList getChipIconTint()
    public void setChipIconTintResource(int)
    public float getChipIconSize()
    public void setChipIconSizeResource(int)
    public boolean isCloseIconVisible()
    public void setCloseIconResource(int)
    public android.content.res.ColorStateList getCloseIconTint()
    public void setCloseIconTintResource(int)
    public float getCloseIconSize()
    public void setCloseIconSizeResource(int)
    public void setCloseIconContentDescription(java.lang.CharSequence)
    public java.lang.CharSequence getCloseIconContentDescription()
    public boolean isCheckable()
    public void setCheckableResource(int)
    public void setCheckedIconVisible(int)
    public android.graphics.drawable.Drawable getCheckedIcon()
    public void setCheckedIconResource(int)
    public com.google.android.material.animation.MotionSpec getShowMotionSpec()
    public void setShowMotionSpecResource(int)
    public void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
    public com.google.android.material.animation.MotionSpec getHideMotionSpec()
    public void setHideMotionSpecResource(int)
    public void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
    public float getChipStartPadding()
    public void setChipStartPaddingResource(int)
    public float getIconStartPadding()
    public void setIconStartPaddingResource(int)
    public float getIconEndPadding()
    public void setIconEndPaddingResource(int)
    public float getTextStartPadding()
    public void setTextStartPaddingResource(int)
    public float getTextEndPadding()
    public void setTextEndPaddingResource(int)
    public float getCloseIconStartPadding()
    public void setCloseIconStartPaddingResource(int)
    public float getCloseIconEndPadding()
    public void setCloseIconEndPaddingResource(int)
    public float getChipEndPadding()
    public void setChipEndPaddingResource(int)
    public void setMaxWidth(int)
    public boolean shouldDrawText()
    public void setShouldDrawText(boolean)
    public final void loadFromAttributes(android.util.AttributeSet,int,int)
    public final boolean canShowCheckedIcon()
    public final void drawChipSurface(android.graphics.Canvas,android.graphics.Rect)
    public final void drawChipBackground(android.graphics.Canvas,android.graphics.Rect)
    public final void drawChipStroke(android.graphics.Canvas,android.graphics.Rect)
    public final void drawCompatRipple(android.graphics.Canvas,android.graphics.Rect)
    public final void drawChipIcon(android.graphics.Canvas,android.graphics.Rect)
    public final void drawCheckedIcon(android.graphics.Canvas,android.graphics.Rect)
    public final void drawText(android.graphics.Canvas,android.graphics.Rect)
    public final void drawCloseIcon(android.graphics.Canvas,android.graphics.Rect)
    public final void drawDebug(android.graphics.Canvas,android.graphics.Rect)
    public final float calculateTextCenterFromBaseline()
    public final void calculateTextBounds(android.graphics.Rect,android.graphics.RectF)
    public final void calculateChipTouchBounds(android.graphics.Rect,android.graphics.RectF)
    public final android.graphics.ColorFilter getTintColorFilter()
    public final void updateCompatRippleColor()
    public final void setChipSurfaceColor(android.content.res.ColorStateList)
    public final void updateFrameworkCloseIconRipple()
com.eptonic.photocollage.ui.view.sticker.TextSticker:
    public void <init>(android.content.Context,android.graphics.drawable.Drawable)
    public com.eptonic.photocollage.ui.view.sticker.TextSticker setDrawable(android.graphics.drawable.Drawable)
    public com.eptonic.photocollage.ui.view.sticker.TextSticker setTypeface(android.graphics.Typeface)
    public com.eptonic.photocollage.ui.view.sticker.TextSticker setTextColor(int)
    public com.eptonic.photocollage.ui.view.sticker.TextSticker setText(java.lang.String)
    public java.lang.String getText()
    public int getTextColor()
    public android.graphics.Typeface getTypeFace()
    public final float convertSpToPx(float)
androidx.collection.SimpleArrayMap:
    public static int binarySearchHashes(int[],int,int)
    public void <init>(androidx.collection.SimpleArrayMap)
androidx.core.graphics.TypefaceCompat:
    public static android.graphics.Typeface findFromCache(android.content.res.Resources,int,int)
    public static android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
    public static android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int)
androidx.appcompat.app.AlertController$AlertParams$2
com.eptonic.photocollage.ui.view.sticker.EditIconEvent:
    public void setListener(com.eptonic.photocollage.presenter.listener.EditEventListener)
com.eptonic.photocollage.ui.next.s.xx.xxx.yy.cc.activity.FrameDetailActivity$2:
    public void onLongItemClick(android.view.View,int)
    public void onItemClick(android.view.View,int)
com.bumptech.glide.gifdecoder.GifHeader:
    public int getHeight()
    public int getWidth()
    public int getNumFrames()
    public int getStatus()
com.google.android.material.internal.ThemeEnforcement:
    public static varargs androidx.appcompat.widget.TintTypedArray obtainTintedStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[])
    public static varargs boolean isCustomTextAppearanceValid(android.content.Context,android.util.AttributeSet,int[],int,int,int[])
    public static void checkAppCompatTheme(android.content.Context)
    public static void checkMaterialTheme(android.content.Context)
    public static boolean isTheme(android.content.Context,int[])
    public static int obtainAndroidThemeOverlayId(android.content.Context,android.util.AttributeSet)
    public static int obtainMaterialThemeOverlayId(android.content.Context,android.util.AttributeSet,int,int)
com.bumptech.glide.load.engine.executor.RuntimeCompat$1
androidx.cardview.widget.RoundRectDrawableWithShadow$RoundRectHelper
androidx.transition.ViewOverlayImpl:
    public abstract void add(android.graphics.drawable.Drawable)
    public abstract void remove(android.graphics.drawable.Drawable)
com.google.android.material.appbar.AppBarLayout$2:
    public final synthetic com.google.android.material.appbar.AppBarLayout this$0
androidx.appcompat.app.AlertController$2:
    public void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View)
    public void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int)
    public final synthetic androidx.appcompat.app.AlertController this$0
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator:
    public int updateFrames(android.graphics.drawable.AnimationDrawable,boolean)
    public int getTotalDuration()
com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener:
    public void <init>(java.util.List,com.bumptech.glide.load.data.mediastore.FileService,com.bumptech.glide.load.data.mediastore.ThumbnailQuery,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,android.content.ContentResolver)
    public int getOrientation(android.net.Uri)
    public java.io.InputStream open(android.net.Uri)
    public final java.lang.String getPath(android.net.Uri)
    public final boolean isValid(java.io.File)
androidx.appcompat.widget.DrawableUtils:
    public static void fixVectorDrawableTinting(android.graphics.drawable.Drawable)
    public static final android.graphics.Rect INSETS_NONE
    public static java.lang.Class sInsetsClazz
androidx.core.app.ComponentActivity:
    public androidx.collection.SimpleArrayMap mExtraDataMap
androidx.core.widget.NestedScrollView$SavedState$1:
    public androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel)
    public androidx.core.widget.NestedScrollView$SavedState[] newArray(int)
com.yd.photoeditor.actions.EffectAction:
    public static void <clinit>()
    public java.util.ArrayList loadNormalItems(int[])
    public static final java.lang.String TAG
com.google.android.material.datepicker.Month$1:
    public com.google.android.material.datepicker.Month createFromParcel(android.os.Parcel)
    public com.google.android.material.datepicker.Month[] newArray(int)
androidx.activity.OnBackPressedCallback:
    public final void setEnabled(boolean)
    public final boolean isEnabled()
    public final void remove()
    public abstract void handleOnBackPressed()
    public void addCancellable(androidx.activity.Cancellable)
    public void removeCancellable(androidx.activity.Cancellable)
androidx.transition.ChangeBounds$2:
    public void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF)
    public android.graphics.PointF get()
androidx.savedstate.Recreator:
    public final void reflectiveNew(java.lang.String)
com.bumptech.glide.util.pool.FactoryPools:
    public static androidx.core.util.Pools$Pool threadSafeList(int)
    public static androidx.core.util.Pools$Pool build(androidx.core.util.Pools$Pool,com.bumptech.glide.util.pool.FactoryPools$Factory)
    public static androidx.core.util.Pools$Pool build(androidx.core.util.Pools$Pool,com.bumptech.glide.util.pool.FactoryPools$Factory,com.bumptech.glide.util.pool.FactoryPools$Resetter)
    public static com.bumptech.glide.util.pool.FactoryPools$Resetter emptyResetter()
com.eptonic.photocollage.util.GeometryUtils:
    public static void createRegularPolygonPath(android.graphics.Path,float,float,float,int,float)
    public static java.util.List shrinkPathCollageUsingMap(java.util.List,float,java.util.HashMap)
    public static java.util.List shrinkPathCollage_3_3(java.util.List,int,float,android.graphics.RectF)
    public static java.util.List commonShrinkPath(java.util.List,float,java.util.Map)
    public static boolean createArc(android.graphics.PointF,android.graphics.PointF,android.graphics.PointF,float,double[],android.graphics.PointF[],boolean)
    public static android.graphics.PointF findPointOnBisector(android.graphics.PointF,android.graphics.PointF,android.graphics.PointF,float)
    public static android.graphics.PointF shrinkPoint(android.graphics.PointF,android.graphics.PointF,android.graphics.PointF,float,float,boolean,boolean)
    public static boolean CCW(android.graphics.PointF,android.graphics.PointF,android.graphics.PointF)
    public static void createPermissionsCheckListIfNeed()
    public static android.graphics.Bitmap decodePNGImage(android.content.Context,java.lang.String)
    public static android.graphics.Bitmap getResizedBitmap(android.net.Uri,android.content.Context)
    public static com.eptonic.photocollage.model.TemplateItem collage_1_0()
    public static java.lang.String toUTCDateTimeString()
    public static int saveLayerAlpha(android.graphics.Canvas,float,float,float,float,int)
    public static android.animation.Animator$AnimatorListener createCircularRevealListener(com.google.android.material.circularreveal.CircularRevealWidget)
    public static int getColor(android.content.Context,int,java.lang.String)
    public static int getColor(android.view.View,int,int)
    public static int layer(int,int)
    public static java.lang.String getMonthDayOfWeekDay(long)
    public static java.lang.String getMonthDayOfWeekDay(long,java.util.Locale)
    public static java.lang.String getYearMonthDayOfWeekDay(long)
    public static java.lang.String getYearMonthDayOfWeekDay(long,java.util.Locale)
    public static android.icu.util.TimeZone getUtcAndroidTimeZone()
    public static long canonicalYearMonthDay(long)
    public static android.icu.text.DateFormat getAndroidFormat(java.lang.String,java.util.Locale)
    public static java.text.DateFormat getFormat(int,java.util.Locale)
    public static java.text.SimpleDateFormat getSimpleFormat(java.lang.String,java.util.Locale)
    public static android.icu.text.DateFormat getAbbrMonthWeekdayDayFormat(java.util.Locale)
    public static android.icu.text.DateFormat getYearAbbrMonthWeekdayDayFormat(java.util.Locale)
    public static java.text.DateFormat getFullFormat(java.util.Locale)
    public static java.text.SimpleDateFormat getYearMonthFormat()
    public static java.text.SimpleDateFormat getYearMonthFormat(java.util.Locale)
    public static float dpToPx(android.content.Context,int)
    public static float getParentAbsoluteElevation(android.view.View)
    public static float distanceToFurthestCorner(float,float,float,float,float,float)
    public static float max(float,float,float,float)
    public static int resolveOrThrow(android.view.View,int)
    public static com.google.android.material.resources.TextAppearance getTextAppearance(android.content.Context,android.content.res.TypedArray,int)
    public static int getDimensionPixelSize(android.content.Context,android.content.res.TypedArray,int,int)
    public static int getIndexWithValue(android.content.res.TypedArray,int,int)
    public static boolean shouldLoadFontSynchronously()
    public static com.google.android.material.shape.CornerTreatment createDefaultCornerTreatment()
    public static com.google.android.material.shape.EdgeTreatment createDefaultEdgeTreatment()
    public static void setParentAbsoluteElevation(android.view.View)
    public static void d(java.lang.String,java.lang.String)
    public static int loadProgram(java.lang.String,java.lang.String)
    public static java.lang.String getCurrentDateTime()
    public static android.app.Dialog createAddImageDialog(android.content.Context)
    public static android.graphics.Bitmap rotateImage(android.graphics.Bitmap,float,boolean)
    public static float calculateScaleRatio(int,int,int,int)
    public static int w(java.lang.String)
    public static int e(java.lang.String,java.lang.Throwable)
    public static boolean shouldLoadFontSynchronously
androidx.transition.ViewUtilsApi23:
    public static void <clinit>()
com.google.android.material.snackbar.SnackbarManager$SnackbarRecord:
    public boolean isSnackbar(com.google.android.material.snackbar.SnackbarManager$Callback)
    public int duration
    public boolean paused
com.bumptech.glide.request.ResourceCallback:
    public abstract void onResourceReady(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource)
    public abstract void onLoadFailed(com.bumptech.glide.load.engine.GlideException)
    public abstract java.lang.Object getLock()
com.google.android.material.shape.MaterialShapeUtils
androidx.core.view.NestedScrollingChild:
    public abstract boolean isNestedScrollingEnabled()
    public abstract void stopNestedScroll()
com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder:
    public boolean handles()
    public com.bumptech.glide.load.engine.Resource decode(com.bumptech.glide.gifdecoder.GifDecoder)
androidx.appcompat.widget.Toolbar$SavedState$1:
    public androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel)
    public androidx.appcompat.widget.Toolbar$SavedState[] newArray(int)
com.yd.photoeditor.config.Constants:
    public static final int[] ROTATES
androidx.savedstate.SavedStateRegistryController:
    public static androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner)
    public androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
androidx.versionedparcelable.VersionedParcelParcel:
    public void writeByteArray(byte[])
    public void writeInt(int)
    public void writeString(java.lang.String)
    public void writeParcelable(android.os.Parcelable)
    public void writeBoolean(boolean)
    public void writeCharSequence(java.lang.CharSequence)
    public java.lang.CharSequence readCharSequence()
    public int readInt()
    public java.lang.String readString()
    public byte[] readByteArray()
    public android.os.Parcelable readParcelable()
    public boolean readBoolean()
androidx.collection.ArrayMap:
    public boolean retainAll(java.util.Collection)
com.eptonic.photocollage.ui.next.s.xx.xxx.yy.cc.activity.TemplateDetailActivity:
    public void showRecyclerViewFragment(java.lang.Boolean)
    public android.net.Uri mBackgroundUri
    public android.view.ViewGroup mSpaceLayout
    public androidx.recyclerview.widget.RecyclerView recyclerViewStick
com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget:
    public android.graphics.Bitmap getResource()
    public void onResourceReady(android.graphics.Bitmap)
com.yd.photoeditor.ui.activity.ImageProcessingActivity:
    public static synthetic com.yd.photoeditor.actions.BaseAction[] access$000(com.yd.photoeditor.ui.activity.ImageProcessingActivity)
    public static synthetic int access$102(com.yd.photoeditor.ui.activity.ImageProcessingActivity,int)
    public void attachBottomView(int)
    public void setCurrentAction(com.yd.photoeditor.actions.BaseAction)
    public com.yd.photoeditor.actions.BaseAction getCurrentAction()
    public int[] calculateThumbnailSize()
    public float calculateScaleRatio(int,int)
    public android.widget.ImageView getNormalImageView()
    public com.yd.photoeditor.actions.RotationAction getRotationAction()
    public com.yd.photoeditor.imageprocessing.temp.ImageFilter4 getImageProcessingView()
    public void setDoneActionsClickListener(com.yd.photoeditor.listener.OnDoneActionsClickListener)
    public void hideActions()
    public java.lang.String getEditingImagePath()
    public boolean isEditingImage()
    public com.yd.photoeditor.actions.CropAction getCropAction()
    public void showAllMenus()
    public com.yd.photoeditor.adapter.CustomItemAdapter getAdapter()
    public final void initInfo()
    public final void initView()
    public final void setImageProcessingViewBackgroundColor()
    public final void initAction()
    public android.widget.FrameLayout mBottomItemLayout
    public int mCurrentTopMenuPosition
com.eptonic.photocollage.adapter.FreeTabEditAdapter:
    public static synthetic com.eptonic.photocollage.presenter.listener.OnItemClickListener access$000(com.eptonic.photocollage.adapter.FreeTabEditAdapter)
    public void setOnItemClickListener(com.eptonic.photocollage.presenter.listener.OnItemClickListener)
    public com.eptonic.photocollage.adapter.FreeTabEditAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup)
    public void onBindViewHolder(com.eptonic.photocollage.adapter.FreeTabEditAdapter$ViewHolder,int)
androidx.appcompat.app.AppCompatDelegateImpl$5:
    public void onAttachedFromWindow()
    public void onDetachedFromWindow()
com.bumptech.glide.load.resource.bitmap.BitmapEncoder:
    public boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options)
    public final android.graphics.Bitmap$CompressFormat getFormat(android.graphics.Bitmap,com.bumptech.glide.load.Options)
com.bumptech.glide.load.engine.Engine$DecodeJobFactory:
    public com.bumptech.glide.load.engine.DecodeJob build(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.engine.EngineKey,com.bumptech.glide.load.Key,int,int,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.engine.DiskCacheStrategy,java.util.Map,boolean,boolean,boolean,com.bumptech.glide.load.Options,com.bumptech.glide.load.engine.DecodeJob$Callback)
androidx.core.widget.TextViewCompat$OreoCallback:
    public final void recomputeProcessTextMenuItems(android.view.Menu)
    public final java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager)
    public final boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context)
    public final android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView)
    public final boolean isEditable(android.widget.TextView)
    public final android.content.Intent createProcessTextIntent()
com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$3
com.google.android.material.datepicker.MaterialDatePicker:
    public static void <clinit>()
    public static final java.lang.Object CONFIRM_BUTTON_TAG
    public static final java.lang.Object CANCEL_BUTTON_TAG
    public static final java.lang.Object TOGGLE_BUTTON_TAG
com.google.android.material.appbar.ViewOffsetHelper:
    public void onViewLayout()
    public boolean setTopAndBottomOffset(int)
    public boolean setLeftAndRightOffset(int)
    public int getTopAndBottomOffset()
com.bumptech.glide.load.resource.drawable.DrawableResource:
    public final android.graphics.drawable.Drawable get()
com.google.android.material.bottomappbar.BottomAppBar:
    public static synthetic void access$600(com.google.android.material.bottomappbar.BottomAppBar)
    public static synthetic android.animation.Animator access$902(com.google.android.material.bottomappbar.BottomAppBar,android.animation.Animator)
    public static synthetic com.google.android.material.floatingactionbutton.FloatingActionButton access$1100(com.google.android.material.bottomappbar.BottomAppBar)
    public static synthetic int access$1600(com.google.android.material.bottomappbar.BottomAppBar)
    public static synthetic void access$1800(com.google.android.material.bottomappbar.BottomAppBar,com.google.android.material.floatingactionbutton.FloatingActionButton)
    public static synthetic void access$1900(com.google.android.material.bottomappbar.BottomAppBar)
    public static void <clinit>()
    public boolean setFabDiameter(int)
    public void createFabDefaultXAnimation(int)
    public final void dispatchAnimationStart()
    public final void dispatchAnimationEnd()
    public final void maybeAnimateModeChange(int)
    public final void createFabTranslationXAnimation(int,java.util.List)
    public final void maybeAnimateMenuView(int,boolean)
    public final void createMenuViewTranslationAnimation(int,boolean,java.util.List)
    public final void translateActionMenuView(androidx.appcompat.widget.ActionMenuView,int,boolean)
    public final void cancelAnimations()
    public final void setActionMenuViewPosition()
    public final void addFabAnimationListeners(com.google.android.material.floatingactionbutton.FloatingActionButton)
    public final int fabOffsetEndMode
    public final com.google.android.material.shape.MaterialShapeDrawable materialShapeDrawable
    public java.util.ArrayList animationListeners
    public int bottomInset
    public com.google.android.material.animation.TransformationCallback fabTransformationCallback
    public static final int DEF_STYLE_RES
com.google.android.material.behavior.HideBottomViewOnScrollBehavior:
    public static synthetic android.view.ViewPropertyAnimator access$002(com.google.android.material.behavior.HideBottomViewOnScrollBehavior,android.view.ViewPropertyAnimator)
    public void setAdditionalHiddenOffsetY(android.view.View,int)
    public void slideUp(android.view.View)
    public void slideDown(android.view.View)
androidx.transition.ViewGroupUtilsApi14
androidx.recyclerview.widget.RecyclerView$5:
    public void addView(android.view.View,int)
    public int indexOfChild(android.view.View)
    public void removeAllViews()
    public androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)
    public void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams)
    public void detachViewFromParent(int)
    public void onEnteredHiddenState(android.view.View)
    public void onLeftHiddenState(android.view.View)
com.bumptech.glide.load.model.Headers$1
com.eptonic.photocollage.ui.quickAction.QuickAction:
    public android.view.View getAnchorView()
    public void setAnimStyle(int)
    public void setOnActionItemClickListener(com.eptonic.photocollage.ui.quickAction.QuickAction$OnActionItemClickListener)
    public void addActionItem()
    public void show(android.view.View)
    public void setOnDismissListener(com.eptonic.photocollage.ui.quickAction.QuickAction$OnDismissListener)
    public final void setAnimationStyle(int)
    public int mAnimStyle
    public final int mChildPos
    public com.eptonic.photocollage.ui.quickAction.QuickAction$OnActionItemClickListener mItemClickListener
    public final java.util.List mQuickActionItems
    public android.view.ViewGroup mTrack
com.yd.photoeditor.view.MultiTouchHandler:
    public void <init>(android.os.Parcel)
    public void setMatrix(android.graphics.Matrix)
    public void touch(android.view.MotionEvent)
    public android.graphics.Matrix getMatrix()
    public android.graphics.Matrix getScaleMatrix()
    public void setScale(float)
    public void setEnableRotation(boolean)
com.bumptech.glide.load.resource.bitmap.InputStreamBitmapImageDecoderResourceDecoder:
    public boolean handles()
    public com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int,com.bumptech.glide.load.Options)
com.google.android.material.button.MaterialButtonHelper:
    public static void <clinit>()
    public void loadFromAttributes(android.content.res.TypedArray)
    public void setBackgroundOverwritten()
    public boolean isBackgroundOverwritten()
    public void setSupportBackgroundTintList(android.content.res.ColorStateList)
    public android.content.res.ColorStateList getSupportBackgroundTintList()
    public void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
    public android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
    public void setShouldDrawSurfaceColorStroke(boolean)
    public void updateMaskBounds(int,int)
    public void setBackgroundColor(int)
    public void setRippleColor(android.content.res.ColorStateList)
    public android.content.res.ColorStateList getRippleColor()
    public void setStrokeColor(android.content.res.ColorStateList)
    public android.content.res.ColorStateList getStrokeColor()
    public void setStrokeWidth(int)
    public int getStrokeWidth()
    public void setCornerRadius(int)
    public int getCornerRadius()
    public void setCheckable(boolean)
    public boolean isCheckable()
    public com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
    public final android.graphics.drawable.InsetDrawable wrapDrawableWithInset(android.graphics.drawable.Drawable)
    public final android.graphics.drawable.Drawable createBackground()
    public final void updateButtonShape(com.google.android.material.shape.ShapeAppearanceModel)
    public static final boolean IS_LOLLIPOP
androidx.core.widget.TintableCompoundDrawablesView
com.google.android.material.internal.TextDrawableHelper:
    public static synthetic boolean access$002(com.google.android.material.internal.TextDrawableHelper,boolean)
    public static synthetic java.lang.ref.WeakReference access$100(com.google.android.material.internal.TextDrawableHelper)
    public void setDelegate(com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate)
    public android.text.TextPaint getTextPaint()
    public void setTextWidthDirty(boolean)
    public com.google.android.material.resources.TextAppearance getTextAppearance()
    public void setTextAppearance(com.google.android.material.resources.TextAppearance,android.content.Context)
    public void updateTextPaintDrawState(android.content.Context)
    public final float calculateTextWidth(java.lang.CharSequence)
androidx.recyclerview.widget.LinearSnapHelper:
    public int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int)
    public final float computeDistancePerChild(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper)
androidx.appcompat.view.ContextThemeWrapper:
    public int getThemeResId()
    public void onApplyThemeResource(android.content.res.Resources$Theme,int)
    public final android.content.res.Resources getResourcesInternal()
    public android.content.res.Configuration mOverrideConfiguration
com.eptonic.photocollage.ui.view.frame.FrameImageView:
    public static int findCenterPointIndex(com.eptonic.photocollage.ui.view.template.PhotoItem)
    public static void buildRealPath(float,float,com.eptonic.photocollage.ui.view.template.PhotoItem,android.graphics.Path,float,float)
    public static android.graphics.Path buildRealClearPath(float,float,com.eptonic.photocollage.ui.view.template.PhotoItem,android.graphics.Path,float)
    public void restoreInstanceState(android.os.Bundle)
    public void swapImage(com.eptonic.photocollage.ui.view.frame.FrameImageView)
    public void init(float,float,float,float,float)
    public void recycleImage()
    public boolean isSelected(float,float)
androidx.appcompat.widget.AppCompatDrawableManager$1:
    public android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)
    public boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)
    public boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)
    public android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int)
    public final android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context)
    public final android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context)
    public final android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context)
    public final android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context)
com.google.android.material.appbar.HeaderBehavior:
    public final boolean fling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,float)
    public abstract void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
    public abstract int getMaxDragOffset(android.view.View)
    public abstract int getScrollRangeForDragFling(android.view.View)
    public final void ensureVelocityTracker()
com.google.android.material.transformation.FabTransformationBehavior:
    public abstract com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec onCreateMotionSpec(android.content.Context,boolean)
    public final void createElevationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List)
    public final void createDependencyTranslationAnimation(android.view.View,android.view.View,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List)
    public final void createTranslationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,android.graphics.RectF)
    public final void createIconFadeAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List)
    public final void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List)
    public final void createColorAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List)
    public final void createChildrenFadeAnimation(android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List)
    public final void calculateDependencyWindowBounds(android.view.View,android.graphics.RectF)
    public final float calculateRevealCenterX(android.view.View,android.view.View,com.google.android.material.animation.Positioning)
    public final float calculateRevealCenterY(android.view.View,android.view.View,com.google.android.material.animation.Positioning)
    public final void calculateChildVisibleBoundsAtEndOfExpansion(android.view.View,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,com.google.android.material.animation.MotionTiming,com.google.android.material.animation.MotionTiming,float,float,float,float,android.graphics.RectF)
    public final android.view.ViewGroup calculateChildContentContainer(android.view.View)
    public final int getBackgroundTint(android.view.View)
    public final void createPreFillRadialExpansion(android.view.View,long,int,int,float,java.util.List)
    public final void createPostFillRadialExpansion(android.view.View,long,long,long,int,int,float,java.util.List)
com.google.android.material.color.MaterialColors
com.eptonic.photocollage.ui.next.s.xx.xxx.yy.cc.activity.GalleryActivity:
    public void initToolBar()
    public void setTitle(java.lang.String)
    public void setFunction(int)
    public void addSelectPhotos(java.lang.String)
    public final void initView()
    public android.view.View mToolBar
com.google.android.material.textfield.CutoutDrawable:
    public boolean hasCutout()
    public void setCutout(android.graphics.RectF)
    public void removeCutout()
    public final void setPaintStyles()
    public final void preDraw(android.graphics.Canvas)
    public final void saveCanvasLayer(android.graphics.Canvas)
    public final void postDraw(android.graphics.Canvas)
    public final boolean useHardwareLayer(android.graphics.drawable.Drawable$Callback)
androidx.collection.SparseArrayCompat:
    public int indexOfValue(java.lang.Object)
    public void clear()
com.google.android.material.shape.MaterialShapeDrawable$2
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks
androidx.cardview.widget.RoundRectDrawable:
    public void setPadding(float,boolean,boolean)
    public float getPadding()
    public void setRadius(float)
    public float getRadius()
    public void setColor(android.content.res.ColorStateList)
    public android.content.res.ColorStateList getColor()
    public final void setBackground(android.content.res.ColorStateList)
    public final android.graphics.Paint mPaint
    public final android.graphics.RectF mBoundsF
    public final android.graphics.Rect mBoundsI
androidx.core.util.DebugUtils
com.bumptech.glide.load.model.ModelCache:
    public java.lang.Object get(java.lang.Object,int,int)
    public void put(java.lang.Object,int,int,java.lang.Object)
com.yd.photoeditor.actions.BaseAction$1:
    public varargs java.io.File doInBackground()
    public void onPostExecute(java.io.File)
com.bumptech.glide.load.engine.cache.MemorySizeCalculator:
    public static int getMaxSize(android.app.ActivityManager,float,float)
    public static boolean isLowMemoryDevice(android.app.ActivityManager)
    public int getMemoryCacheSize()
    public int getBitmapPoolSize()
    public int getArrayPoolSizeInBytes()
com.google.android.material.checkbox.MaterialCheckBox:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader:
    public com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int)
    public boolean handles(android.net.Uri)
com.bumptech.glide.load.engine.SourceGenerator:
    public boolean isCurrentRequest(com.bumptech.glide.load.model.ModelLoader$LoadData)
    public void onDataReadyInternal(com.bumptech.glide.load.model.ModelLoader$LoadData,java.lang.Object)
    public void onLoadFailedInternal(com.bumptech.glide.load.model.ModelLoader$LoadData,java.lang.Exception)
    public final void startNextLoad(com.bumptech.glide.load.model.ModelLoader$LoadData)
    public final boolean hasNextModelLoader()
    public final void cacheData(java.lang.Object)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition:
    public void <init>()
androidx.collection.LongSparseArray:
    public void <init>(int)
    public void delete(long)
    public void remove(long)
    public void removeAt(int)
    public long keyAt(int)
    public int indexOfKey(long)
androidx.core.graphics.drawable.WrappedDrawableState
com.google.android.material.animation.ChildrenAlphaProperty:
    public java.lang.Float get(android.view.ViewGroup)
    public void set(android.view.ViewGroup,java.lang.Float)
org.greenrobot.greendao.database.DatabaseOpenHelper:
    public void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)
    public org.greenrobot.greendao.database.Database wrap(android.database.sqlite.SQLiteDatabase)
    public void onOpen()
    public final android.content.Context context
    public final java.lang.String name
    public final int version
    public boolean loadSQLCipherNativeLibs
com.google.android.material.transformation.FabTransformationBehavior$4:
    public final synthetic com.google.android.material.transformation.FabTransformationBehavior this$0
androidx.core.view.ActionProvider$SubUiVisibilityListener
com.yd.photoeditor.adapter.CustomItemAdapter:
    public static synthetic com.yd.photoeditor.listener.OnBottomMenuItemClickListener access$000(com.yd.photoeditor.adapter.CustomItemAdapter)
    public void setData(java.util.ArrayList)
    public void setListener(com.yd.photoeditor.listener.OnBottomMenuItemClickListener)
    public com.yd.photoeditor.adapter.CustomItemAdapter$RViewHolder onCreateViewHolder(android.view.ViewGroup)
    public void onBindViewHolder(com.yd.photoeditor.adapter.CustomItemAdapter$RViewHolder,int)
    public com.yd.photoeditor.ui.activity.ImageProcessingActivity activity
androidx.appcompat.view.menu.MenuAdapter:
    public void setForceShowIcon(boolean)
    public androidx.appcompat.view.menu.MenuBuilder getAdapterMenu()
com.bumptech.glide.load.engine.EngineResource:
    public com.bumptech.glide.load.engine.Resource getResource()
    public boolean isMemoryCacheable()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState:
    public void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect)
    public boolean hasTranslucentRoot()
    public android.graphics.Paint getPaint(android.graphics.ColorFilter)
    public void createCachedBitmapIfNeeded(int,int)
    public boolean canReuseBitmap(int,int)
    public boolean canReuseCache()
    public void updateCacheStates()
    public boolean onStateChanged(int[])
com.google.android.material.snackbar.SnackbarContentLayout:
    public static void updateTopBottomPadding(android.view.View,int,int)
androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener:
    public abstract boolean onMenuItemClick(android.view.MenuItem)
com.google.android.material.internal.FlowLayout:
    public static int getMeasuredDimension(int,int,int)
com.google.android.material.shape.ShapePath$ShadowCompatOperation:
    public final void draw(com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas)
androidx.appcompat.view.SupportMenuInflater:
    public java.lang.Object getRealOwner()
androidx.appcompat.widget.TintTypedArray:
    public static androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[])
    public float getFloat(int,float)
    public int getInteger(int,int)
    public java.lang.CharSequence[] getTextArray(int)
    public void recycle()
com.eptonic.photocollage.ui.view.sticker.BitmapStickerIcon:
    public void draw(android.graphics.Canvas,android.graphics.Paint)
    public float getX()
    public void setX(float)
    public float getY()
    public void setY(float)
    public float getIconRadius()
    public void setIconEvent(com.eptonic.photocollage.ui.view.sticker.StickerIconEvent)
    public int getPosition()
    public float iconExtraRadius
com.eptonic.photocollage.ui.view.PhotoLayout$4:
    public final synthetic com.eptonic.photocollage.ui.view.PhotoLayout this$0
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$RandomAccessReader:
    public void order(java.nio.ByteOrder)
    public int length()
    public final boolean isAvailable(int,int)
androidx.core.graphics.PathParser$PathDataNode:
    public static void addCommand(android.graphics.Path,float[],char,char,float[])
    public static void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)
    public void interpolatePathDataNode(androidx.core.graphics.PathParser$PathDataNode,androidx.core.graphics.PathParser$PathDataNode,float)
com.eptonic.photocollage.resEncryption.AppExtResManager:
    public static long getVersionCode()
    public static long copyZipContent(java.util.zip.ZipFile,java.util.zip.ZipOutputStream,com.eptonic.photocollage.resEncryption.ExtResConfig)
    public static void <clinit>()
    public void init1(android.app.Application)
    public void tryDecodeFile()
    public final void initAssert()
    public final void modifyLoadedApk()
    public final void modifyMSplitResDirs(java.lang.Object)
    public final void modifyLoadedApkmResList(java.lang.Object)
    public boolean isInit
    public static int rv
androidx.appcompat.view.menu.MenuDialogHelper:
    public void show(android.os.IBinder)
    public void dismiss()
    public androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback
androidx.transition.Scene:
    public static void setCurrentScene(android.view.ViewGroup,androidx.transition.Scene)
    public static androidx.transition.Scene getCurrentScene(android.view.ViewGroup)
    public void exit()
    public android.view.ViewGroup mSceneRoot
    public java.lang.Runnable mExitAction
com.bumptech.glide.load.engine.LockedResource:
    public final void init(com.bumptech.glide.load.engine.Resource)
    public final void release()
com.eptonic.photocollage.ui.wrapper.dah.ghjf.gfhs.fhsj.ghsj.hfjsh.fhsj.fhsj.hfjs.fdj.sjhfs.fgsj.jgks.vbb.uiManager.FreePhotoUiManager$8:
    public varargs java.io.File doInBackground()
    public void onPostExecute(java.io.File)
com.bumptech.glide.TransitionOptions:
    public final com.bumptech.glide.request.transition.TransitionFactory getTransitionFactory()
androidx.lifecycle.Lifecycling:
    public static java.lang.reflect.Constructor generatedConstructor(java.lang.Class)
    public static int resolveObserverCallbackType(java.lang.Class)
    public static boolean isLifecycleParent(java.lang.Class)
androidx.lifecycle.FullLifecycleObserverAdapter$1
androidx.transition.ViewUtilsApi22:
    public static void <clinit>()
androidx.appcompat.app.TwilightCalculator:
    public static androidx.appcompat.app.TwilightCalculator getInstance()
com.bumptech.glide.disklrucache.StrictLineReader:
    public void <init>(java.io.InputStream,int,java.nio.charset.Charset)
    public static synthetic java.nio.charset.Charset access$000(com.bumptech.glide.disklrucache.StrictLineReader)
    public boolean hasUnterminatedLine()
androidx.appcompat.graphics.drawable.StateListDrawable:
    public int[] extractStateSet(android.util.AttributeSet)
com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory:
    public void <init>(android.content.Context,java.lang.String,long)
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator:
    public com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo evaluate(float,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
com.bumptech.glide.load.model.ModelCache$ModelKey:
    public final void init(java.lang.Object,int,int)
androidx.core.app.ActivityCompat$PermissionCompatDelegate:
    public abstract boolean onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.eptonic.photocollage.ui.next.s.xx.xxx.yy.cc.activity.PCBaseTemplateDetailActivity:
    public int[] calculateThumbnailSize(int,int)
    public void resultSticker(android.net.Uri)
    public void resultStickers(android.net.Uri[])
    public void resultStickerDrawable(int)
    public final void loadFrameImages(boolean)
    public final void createQuickAction()
    public final void asyncSaveAndShare()
    public final int getPhotoViewWidth()
    public final int getPhotoViewHeight()
    public int mItemType
    public com.eptonic.photocollage.ui.quickAction.QuickAction mStickerQuickAction
androidx.core.widget.ImageViewCompat
androidx.appcompat.widget.AppCompatTextHelper:
    public void setTypefaceByCallback(android.graphics.Typeface)
    public void runOnUiThread(java.lang.Runnable)
    public void setAllCaps(boolean)
    public void onSetCompoundDrawables()
    public void onLayout()
    public void setTextSize(int,float)
    public void autoSizeText()
    public int getAutoSizeTextType()
    public int getAutoSizeStepGranularity()
    public int getAutoSizeMinTextSize()
    public int getAutoSizeMaxTextSize()
    public int[] getAutoSizeTextAvailableSizes()
    public android.content.res.ColorStateList getCompoundDrawableTintList()
    public void setCompoundDrawableTintList(android.content.res.ColorStateList)
    public android.graphics.PorterDuff$Mode getCompoundDrawableTintMode()
    public void setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode)
    public final void setTextSizeInternal(int,float)
    public final void setCompoundTints()
    public final void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath:
    public void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)
    public final android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap)
    public final android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join)
    public final void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
com.bumptech.glide.load.engine.cache.SafeKeyGenerator:
    public final java.lang.String calculateHexStringDigest(com.bumptech.glide.load.Key)
androidx.appcompat.widget.TooltipCompatHandler:
    public static void setTooltipText(android.view.View,java.lang.CharSequence)
    public final void scheduleShow()
    public final void cancelPendingShow()
    public final boolean updateAnchorPos(android.view.MotionEvent)
com.bumptech.glide.GlideContext:
    public java.util.List getDefaultRequestListeners()
    public com.bumptech.glide.TransitionOptions getDefaultTransitionOptions(java.lang.Class)
    public com.bumptech.glide.request.target.ViewTarget buildImageViewTarget(android.widget.ImageView,java.lang.Class)
    public com.bumptech.glide.load.engine.Engine getEngine()
    public com.bumptech.glide.Registry getRegistry()
    public int getLogLevel()
    public com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool getArrayPool()
    public boolean isLoggingRequestOriginsEnabled()
androidx.constraintlayout.solver.widgets.Analyzer
androidx.appcompat.graphics.drawable.DrawableContainer:
    public boolean onStateChange(int[])
    public int getCurrentIndex()
    public final void updateDensity(android.content.res.Resources)
    public void applyTheme(android.content.res.Resources$Theme)
    public final boolean needsMirroring()
    public int mLastIndex
androidx.constraintlayout.solver.widgets.Snapshot:
    public void updateFrom(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public void applyTo(androidx.constraintlayout.solver.widgets.ConstraintWidget)
com.bumptech.glide.util.pool.FactoryPools$3:
    public void reset(java.util.List)
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy
androidx.constraintlayout.solver.widgets.ResolutionNode:
    public void addDependent(androidx.constraintlayout.solver.widgets.ResolutionNode)
    public void reset()
com.bumptech.glide.manager.RequestTracker:
    public void runRequest(com.bumptech.glide.request.Request)
    public void pauseRequests()
    public void pauseAllRequests()
    public void resumeRequests()
    public void clearRequests()
    public void restartRequests()
com.eptonic.photocollage.presenter.listener.DoubleClickDetector:
    public void setTouchAreaInterval(float)
    public boolean doubleClick(android.view.MotionEvent)
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream:
    public void <init>(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,int)
androidx.customview.widget.ViewDragHelper:
    public static androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback)
    public static androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback)
    public int getTouchSlop()
    public boolean smoothSlideViewTo(android.view.View,int,int)
    public boolean isPointerDown(int)
    public boolean isCapturedViewUnder(int,int)
    public boolean isViewUnder(android.view.View,int,int)
    public final int computeSettleDuration(android.view.View,int,int,int,int)
    public final float distanceInfluenceForSnapDuration(float)
    public final void clearMotionHistory()
    public final void ensureMotionHistorySizeForId(int)
    public final void dragTo(int,int,int,int)
    public final int getEdgesTouched(int,int)
    public int mTrackingEdges
androidx.cardview.widget.RoundRectDrawableWithShadow:
    public void setAddPaddingForCorners(boolean)
    public void setAlpha(int)
    public void onBoundsChange(android.graphics.Rect)
    public boolean getPadding(android.graphics.Rect)
    public boolean onStateChange(int[])
    public boolean isStateful()
    public void setColorFilter(android.graphics.ColorFilter)
    public int getOpacity()
    public void setCornerRadius(float)
    public void draw(android.graphics.Canvas)
    public float getCornerRadius()
    public void getMaxShadowAndCornerPadding(android.graphics.Rect)
    public void setShadowSize(float)
    public void setMaxShadowSize(float)
    public float getShadowSize()
    public float getMaxShadowSize()
    public float getMinWidth()
    public float getMinHeight()
    public void setColor(android.content.res.ColorStateList)
    public android.content.res.ColorStateList getColor()
    public final void setBackground(android.content.res.ColorStateList)
    public final int toEven(float)
    public final void setShadowSize(float,float)
    public final void drawShadow(android.graphics.Canvas)
    public final void buildShadowCorners()
    public final void buildComponents(android.graphics.Rect)
    public final int mInsetShadow
    public android.graphics.Paint mPaint
    public android.graphics.Paint mCornerShadowPaint
    public android.graphics.Paint mEdgeShadowPaint
    public final android.graphics.RectF mCardBounds
    public float mCornerRadius
    public android.graphics.Path mCornerShadowPath
    public float mRawMaxShadowSize
    public float mShadowSize
    public float mRawShadowSize
    public android.content.res.ColorStateList mBackground
    public boolean mDirty
    public final int mShadowStartColor
    public final int mShadowEndColor
    public boolean mAddPaddingForCorners
    public boolean mPrintedShadowClipWarning
    public static androidx.cardview.widget.RoundRectDrawableWithShadow$RoundRectHelper sRoundRectHelper
com.bumptech.glide.provider.LoadPathCache:
    public boolean isEmptyLoadPath(com.bumptech.glide.load.engine.LoadPath)
    public final com.bumptech.glide.util.MultiClassKey getKey(java.lang.Class,java.lang.Class,java.lang.Class)
androidx.appcompat.widget.LinearLayoutCompat:
    public void drawDividersVertical(android.graphics.Canvas)
    public void drawDividersHorizontal(android.graphics.Canvas)
    public android.view.View getVirtualChildAt(int)
    public void measureVertical(int,int)
    public void measureHorizontal(int,int)
    public int getChildrenSkipCount()
    public int measureNullChild()
    public void measureChildBeforeLayout(android.view.View,int,int,int,int)
    public int getLocationOffset()
    public int getNextLocationOffset()
    public void layoutVertical(int,int,int,int)
    public void layoutHorizontal(int,int,int,int)
    public final void forceUniformWidth(int,int)
    public final void forceUniformHeight(int,int)
    public final void setChildFrame(android.view.View,int,int,int,int)
androidx.transition.ChangeBounds$3:
    public void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF)
    public android.graphics.PointF get()
androidx.recyclerview.widget.RecyclerView$4:
    public void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat:
    public void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState()
    public final boolean selectTransition(int)
    public final void updateStateFromTypedArray(android.content.res.TypedArray)
    public final void init()
    public final void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public final int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public final int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public static final java.lang.String LOGTAG
com.eptonic.photocollage.ui.mutitouchh.MultiTouchEntity:
    public static boolean contains(java.util.List,android.graphics.PointF)
    public abstract void draw(android.graphics.Canvas)
    public abstract void load(android.content.Context)
    public abstract void load(android.content.Context,float,float)
    public abstract void unload()
    public boolean setPos(com.eptonic.photocollage.ui.mutitouchh.MultiTouchController$PositionAndScale)
    public float[] calculateHalfDrawableSize(float,float)
    public boolean contain(float,float)
    public int getWidth()
    public int getHeight()
    public float getCenterX()
    public float getCenterY()
    public float getScaleX()
    public float getScaleY()
    public float getAngle()
    public void readFromParcel(android.os.Parcel)
    public transient android.graphics.Paint mPaint
com.bumptech.glide.manager.ConnectivityMonitorFactory:
    public abstract com.bumptech.glide.manager.ConnectivityMonitor build(android.content.Context,com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener)
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams:
    public int getAnchorId()
    public androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
    public void setBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior)
    public void setLastChildRect(android.graphics.Rect)
    public android.graphics.Rect getLastChildRect()
    public boolean checkAnchorChanged()
    public boolean didBlockInteraction()
    public boolean isBlockingInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
    public void resetTouchBehaviorTracking()
    public void resetNestedScroll(int)
    public boolean getChangedAfterNestedScroll()
    public void setChangedAfterNestedScroll(boolean)
    public void resetChangedAfterNestedScroll()
    public boolean dependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)
    public android.view.View findAnchorView(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
    public final void resolveAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout)
    public final boolean verifyAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout)
    public final boolean shouldDodge(android.view.View,int)
    public java.lang.Object mBehaviorTag
com.yd.photoeditor.imageprocessing.filter.colour.P3
androidx.transition.ViewGroupOverlayApi14
com.eptonic.photocollage.presenter.listener.RecyclerItemClickListener$OnItemClickListener:
    public abstract void onItemClick(android.view.View,int)
    public abstract void onLongItemClick(android.view.View,int)
androidx.core.graphics.PathParser$ExtractFloatResult
androidx.cardview.widget.CardViewApi17Impl$1
com.google.android.material.canvas.CanvasCompat
androidx.core.provider.SelfDestructiveThread:
    public void postAndReply(java.util.concurrent.Callable,androidx.core.provider.SelfDestructiveThread$ReplyCallback)
com.bumptech.glide.load.resource.gif.GifFrameLoader$OnEveryFrameListener
androidx.appcompat.widget.ContentFrameLayout:
    public void setDecorPadding(int,int,int,int)
androidx.appcompat.widget.AppCompatTextClassifierHelper:
    public void setTextClassifier(android.view.textclassifier.TextClassifier)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener:
    public abstract void onShown()
    public abstract void onHidden()
androidx.appcompat.app.TwilightManager:
    public static androidx.appcompat.app.TwilightManager getInstance(android.content.Context)
    public boolean isNight()
    public final android.location.Location getLastKnownLocation()
    public final boolean isStateValid()
    public final void updateState(android.location.Location)
com.bumptech.glide.load.resource.bitmap.VideoDecoder$ByteBufferInitializer:
    public void initialize(android.media.MediaMetadataRetriever,java.nio.ByteBuffer)
com.google.android.material.shape.ShapeAppearancePathProvider$PathListener:
    public abstract void onCornerPathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int)
    public abstract void onEdgePathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int)
androidx.transition.ChangeBounds:
    public final boolean parentMatches(android.view.View,android.view.View)
com.bumptech.glide.load.engine.DiskCacheStrategy$4
androidx.appcompat.widget.VectorEnabledTintResources:
    public void <init>(android.content.Context,android.content.res.Resources)
    public static boolean isCompatVectorFromResourcesEnabled()
    public static void <clinit>()
    public android.graphics.drawable.Drawable getDrawable(int)
    public final android.graphics.drawable.Drawable superGetDrawable(int)
    public final java.lang.ref.WeakReference mContextRef
    public static boolean sCompatVectorFromResourcesEnabled
androidx.constraintlayout.solver.widgets.Snapshot$Connection:
    public void updateFrom(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public void applyTo(androidx.constraintlayout.solver.widgets.ConstraintWidget)
com.google.android.material.resources.CancelableFontCallback:
    public void cancel()
androidx.collection.MapCollections$MapIterator:
    public java.util.Map$Entry next()
com.eptonic.photocollage.ui.quickAction.QuickActionItem
androidx.cursoradapter.widget.ResourceCursorAdapter:
    public android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
androidx.constraintlayout.solver.widgets.Barrier:
    public void setBarrierType(int)
    public void setAllowsGoneWidget(boolean)
com.eptonic.photocollage.ui.view.frame.TwoFrameImage
com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource:
    public android.graphics.drawable.BitmapDrawable get()
androidx.core.widget.ListViewAutoScrollHelper:
    public void scrollTargetBy(int,int)
    public boolean canTargetScrollHorizontally(int)
    public boolean canTargetScrollVertically(int)
com.bumptech.glide.load.engine.cache.MemorySizeCalculator$DisplayMetricsScreenDimensions:
    public int getWidthPixels()
    public int getHeightPixels()
androidx.arch.core.executor.ArchTaskExecutor:
    public static void <clinit>()
    public void executeOnDiskIO(java.lang.Runnable)
    public void postToMainThread(java.lang.Runnable)
    public static final java.util.concurrent.Executor sMainThreadExecutor
    public static final java.util.concurrent.Executor sIOThreadExecutor
androidx.activity.ComponentActivity$NonConfigurationInstances:
    public java.lang.Object custom
org.greenrobot.greendao.AbstractDao:
    public java.lang.String getTablename()
    public java.lang.String[] getAllColumns()
    public java.util.List loadAllAndCloseCursor(android.database.Cursor)
    public long insert(java.lang.Object)
    public void updateKeyAfterInsertAndAttach(java.lang.Object,long,boolean)
    public org.greenrobot.greendao.query.QueryBuilder queryBuilder()
    public final void attachEntity(java.lang.Object,java.lang.Object,boolean)
    public void attachEntity()
    public org.greenrobot.greendao.database.Database getDatabase()
    public abstract java.lang.Object readKey(android.database.Cursor,int)
    public abstract void bindValues(org.greenrobot.greendao.database.DatabaseStatement,java.lang.Object)
    public abstract void bindValues(android.database.sqlite.SQLiteStatement,java.lang.Object)
    public abstract java.lang.Object updateKeyAfterInsert(java.lang.Object,long)
    public final long executeInsert(java.lang.Object,org.greenrobot.greendao.database.DatabaseStatement,boolean)
    public final android.database.CursorWindow moveToNextUnlocked(android.database.Cursor)
    public final org.greenrobot.greendao.AbstractDaoSession session
com.bumptech.glide.provider.ResourceEncoderRegistry$Entry:
    public boolean handles(java.lang.Class)
com.google.android.material.datepicker.MonthAdapter:
    public android.widget.TextView getView(int,android.view.View,android.view.ViewGroup)
    public int positionToDay(int)
    public int dayToPosition(int)
    public boolean withinMonth(int)
    public boolean isFirstInRow(int)
    public boolean isLastInRow(int)
    public final void initializeStyles(android.content.Context)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior:
    public static boolean isBottomSheet(android.view.View)
    public boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.view.View)
    public boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,int)
    public boolean getInsetDodgeRect(com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.Rect)
    public final void offsetIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton)
    public com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener internalAutoHideListener
androidx.transition.ViewUtilsBase:
    public final void fetchSetFrame()
    public static java.lang.reflect.Method sSetFrameMethod
    public static boolean sSetFrameFetched
androidx.appcompat.widget.AppCompatPopupWindow:
    public static void <clinit>()
    public final void init(android.content.Context,android.util.AttributeSet,int,int)
    public final void setSupportOverlapAnchor(boolean)
    public boolean mOverlapAnchor
    public static final boolean COMPAT_OVERLAP_ANCHOR
androidx.transition.TransitionPropagation:
    public abstract long getStartDelay(android.view.ViewGroup,androidx.transition.Transition,androidx.transition.TransitionValues,androidx.transition.TransitionValues)
    public abstract void captureValues(androidx.transition.TransitionValues)
    public abstract java.lang.String[] getPropagationProperties()
androidx.transition.ViewUtilsApi19:
    public static void <clinit>()
com.bumptech.glide.load.resource.bitmap.BitmapDrawableEncoder:
    public boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options)
com.bumptech.glide.load.model.StreamEncoder:
    public boolean encode(java.io.InputStream,java.io.File)
com.google.android.material.internal.CheckableImageButton$SavedState$1:
    public com.google.android.material.internal.CheckableImageButton$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.internal.CheckableImageButton$SavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.internal.CheckableImageButton$SavedState[] newArray(int)
androidx.core.text.TextDirectionHeuristicsCompat:
    public static final androidx.core.text.TextDirectionHeuristicCompat ANYRTL_LTR
    public static final androidx.core.text.TextDirectionHeuristicCompat LOCALE
com.google.android.material.datepicker.MonthsPagerAdapter:
    public static synthetic com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener access$000(com.google.android.material.datepicker.MonthsPagerAdapter)
    public com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup)
    public void onBindViewHolder(com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder,int)
    public java.lang.CharSequence getPageTitle(int)
androidx.transition.ViewGroupUtils:
    public static androidx.transition.ViewGroupOverlayImpl getOverlay(android.view.ViewGroup)
    public static void hiddenSuppressLayout(android.view.ViewGroup,boolean)
    public static void <clinit>()
com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory$1:
    public java.nio.ByteBuffer convert(byte[])
    public final synthetic com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory this$0
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver:
    public void onChanged()
    public void onItemRangeInserted(int,int)
    public void triggerUpdateProcessor()
androidx.appcompat.app.AlertController$3
androidx.coordinatorlayout.widget.ViewGroupUtils:
    public static void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState:
    public void setupAnimatorSet()
com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory:
    public abstract com.bumptech.glide.RequestManager build(com.bumptech.glide.Glide,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode,android.content.Context)
com.google.android.material.datepicker.DaysOfWeekAdapter:
    public java.lang.Integer getItem(int)
    public final int positionToDayOfWeek(int)
com.bumptech.glide.load.engine.Engine:
    public void <init>(com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.cache.DiskCache$Factory,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.Jobs,com.bumptech.glide.load.engine.EngineKeyFactory,com.bumptech.glide.load.engine.ActiveResources,com.bumptech.glide.load.engine.Engine$EngineJobFactory,com.bumptech.glide.load.engine.Engine$DecodeJobFactory,com.bumptech.glide.load.engine.ResourceRecycler,boolean)
    public void onResourceRemoved(com.bumptech.glide.load.engine.Resource)
    public final com.bumptech.glide.load.engine.EngineResource loadFromActiveResources(com.bumptech.glide.load.Key)
    public final com.bumptech.glide.load.engine.EngineResource loadFromCache(com.bumptech.glide.load.Key)
    public final com.bumptech.glide.load.engine.EngineResource getEngineResourceFromCache(com.bumptech.glide.load.Key)
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$AtLeast
com.google.android.material.bottomappbar.BottomAppBar$SavedState$1:
    public com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.bottomappbar.BottomAppBar$SavedState[] newArray(int)
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments:
    public void setBundle(android.os.Bundle)
    public android.os.Bundle mBundle
    public static final android.os.Bundle sEmptyBundle
androidx.appcompat.widget.SearchView$SavedState$1:
    public androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel)
    public androidx.appcompat.widget.SearchView$SavedState[] newArray(int)
androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener:
    public void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.constraintlayout.solver.Pools$Pool
androidx.transition.TransitionSet:
    public int getTransitionCount()
    public androidx.transition.TransitionSet setDuration(long)
    public androidx.transition.TransitionSet setStartDelay(long)
    public androidx.transition.TransitionSet setInterpolator(android.animation.TimeInterpolator)
    public androidx.transition.TransitionSet addTarget(android.view.View)
    public androidx.transition.TransitionSet addListener(androidx.transition.Transition$TransitionListener)
    public androidx.transition.TransitionSet removeTarget(android.view.View)
    public androidx.transition.TransitionSet removeListener(androidx.transition.Transition$TransitionListener)
    public final void addTransitionInternal(androidx.transition.Transition)
    public final void setupStartEndListeners()
androidx.lifecycle.LifecycleRegistry$1
com.eptonic.photocollage.ui.next.s.xx.xxx.yy.cc.activity.FrameActivity:
    public final void gotoAppSetting()
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3:
    public final synthetic androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer this$1
androidx.appcompat.widget.TintResources:
    public void <init>(android.content.Context,android.content.res.Resources)
    public android.graphics.drawable.Drawable getDrawable(int)
    public final java.lang.ref.WeakReference mContextRef
androidx.recyclerview.widget.RecyclerView$Recycler:
    public void setViewCacheSize(int)
    public java.util.List getScrapList()
    public boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public android.view.View getViewForPosition(int)
    public android.view.View getViewForPosition(int,boolean)
    public void quickRecycleScrapView(android.view.View)
    public int getScrapCount()
    public android.view.View getScrapViewAt(int)
    public void clearScrap()
    public androidx.recyclerview.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int)
    public androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean)
    public androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean)
    public void dispatchViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean)
    public void offsetPositionRecordsForMove(int,int)
    public void offsetPositionRecordsForInsert(int,int)
    public void offsetPositionRecordsForRemove(int,int,boolean)
    public void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
    public void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
    public void viewRangeUpdate(int,int)
    public void markKnownViewsInvalid()
    public void clearOldPositions()
    public void markItemDecorInsetsDirty()
    public final boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long)
    public final void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void invalidateDisplayListInt(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public androidx.recyclerview.widget.RecyclerView$ViewCacheExtension mViewCacheExtension
com.eptonic.photocollage.ui.view.sticker.StickerUtils
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool:
    public void <init>(long,com.bumptech.glide.load.engine.bitmap_recycle.LruPoolStrategy,java.util.Set)
    public static android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)
    public static void assertNotHardwareConfig(android.graphics.Bitmap$Config)
    public static void normalize(android.graphics.Bitmap)
    public static void maybeSetPreMultiplied(android.graphics.Bitmap)
    public static com.bumptech.glide.load.engine.bitmap_recycle.LruPoolStrategy getDefaultStrategy()
    public static java.util.Set getDefaultAllowedConfigs()
    public long getMaxSize()
    public final void evict()
    public final long initialMaxSize
com.bumptech.glide.load.engine.bitmap_recycle.IntegerArrayAdapter:
    public int getArrayLength(int[])
    public int[] newArray(int)
com.yd.photoeditor.config.PLog
com.google.android.material.datepicker.MaterialCalendarGridView$1:
    public final synthetic com.google.android.material.datepicker.MaterialCalendarGridView this$0
com.yd.photoeditor.adapter.CustomItemAdapter$RViewHolder:
    public final synthetic com.yd.photoeditor.adapter.CustomItemAdapter this$0
com.google.android.material.circularreveal.CircularRevealFrameLayout:
    public final com.google.android.material.circularreveal.CircularRevealHelper helper
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo:
    public android.widget.ListView getListView()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel:
    public static androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)
    public void markForRedelivery()
    public void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
    public boolean mCreatingLoader
com.eptonic.photocollage.ui.view.PhotoLayout$3
androidx.constraintlayout.solver.widgets.WidgetContainer:
    public void add(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public void remove(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer getRootConstraintContainer()
    public void removeAllChildren()
androidx.appcompat.widget.ActionMenuView:
    public boolean isOverflowReserved()
    public androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet)
    public androidx.appcompat.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams()
    public void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
    public androidx.appcompat.view.menu.MenuBuilder peekMenu()
    public boolean showOverflowMenu()
    public boolean hideOverflowMenu()
    public boolean isOverflowMenuShowing()
    public boolean isOverflowMenuShowPending()
    public void dismissPopupMenus()
    public final void onMeasureExactFormat(int,int)
com.eptonic.photocollage.ui.mutitouchh.MultiTouchController$PositionAndScale:
    public void set(float,float,boolean,float,boolean,float,float,boolean,float)
    public void set(float,float,float,float,float,float)
    public float getXOff()
    public float getYOff()
    public float getScale()
    public float getScaleX()
    public float getScaleY()
    public float getAngle()
com.bumptech.glide.disklrucache.DiskLruCache$Value:
    public void <init>(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String,long,java.io.File[],long[])
    public java.io.File getFile(int)
    public final java.lang.String key
    public final long sequenceNumber
    public final long[] lengths
    public final synthetic com.bumptech.glide.disklrucache.DiskLruCache this$0
com.yd.photoeditor.imageprocessing.filter.ImageRender$10:
    public final synthetic com.yd.photoeditor.imageprocessing.filter.ImageRender this$0
androidx.recyclerview.widget.ViewInfoStore:
    public void clear()
    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void addToOldChangeHolders(long,androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void addToAppearedInPreLayoutHolders(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public boolean isInPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public androidx.recyclerview.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long)
    public void process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback)
    public void onDetach()
    public void onViewDetached(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.bumptech.glide.manager.SupportRequestManagerFragment$SupportFragmentRequestManagerTreeNode:
    public java.util.Set getDescendants()
com.google.android.material.card.MaterialCardViewHelper
com.bumptech.glide.load.model.FileLoader$StreamFactory$1:
    public java.io.InputStream open(java.io.File)
    public void close(java.io.InputStream)
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$BitmapTracker:
    public abstract void add(android.graphics.Bitmap)
    public abstract void remove(android.graphics.Bitmap)
com.eptonic.photocollage.util.ImageUtils$MemoryInfo:
    public long availMem
androidx.lifecycle.ClassesInfoCache$CallbackInfo:
    public void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)
com.google.android.material.chip.ChipGroup:
    public static synthetic boolean access$300(com.google.android.material.chip.ChipGroup)
    public static synthetic int access$400(com.google.android.material.chip.ChipGroup)
    public static synthetic boolean access$500(com.google.android.material.chip.ChipGroup)
    public static synthetic void access$600(com.google.android.material.chip.ChipGroup,int,boolean)
    public static synthetic com.google.android.material.chip.ChipGroup$CheckedStateTracker access$800(com.google.android.material.chip.ChipGroup)
    public void clearCheck()
androidx.recyclerview.widget.LinearSmoothScroller:
    public void onStart()
    public void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
    public void onStop()
    public int calculateTimeForDeceleration(int)
    public int getHorizontalSnapPreference()
    public int getVerticalSnapPreference()
    public void updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
    public int calculateDyToMakeVisible(android.view.View,int)
    public int calculateDxToMakeVisible(android.view.View,int)
    public final float getSpeedPerPixel()
    public final int clampApplyScroll(int,int)
com.bumptech.glide.util.pool.FactoryPools$2:
    public java.util.List create()
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key:
    public void init(int,java.lang.Class)
com.google.android.material.appbar.AppBarLayout$LayoutParams:
    public int getScrollFlags()
    public android.view.animation.Interpolator getScrollInterpolator()
    public boolean isCollapsible()
androidx.appcompat.widget.Toolbar$1:
    public boolean onMenuItemClick(android.view.MenuItem)
com.bumptech.glide.load.engine.DecodeJob$1
com.bumptech.glide.load.engine.EngineJob:
    public void <init>(com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.EngineJobListener,com.bumptech.glide.load.engine.EngineResource$ResourceListener,androidx.core.util.Pools$Pool,com.bumptech.glide.load.engine.EngineJob$EngineResourceFactory)
    public void callCallbackOnResourceReady(com.bumptech.glide.request.ResourceCallback)
    public void callCallbackOnLoadFailed(com.bumptech.glide.request.ResourceCallback)
    public boolean onlyRetrieveFromCache()
    public void cancel()
    public final com.bumptech.glide.load.engine.executor.GlideExecutor getActiveSourceExecutor()
androidx.constraintlayout.solver.widgets.ResolutionAnchor:
    public void setType(int)
    public void update()
    public void setOpposite(androidx.constraintlayout.solver.widgets.ResolutionAnchor,float)
    public void setOpposite(androidx.constraintlayout.solver.widgets.ResolutionAnchor,int,androidx.constraintlayout.solver.widgets.ResolutionDimension)
    public float getResolvedValue()
    public float computedValue
    public float oppositeOffset
com.bumptech.glide.MemoryCategory:
    public final float multiplier
com.yd.photoeditor.imageprocessing.filter.ImageRender$4:
    public final synthetic com.yd.photoeditor.imageprocessing.filter.ImageRender this$0
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback:
    public abstract androidx.appcompat.view.menu.ShowableListMenu getPopup()
androidx.recyclerview.widget.SimpleItemAnimator:
    public boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public abstract boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public abstract boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
    public final void dispatchRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void dispatchAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void dispatchChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean)
    public final void dispatchRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void dispatchMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void dispatchAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void dispatchChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean)
    public void onRemoveStarting()
    public void onRemoveFinished()
    public void onAddStarting()
    public void onAddFinished()
    public void onMoveStarting()
    public void onMoveFinished()
    public void onChangeStarting()
    public void onChangeFinished()
androidx.core.provider.FontsContractCompat$5:
    public int compare(byte[],byte[])
androidx.core.view.accessibility.AccessibilityNodeProviderCompat:
    public java.lang.Object getProvider()
    public java.util.List findAccessibilityNodeInfosByText()
androidx.fragment.app.Fragment$OnStartEnterTransitionListener:
    public abstract void onStartEnterTransition()
    public abstract void startListening()
com.google.android.material.transformation.FabTransformationBehavior$3:
    public final synthetic com.google.android.material.transformation.FabTransformationBehavior this$0
com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener
com.bumptech.glide.request.target.ImageViewTargetFactory:
    public com.bumptech.glide.request.target.ViewTarget buildTarget(android.widget.ImageView,java.lang.Class)
com.bumptech.glide.disklrucache.DiskLruCache$Entry:
    public void <init>(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String)
    public static synthetic boolean access$702(com.bumptech.glide.disklrucache.DiskLruCache$Entry,boolean)
    public static synthetic com.bumptech.glide.disklrucache.DiskLruCache$Editor access$802(com.bumptech.glide.disklrucache.DiskLruCache$Entry,com.bumptech.glide.disklrucache.DiskLruCache$Editor)
    public static synthetic void access$900(com.bumptech.glide.disklrucache.DiskLruCache$Entry,java.lang.String[])
    public static synthetic com.bumptech.glide.disklrucache.DiskLruCache$Editor access$800(com.bumptech.glide.disklrucache.DiskLruCache$Entry)
    public static synthetic long[] access$1100(com.bumptech.glide.disklrucache.DiskLruCache$Entry)
    public static synthetic java.lang.String access$1200(com.bumptech.glide.disklrucache.DiskLruCache$Entry)
    public static synthetic boolean access$700(com.bumptech.glide.disklrucache.DiskLruCache$Entry)
    public static synthetic long access$1300(com.bumptech.glide.disklrucache.DiskLruCache$Entry)
    public static synthetic long access$1302(com.bumptech.glide.disklrucache.DiskLruCache$Entry,long)
    public java.io.File getCleanFile(int)
    public java.io.File getDirtyFile(int)
    public final void setLengths(java.lang.String[])
androidx.appcompat.app.AlertDialog$Builder:
    public void <init>(android.content.Context,int)
    public android.content.Context getContext()
    public androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence)
    public androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View)
    public androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable)
    public androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener)
    public androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener)
androidx.constraintlayout.widget.ConstraintHelper:
    public void updatePostLayout()
    public void updatePostMeasure()
androidx.loader.app.LoaderManagerImpl$LoaderObserver:
    public boolean hasDeliveredData()
    public void reset()
    public void dump(java.lang.String,java.io.PrintWriter)
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher:
    public final com.bumptech.glide.load.model.ModelLoader$LoadData buildDelegateData()
    public final java.io.File queryForFilePath(android.net.Uri)
    public final boolean isAccessMediaLocationGranted()
androidx.core.graphics.TypefaceCompatBaseImpl:
    public static java.lang.Object findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor)
    public static long getUniqueKey(android.graphics.Typeface)
    public androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry getFontFamily(android.graphics.Typeface)
    public final androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry findBestEntry(androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int)
    public final void addFontFamily(android.graphics.Typeface,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry)
com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback
androidx.fragment.app.FragmentManagerImpl$1:
    public void handleOnBackPressed()
com.bumptech.glide.load.resource.file.FileResource:
    private final java.lang.Object get$com$bumptech$glide$load$resource$SimpleResource()
    private final int getSize$com$bumptech$glide$load$resource$SimpleResource()
    private void constructor$com$bumptech$glide$load$resource$SimpleResource(java.lang.Object)
    private java.lang.Class getResourceClass$com$bumptech$glide$load$resource$SimpleResource()
    private void recycle$com$bumptech$glide$load$resource$SimpleResource()
androidx.recyclerview.widget.RecyclerView$ViewHolder:
    public void flagRemovedAndOffsetPosition(int,int,boolean)
    public void saveOldPosition()
    public final int getOldPosition()
    public final long getItemId()
    public final int getItemViewType()
    public void unScrap()
    public void clearTmpDetachFlag()
    public void setScrapContainer(androidx.recyclerview.widget.RecyclerView$Recycler,boolean)
    public boolean needsUpdate()
    public boolean isAdapterPositionUnknown()
    public void clearPayload()
    public void onEnteredHiddenState(androidx.recyclerview.widget.RecyclerView)
    public void onLeftHiddenState(androidx.recyclerview.widget.RecyclerView)
    public boolean shouldBeKeptAsChild()
    public boolean doesTransientStatePreventRecycling()
    public final void createPayloadsIfNeeded()
androidx.constraintlayout.solver.widgets.Optimizer:
    public static void checkMatchParent(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public static void analyze(int,androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public static boolean applyChainOptimized(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,int,int,androidx.constraintlayout.solver.widgets.ChainHead)
androidx.fragment.app.FragmentContainer:
    public androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)
com.bumptech.glide.load.data.HttpUrlFetcher$DefaultHttpUrlConnectionFactory:
    public java.net.HttpURLConnection build(java.net.URL)
androidx.cardview.widget.CardViewApi17Impl
androidx.lifecycle.LifecycleRegistry:
    public static androidx.lifecycle.Lifecycle$Event downEvent(androidx.lifecycle.Lifecycle$State)
    public void markState(androidx.lifecycle.Lifecycle$State)
    public void setCurrentState(androidx.lifecycle.Lifecycle$State)
    public void removeObserver(androidx.lifecycle.LifecycleObserver)
    public androidx.lifecycle.Lifecycle$State getCurrentState()
    public final boolean isSynced()
    public final void pushParentState(androidx.lifecycle.Lifecycle$State)
    public final void forwardPass(androidx.lifecycle.LifecycleOwner)
    public final void backwardPass(androidx.lifecycle.LifecycleOwner)
com.bumptech.glide.load.data.AssetFileDescriptorLocalUriFetcher:
    public android.content.res.AssetFileDescriptor loadResource(android.net.Uri,android.content.ContentResolver)
    public void close(android.content.res.AssetFileDescriptor)
com.bumptech.glide.load.model.FileLoader:
    public com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.io.File)
    public boolean handles()
androidx.appcompat.widget.ActionBarContextView:
    public void closeMode()
    public boolean showOverflowMenu()
    public boolean isTitleOptional()
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty:
    public com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo get(com.google.android.material.circularreveal.CircularRevealWidget)
    public void set(com.google.android.material.circularreveal.CircularRevealWidget,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
androidx.fragment.app.FragmentHostCallback:
    public void <init>(android.app.Activity,android.content.Context,android.os.Handler,int)
    public void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
    public boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment)
    public android.view.LayoutInflater onGetLayoutInflater()
    public abstract java.lang.Object onGetHost()
    public void onSupportInvalidateOptionsMenu()
    public boolean onHasWindowAnimations()
    public int onGetWindowAnimations()
    public android.view.View onFindViewById(int)
    public boolean onHasView()
    public android.app.Activity getActivity()
    public android.content.Context getContext()
    public android.os.Handler getHandler()
    public void onAttachFragment(androidx.fragment.app.Fragment)
com.eptonic.photocollage.model.TemplateItem:
    private java.lang.String getTemplate$com$eptonic$photocollage$model$ImageTemplate()
    private void setTemplate$com$eptonic$photocollage$model$ImageTemplate(java.lang.String)
    private void constructor$com$eptonic$photocollage$model$ImageTemplate()
    private void setPreview$com$eptonic$photocollage$model$ImageTemplate(java.lang.String)
    private java.lang.String getPreview$com$eptonic$photocollage$model$ImageTemplate()
    public java.lang.String getHeader()
    public java.util.List getPhotoItemList()
    public void setTemplate(java.lang.String)
    public java.lang.String getPreview()
    public java.lang.String getTemplate()
    public void setPreview(java.lang.String)
    public java.lang.String mHeader
    public boolean mIsAds
    public boolean mIsHeader
com.eptonic.photocollage.ui.view.HorizontalPreviewTemplateAdapter:
    public com.eptonic.photocollage.ui.view.HorizontalPreviewTemplateAdapter$PreviewTemplateViewHolder onCreateViewHolder(android.view.ViewGroup)
    public void onBindViewHolder(com.eptonic.photocollage.ui.view.HorizontalPreviewTemplateAdapter$PreviewTemplateViewHolder,int)
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback:
    public androidx.appcompat.view.menu.ShowableListMenu getPopup()
androidx.fragment.app.FragmentTransaction:
    public androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)
    public abstract int commitAllowingStateLoss()
    public boolean mAllowAddToBackStack
com.google.android.material.stateful.ExtendableSavedState:
    public void <init>(android.os.Parcel,java.lang.ClassLoader)
com.google.android.material.datepicker.SmoothCalendarLayoutManager$1:
    public final synthetic com.google.android.material.datepicker.SmoothCalendarLayoutManager this$0
com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy:
    public static final com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy IGNORE
    public static final com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy THROW
androidx.core.content.res.GrowingArrayUtils
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1:
    public final synthetic androidx.appcompat.widget.AppCompatSpinner val$this$0
androidx.appcompat.view.menu.MenuItemWrapperICS:
    public void setExclusiveCheckable(boolean)
org.greenrobot.greendao.query.Query:
    public static org.greenrobot.greendao.query.Query create(org.greenrobot.greendao.AbstractDao,java.lang.String,java.lang.Object[],int,int)
    public void <init>(org.greenrobot.greendao.query.Query$QueryData,org.greenrobot.greendao.AbstractDao,java.lang.String,java.lang.String[],int,int)
    public java.util.List list()
    public final org.greenrobot.greendao.query.Query$QueryData queryData
androidx.core.view.ViewCompat$5:
    public java.lang.Boolean frameworkGet(android.view.View)
    public void frameworkSet(android.view.View,java.lang.Boolean)
    public boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean)
androidx.core.text.ICUCompat
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry:
    public androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries()
com.bumptech.glide.load.model.MultiModelLoaderFactory$Factory:
    public com.bumptech.glide.load.model.MultiModelLoader build(java.util.List,androidx.core.util.Pools$Pool)
androidx.transition.ViewGroupOverlayImpl
androidx.fragment.app.FragmentManager:
    public abstract androidx.fragment.app.FragmentTransaction beginTransaction()
    public void setFragmentFactory(androidx.fragment.app.FragmentFactory)
    public androidx.fragment.app.FragmentFactory getFragmentFactory()
androidx.core.graphics.drawable.WrappedDrawableApi14
androidx.fragment.app.FragmentTransition:
    public static androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl()
    public static androidx.collection.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int)
    public static void configureTransitionsReordered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap)
    public static void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList)
    public static void configureTransitionsOrdered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap)
    public static void scheduleTargetChange(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,androidx.fragment.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)
    public static java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object)
    public static java.lang.Object configureSharedElementsOrdered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object)
    public static java.lang.String findKeyForValue(androidx.collection.ArrayMap,java.lang.String)
    public static void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap)
    public static void calculateFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean)
    public static void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean)
    public static androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int)
com.google.android.material.textfield.ClearTextEndIconDelegate:
    public static boolean hasText(android.text.Editable)
    public static synthetic boolean access$000(android.text.Editable)
    public static synthetic android.animation.ValueAnimator access$100(com.google.android.material.textfield.ClearTextEndIconDelegate)
    public static synthetic android.animation.AnimatorSet access$200(com.google.android.material.textfield.ClearTextEndIconDelegate)
    public static synthetic android.text.TextWatcher access$300(com.google.android.material.textfield.ClearTextEndIconDelegate)
    public final void initAnimators()
    public final varargs android.animation.ValueAnimator getAlphaAnimator(float[])
    public final android.animation.ValueAnimator getScaleAnimator()
androidx.appcompat.widget.AppCompatSeekBar:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
org.greenrobot.greendao.query.QueryBuilder
com.bumptech.glide.load.engine.cache.DiskCache$Writer:
    public abstract boolean write(java.io.File)
com.bumptech.glide.disklrucache.DiskLruCache$Editor:
    public void <init>(com.bumptech.glide.disklrucache.DiskLruCache,com.bumptech.glide.disklrucache.DiskLruCache$Entry)
    public static synthetic com.bumptech.glide.disklrucache.DiskLruCache$Entry access$1500(com.bumptech.glide.disklrucache.DiskLruCache$Editor)
    public static synthetic boolean[] access$1600(com.bumptech.glide.disklrucache.DiskLruCache$Editor)
    public void commit()
    public void abortUnlessCommitted()
androidx.arch.core.executor.ArchTaskExecutor$1
com.google.android.material.datepicker.CalendarConstraints:
    public void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.CalendarConstraints$DateValidator)
    public com.google.android.material.datepicker.CalendarConstraints$DateValidator getDateValidator()
    public com.google.android.material.datepicker.Month getStart()
    public com.google.android.material.datepicker.Month getEnd()
    public com.google.android.material.datepicker.Month getOpenAt()
    public int getMonthSpan()
    public int getYearSpan()
androidx.core.widget.NestedScrollView$OnScrollChangeListener:
    public abstract void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int)
com.bumptech.glide.load.engine.cache.LruResourceCache:
    public void setResourceRemovedListener(com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener)
    public void onItemEvicted(com.bumptech.glide.load.engine.Resource)
    public int getSize(com.bumptech.glide.load.engine.Resource)
    public void trimMemory(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer:
    public static float cross(float,float,float,float)
    public void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter)
    public boolean isStateful()
    public boolean onStateChanged(int[])
    public final void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)
    public final float getMatrixScale(android.graphics.Matrix)
com.bumptech.glide.load.ImageHeaderParserUtils$TypeReader
com.bumptech.glide.load.model.ByteArrayLoader:
    public com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(byte[])
    public boolean handles()
com.bumptech.glide.request.BaseRequestOptions:
    public com.bumptech.glide.request.BaseRequestOptions sizeMultiplier(float)
    public final boolean isTransformationAllowed()
    public final boolean isTransformationSet()
    public com.bumptech.glide.request.BaseRequestOptions downsample(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy)
    public com.bumptech.glide.request.BaseRequestOptions optionalCenterCrop()
    public com.bumptech.glide.request.BaseRequestOptions optionalFitCenter()
    public com.bumptech.glide.request.BaseRequestOptions optionalCenterInside()
    public final com.bumptech.glide.request.BaseRequestOptions transform(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.Transformation)
    public com.bumptech.glide.request.BaseRequestOptions transform(com.bumptech.glide.load.Transformation)
    public com.bumptech.glide.request.BaseRequestOptions lock()
    public com.bumptech.glide.request.BaseRequestOptions autoClone()
    public final java.util.Map getTransformations()
    public final boolean isTransformationRequired()
    public final com.bumptech.glide.load.Options getOptions()
    public final java.lang.Class getResourceClass()
    public final com.bumptech.glide.load.engine.DiskCacheStrategy getDiskCacheStrategy()
    public final android.graphics.drawable.Drawable getErrorPlaceholder()
    public final int getErrorId()
    public final int getPlaceholderId()
    public final android.graphics.drawable.Drawable getPlaceholderDrawable()
    public final int getFallbackId()
    public final android.graphics.drawable.Drawable getFallbackDrawable()
    public final android.content.res.Resources$Theme getTheme()
    public final boolean isMemoryCacheable()
    public final com.bumptech.glide.load.Key getSignature()
    public final boolean isPrioritySet()
    public final com.bumptech.glide.Priority getPriority()
    public final int getOverrideWidth()
    public final boolean isValidOverride()
    public final int getOverrideHeight()
    public final float getSizeMultiplier()
    public boolean isScaleOnlyOrNoTransform()
    public final boolean getUseUnlimitedSourceGeneratorsPool()
    public final boolean getUseAnimationPool()
    public final boolean getOnlyRetrieveFromCache()
    public final com.bumptech.glide.request.BaseRequestOptions optionalScaleOnlyTransform(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.Transformation)
    public final com.bumptech.glide.request.BaseRequestOptions scaleOnlyTransform(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.Transformation,boolean)
    public final boolean isSet(int)
    public final com.bumptech.glide.request.BaseRequestOptions self()
androidx.constraintlayout.solver.SolverVariable:
    public static void increaseErrorId()
    public static void <clinit>()
    public void setType(androidx.constraintlayout.solver.SolverVariable$Type)
    public static int uniqueSlackId
    public static int uniqueUnrestrictedId
    public static int uniqueConstantId
    public static int uniqueId
com.bumptech.glide.signature.EmptySignature:
    public static com.bumptech.glide.signature.EmptySignature obtain()
androidx.appcompat.widget.AppCompatSpinner$SavedState$1:
    public androidx.appcompat.widget.AppCompatSpinner$SavedState createFromParcel(android.os.Parcel)
    public androidx.appcompat.widget.AppCompatSpinner$SavedState[] newArray(int)
androidx.recyclerview.widget.OrientationHelper:
    public void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager)
    public static androidx.recyclerview.widget.OrientationHelper createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
    public static androidx.recyclerview.widget.OrientationHelper createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
    public void onLayoutComplete()
com.eptonic.photocollage.ui.mutitouchh.ImageEntity$1:
    public com.eptonic.photocollage.ui.mutitouchh.ImageEntity createFromParcel(android.os.Parcel)
    public com.eptonic.photocollage.ui.mutitouchh.ImageEntity[] newArray(int)
com.google.android.material.floatingactionbutton.BorderDrawable
androidx.core.math.MathUtils
androidx.core.os.TraceCompat
com.bumptech.glide.load.resource.bitmap.VideoDecoder:
    public static com.bumptech.glide.load.ResourceDecoder asset(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)
    public static com.bumptech.glide.load.ResourceDecoder parcel(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)
    public static com.bumptech.glide.load.ResourceDecoder byteBuffer(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)
    public void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverInitializer,com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverFactory)
    public static android.graphics.Bitmap decodeScaledFrame(android.media.MediaMetadataRetriever,long,int,int,int,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy)
    public static android.graphics.Bitmap decodeOriginalFrame(android.media.MediaMetadataRetriever,long,int)
androidx.core.app.ActivityCompat:
    public static androidx.core.app.ActivityCompat$PermissionCompatDelegate sDelegate
androidx.appcompat.app.AlertController$AlertParams:
    public void apply(androidx.appcompat.app.AlertController)
    public final void createListView(androidx.appcompat.app.AlertController)
    public java.lang.CharSequence mMessage
    public java.lang.CharSequence mPositiveButtonText
    public android.graphics.drawable.Drawable mPositiveButtonIcon
    public android.content.DialogInterface$OnClickListener mPositiveButtonListener
    public java.lang.CharSequence mNegativeButtonText
    public android.graphics.drawable.Drawable mNegativeButtonIcon
    public android.content.DialogInterface$OnClickListener mNegativeButtonListener
    public java.lang.CharSequence mNeutralButtonText
    public android.graphics.drawable.Drawable mNeutralButtonIcon
    public android.content.DialogInterface$OnClickListener mNeutralButtonListener
    public java.lang.CharSequence[] mItems
    public int mViewLayoutResId
    public android.view.View mView
    public int mViewSpacingLeft
    public int mViewSpacingTop
    public int mViewSpacingRight
    public int mViewSpacingBottom
    public boolean[] mCheckedItems
    public boolean mIsMultiChoice
    public android.content.DialogInterface$OnMultiChoiceClickListener mOnCheckboxClickListener
    public android.database.Cursor mCursor
    public java.lang.String mLabelColumn
    public java.lang.String mIsCheckedColumn
    public android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener
    public androidx.appcompat.app.AlertController$AlertParams$OnPrepareListViewListener mOnPrepareListViewListener
    public boolean mRecycleOnMeasure
androidx.recyclerview.widget.StaggeredGridLayoutManager:
    public void setSpanCount(int)
    public void setOrientation(int)
    public void setReverseLayout(boolean)
    public void invalidateSpanAssignments()
    public void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
    public boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
    public void updateMeasureSpecs(int)
    public int findFirstVisibleItemPositionInt()
    public boolean areAllEndsEqual()
    public boolean areAllStartsEqual()
    public final void createOrientationHelpers()
    public final boolean checkSpanForGap(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span)
    public final void repositionToWrapContentIfNecessary()
    public final void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
    public final boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
    public final void measureChildWithDecorationsAndMargin(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,boolean)
    public final androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int)
    public final androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int)
    public final void attachViewToSpans(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,androidx.recyclerview.widget.LayoutState)
    public final void appendViewToAllSpans(android.view.View)
    public final void prependViewToAllSpans(android.view.View)
    public final int getMaxStart(int)
    public final int getMinEnd(int)
    public final androidx.recyclerview.widget.StaggeredGridLayoutManager$Span getNextSpan(androidx.recyclerview.widget.LayoutState)
    public final int findFirstReferenceChildPosition(int)
    public final int findLastReferenceChildPosition(int)
    public final int convertFocusDirectionToLayoutDirection(int)
androidx.core.util.ObjectsCompat
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$NullBitmapTracker:
    public void add(android.graphics.Bitmap)
    public void remove(android.graphics.Bitmap)
com.google.android.material.shape.ShapeAppearanceModel$Builder:
    public static synthetic com.google.android.material.shape.CornerTreatment access$100(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.CornerTreatment access$200(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.CornerTreatment access$300(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.CornerTreatment access$400(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.CornerSize access$500(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.CornerSize access$600(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.CornerSize access$700(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.CornerSize access$800(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.EdgeTreatment access$900(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.EdgeTreatment access$1000(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.EdgeTreatment access$1100(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.EdgeTreatment access$1200(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCornerSizes(float)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCornerSize(com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCornerSize(com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCornerSize(com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCornerSize(com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(int,com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(com.google.android.material.shape.CornerTreatment)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(int,com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(com.google.android.material.shape.CornerTreatment)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(int,com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(com.google.android.material.shape.CornerTreatment)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(int,com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(com.google.android.material.shape.CornerTreatment)
com.bumptech.glide.load.model.DataUrlLoader$StreamFactory$1:
    public java.io.InputStream decode(java.lang.String)
    public void close(java.io.InputStream)
    public java.lang.Class getDataClass()
    public void close(java.lang.Object)
    public final synthetic com.bumptech.glide.load.model.DataUrlLoader$StreamFactory this$0
com.bumptech.glide.load.resource.gif.GifFrameLoader:
    public void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.RequestManager,com.bumptech.glide.gifdecoder.GifDecoder,android.os.Handler,com.bumptech.glide.RequestBuilder,com.bumptech.glide.load.Transformation,android.graphics.Bitmap)
    public static com.bumptech.glide.RequestBuilder getRequestBuilder(com.bumptech.glide.RequestManager,int,int)
    public static com.bumptech.glide.load.Key getFrameSignature()
    public android.graphics.Bitmap getFirstFrame()
    public void subscribe(com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback)
    public void unsubscribe(com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback)
    public int getWidth()
    public int getHeight()
    public int getSize()
    public int getCurrentIndex()
    public java.nio.ByteBuffer getBuffer()
    public int getFrameCount()
    public void clear()
    public android.graphics.Bitmap getCurrentFrame()
    public final void start()
    public final void stop()
    public final void recycleFirstFrame()
    public com.bumptech.glide.load.Transformation transformation
    public com.bumptech.glide.load.resource.gif.GifFrameLoader$OnEveryFrameListener onEveryFrameListener
com.bumptech.glide.load.engine.DecodePath:
    public final com.bumptech.glide.load.engine.Resource decodeResource(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options)
androidx.recyclerview.widget.RecyclerView$State:
    public void prepareForNestedPrefetch(androidx.recyclerview.widget.RecyclerView$Adapter)
    public boolean isPreLayout()
    public boolean willRunPredictiveAnimations()
    public int getTargetScrollPosition()
    public boolean hasTargetScrollPosition()
    public android.util.SparseArray mData
    public int mRemainingScrollVertical
com.google.android.material.card.MaterialCardView:
    public static synthetic float access$001(com.google.android.material.card.MaterialCardView)
    public boolean isDragged()
    public boolean isCheckable()
    public final void forceRippleRedrawIfNeeded()
    public final com.google.android.material.card.MaterialCardViewHelper cardViewHelper
    public boolean isParentCardViewDoneInitializing
    public static final int DEF_STYLE_RES
com.bumptech.glide.load.model.stream.HttpGlideUrlLoader:
    public com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(com.bumptech.glide.load.model.GlideUrl,com.bumptech.glide.load.Options)
    public boolean handles()
com.google.android.material.transformation.FabTransformationSheetBehavior:
    public com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec onCreateMotionSpec(android.content.Context,boolean)
    public final void updateImportantForAccessibility(android.view.View,boolean)
com.google.android.material.shape.ShapeAppearanceModel$CornerSizeUnaryOperator
androidx.transition.TransitionManager:
    public static void sceneChangeRunTransition(android.view.ViewGroup,androidx.transition.Transition)
    public static void sceneChangeSetup(android.view.ViewGroup,androidx.transition.Transition)
    public static void beginDelayedTransition(android.view.ViewGroup,androidx.transition.Transition)
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14
com.eptonic.photocollage.adapter.FreeTabEditAdapter$ViewHolder:
    public final synthetic com.eptonic.photocollage.adapter.FreeTabEditAdapter this$0
com.yd.photoeditor.vv.PhotoUtils
com.google.android.material.appbar.AppBarLayout$BaseBehavior:
    public static android.view.View getAppBarChildOnOffset(com.google.android.material.appbar.AppBarLayout,int)
    public static synthetic int access$000(com.google.android.material.appbar.AppBarLayout$BaseBehavior)
    public boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int)
    public void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int[])
    public void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int[])
    public void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int)
    public boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int,int)
    public boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int)
    public boolean canDragView(com.google.android.material.appbar.AppBarLayout)
    public void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)
    public int getMaxDragOffset(com.google.android.material.appbar.AppBarLayout)
    public int getScrollRangeForDragFling(com.google.android.material.appbar.AppBarLayout)
    public int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int)
    public android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)
    public void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.os.Parcelable)
    public int getScrollRangeForDragFling(android.view.View)
    public int getMaxDragOffset(android.view.View)
    public void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
    public final boolean canScrollChildren(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View)
    public final void animateOffsetWithDuration(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int)
    public final int getChildIndexOnOffset(com.google.android.material.appbar.AppBarLayout,int)
    public final int interpolateOffset(com.google.android.material.appbar.AppBarLayout,int)
    public final boolean shouldJumpElevationState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)
    public com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback onDragCallback
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver:
    public void onChanged()
    public void onItemRangeInserted(int,int)
androidx.recyclerview.widget.ChildHelper$Callback:
    public abstract int getChildCount()
    public abstract void addView(android.view.View,int)
    public abstract int indexOfChild(android.view.View)
    public abstract void removeViewAt(int)
    public abstract android.view.View getChildAt(int)
    public abstract void removeAllViews()
    public abstract androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)
    public abstract void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams)
    public abstract void detachViewFromParent(int)
    public abstract void onEnteredHiddenState(android.view.View)
    public abstract void onLeftHiddenState(android.view.View)
androidx.cardview.widget.CardView:
    public int mUserSetMinWidth
    public int mUserSetMinHeight
    public final android.graphics.Rect mContentPadding
    public final androidx.cardview.widget.CardViewDelegate mCardViewDelegate
    public static final int[] COLOR_BACKGROUND_ATTR
com.yd.photoeditor.imageprocessing.filter.colour.P8:
    public void <init>(float)
    public void setSaturation(float)
androidx.appcompat.widget.ActionMenuPresenter:
    public static synthetic androidx.appcompat.view.menu.MenuBuilder access$000(androidx.appcompat.widget.ActionMenuPresenter)
    public static synthetic androidx.appcompat.view.menu.MenuBuilder access$100(androidx.appcompat.widget.ActionMenuPresenter)
    public static synthetic androidx.appcompat.view.menu.MenuView access$200(androidx.appcompat.widget.ActionMenuPresenter)
    public static synthetic androidx.appcompat.view.menu.MenuBuilder access$300(androidx.appcompat.widget.ActionMenuPresenter)
    public static synthetic androidx.appcompat.view.menu.MenuBuilder access$400(androidx.appcompat.widget.ActionMenuPresenter)
    public static synthetic androidx.appcompat.view.menu.MenuView access$500(androidx.appcompat.widget.ActionMenuPresenter)
    public void onConfigurationChanged()
    public void setReserveOverflow(boolean)
    public void setExpandedActionViewsExclusive(boolean)
    public void setOverflowIcon(android.graphics.drawable.Drawable)
    public android.graphics.drawable.Drawable getOverflowIcon()
    public androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
    public void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)
    public boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl)
    public boolean filterLeftoverView(android.view.ViewGroup,int)
    public boolean isOverflowMenuShowPending()
    public void setMenuView(androidx.appcompat.widget.ActionMenuView)
    public final android.view.View findViewForItem(android.view.MenuItem)
    public boolean mMaxItemsSet
    public boolean mStrictWidthLimit
    public boolean mWidthLimitSet
androidx.constraintlayout.solver.Metrics
com.eptonic.photocollage.util.PhotoUtils
androidx.transition.TransitionManager$MultiListener:
    public final void removeListeners()
com.google.android.material.appbar.HeaderScrollingViewBehavior:
    public static int resolveGravity(int)
    public boolean shouldHeaderOverlapScrollingChild()
    public abstract float getOverlapRatioForOffset(android.view.View)
    public abstract android.view.View findFirstDependency(java.util.List)
    public int getScrollRange(android.view.View)
    public final int getVerticalLayoutGap()
    public final void setOverlayTop(int)
    public final int getOverlayTop()
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView:
    public final boolean isOutOfBounds(int,int)
androidx.fragment.app.BackStackRecord:
    public void dump(java.lang.String,java.io.PrintWriter)
    public void runOnCommitRunnables()
    public int commitAllowingStateLoss()
    public int commitInternal(boolean)
    public androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment)
    public androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment)
    public boolean isPostponed()
    public void setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener)
    public java.lang.String getName()
com.eptonic.photocollage.ui.view.frame.FramePhotoLayout$2
com.bumptech.glide.util.pool.StateVerifier:
    public static com.bumptech.glide.util.pool.StateVerifier newInstance()
    public void <init>()
    public abstract void setRecycled(boolean)
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo:
    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom1(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public int right
    public int bottom
com.eptonic.photocollage.ui.view.template.MultiTouchHandler$C23901:
    public com.eptonic.photocollage.ui.view.template.MultiTouchHandler createFromParcel(android.os.Parcel)
    public com.eptonic.photocollage.ui.view.template.MultiTouchHandler[] newArray(int)
com.google.android.material.internal.CheckableImageButton:
    public boolean isCheckable()
com.google.android.material.textfield.DropdownMenuEndIconDelegate:
    public static synthetic boolean access$202(com.google.android.material.textfield.DropdownMenuEndIconDelegate,boolean)
    public static synthetic android.view.accessibility.AccessibilityManager access$300(com.google.android.material.textfield.DropdownMenuEndIconDelegate)
    public static synthetic void access$500(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView)
    public static synthetic void access$600(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView)
    public static synthetic void access$700(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView)
    public static synthetic android.text.TextWatcher access$800(com.google.android.material.textfield.DropdownMenuEndIconDelegate)
    public static synthetic com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate access$900(com.google.android.material.textfield.DropdownMenuEndIconDelegate)
    public static synthetic boolean access$1000(com.google.android.material.textfield.DropdownMenuEndIconDelegate)
    public static synthetic long access$1102(com.google.android.material.textfield.DropdownMenuEndIconDelegate,long)
    public static synthetic boolean access$1200(com.google.android.material.textfield.DropdownMenuEndIconDelegate)
    public static synthetic android.animation.ValueAnimator access$1300(com.google.android.material.textfield.DropdownMenuEndIconDelegate)
    public static void <clinit>()
    public final void showHideDropdown(android.widget.AutoCompleteTextView)
    public final void setPopupBackground(android.widget.AutoCompleteTextView)
    public final void addRippleEffect(android.widget.AutoCompleteTextView)
    public final void addRippleEffectOnOutlinedLayout(android.widget.AutoCompleteTextView,int,int[][],com.google.android.material.shape.MaterialShapeDrawable)
    public final void addRippleEffectOnFilledLayout(android.widget.AutoCompleteTextView,int,int[][],com.google.android.material.shape.MaterialShapeDrawable)
    public final void setUpDropdownShowHideBehavior(android.widget.AutoCompleteTextView)
    public final android.widget.AutoCompleteTextView castAutoCompleteTextViewOrThrow(android.widget.EditText)
    public final void setEndIconChecked(boolean)
    public final void initAnimators()
    public final varargs android.animation.ValueAnimator getAlphaAnimator(int,float[])
    public static final boolean IS_LOLLIPOP
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache:
    public static int generateCacheKey(int,android.graphics.PorterDuff$Mode)
    public android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode)
    public android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter)
com.bumptech.glide.load.resource.ImageDecoderResourceDecoder$1$1:
    public final synthetic com.bumptech.glide.load.resource.ImageDecoderResourceDecoder$1 this$1
com.yd.photoeditor.imageprocessing.filter.colour.P11
androidx.appcompat.view.menu.MenuPopupHelper:
    public void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int)
    public void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
    public void setAnchorView(android.view.View)
    public void setForceShowIcon(boolean)
    public void setGravity(int)
    public void show()
    public boolean tryShow(int,int)
    public void dismiss()
    public final androidx.appcompat.view.menu.MenuPopup createPopup()
androidx.appcompat.app.AlertController$AlertParams$4
androidx.core.view.ViewPropertyAnimatorCompat$1:
    public final synthetic androidx.core.view.ViewPropertyAnimatorCompat this$0
com.google.android.material.textfield.PasswordToggleEndIconDelegate:
    public static synthetic android.text.TextWatcher access$100(com.google.android.material.textfield.PasswordToggleEndIconDelegate)
    public final boolean hasPasswordTransformation()
com.google.android.material.shape.ShapeAppearancePathProvider:
    public void calculatePath(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,android.graphics.Path)
    public final void setCornerPathAndTransform(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int)
    public final void setEdgePathAndTransform(int)
    public final void appendCornerPath(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int)
    public final void appendEdgePath(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int)
    public final float getEdgeCenterForIndex(android.graphics.RectF,int)
    public final com.google.android.material.shape.CornerTreatment getCornerTreatmentForIndex(int,com.google.android.material.shape.ShapeAppearanceModel)
    public final com.google.android.material.shape.CornerSize getCornerSizeForIndex(int,com.google.android.material.shape.ShapeAppearanceModel)
    public final com.google.android.material.shape.EdgeTreatment getEdgeTreatmentForIndex(int,com.google.android.material.shape.ShapeAppearanceModel)
    public final void getCoordinatesOfCorner(int,android.graphics.RectF,android.graphics.PointF)
    public final float angleOfEdge(int)
com.google.android.material.internal.ViewUtils
androidx.appcompat.widget.TooltipCompat
com.bumptech.glide.load.resource.bytes.ByteBufferRewinder$Factory:
    public com.bumptech.glide.load.data.DataRewinder build(java.nio.ByteBuffer)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton:
    public static synthetic com.google.android.material.floatingactionbutton.MotionStrategy access$000(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public static synthetic com.google.android.material.floatingactionbutton.MotionStrategy access$100(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public static synthetic com.google.android.material.floatingactionbutton.MotionStrategy access$300(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public static synthetic com.google.android.material.floatingactionbutton.MotionStrategy access$400(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public static synthetic android.graphics.Rect access$500(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public final void performMotion(com.google.android.material.floatingactionbutton.MotionStrategy,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)
    public final boolean shouldAnimateVisibilityChange()
    public final androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior behavior
    public static final int DEF_STYLE_RES
    public static final android.util.Property WIDTH
    public static final android.util.Property HEIGHT
com.google.android.material.animation.DrawableAlphaProperty:
    public java.lang.Integer get(android.graphics.drawable.Drawable)
    public void set(android.graphics.drawable.Drawable,java.lang.Integer)
androidx.appcompat.widget.ResourceManagerInternal:
    public static void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal)
    public static long createCacheKey(android.util.TypedValue)
    public static android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[])
    public static boolean isVectorDrawable(android.graphics.drawable.Drawable)
    public synchronized android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int)
    public android.graphics.PorterDuff$Mode getTintMode(int)
    public final android.content.res.ColorStateList getTintListFromCache(android.content.Context,int)
    public final void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList)
    public final void checkVectorDrawableSetup(android.content.Context)
com.yd.photoeditor.imageprocessing.filter.effect.F2:
    public void <init>(float)
    public void setFractionalWidthOfAPixel(float)
    public void setAspectRatio(float)
com.bumptech.glide.disklrucache.DiskLruCache$DiskLruCacheThreadFactory:
    public void <init>()
com.yd.photoeditor.imageprocessing.filter.colour.P10:
    public void <init>(float)
    private void onInit$com$yd$photoeditor$imageprocessing$filter$colour$P3()
    private void constructor$com$yd$photoeditor$imageprocessing$filter$colour$P3(float,float[])
    private void onInitialized$com$yd$photoeditor$imageprocessing$filter$colour$P3()
    private void setIntensity$com$yd$photoeditor$imageprocessing$filter$colour$P3(float)
    private void setColorMatrix$com$yd$photoeditor$imageprocessing$filter$colour$P3(float[])
    public void setIntensity(float)
    public void setColorMatrix(float[])
androidx.fragment.app.FragmentTransitionCompat21$2:
    public final synthetic androidx.fragment.app.FragmentTransitionCompat21 this$0
com.eptonic.photocollage.model.GalleryAlbum:
    public void setTakenDate(java.lang.String)
    public java.util.List getImageList()
    public java.lang.String getAlbumName()
androidx.core.app.TaskStackBuilder
com.bumptech.glide.load.engine.DecodeJob$DecodeCallback:
    public com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.engine.Resource)
androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator:
    public int compare(android.view.View,android.view.View)
androidx.lifecycle.LiveData$LifecycleBoundObserver:
    public void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)
    public boolean shouldBeActive()
    public boolean isAttachedTo(androidx.lifecycle.LifecycleOwner)
    public void detachObserver()
com.bumptech.glide.load.engine.cache.SafeKeyGenerator$1:
    public com.bumptech.glide.load.engine.cache.SafeKeyGenerator$PoolableDigestContainer create()
    public final synthetic com.bumptech.glide.load.engine.cache.SafeKeyGenerator this$0
androidx.core.provider.SelfDestructiveThread$3:
    public final synthetic androidx.core.provider.SelfDestructiveThread this$0
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key
com.bumptech.glide.load.engine.cache.DiskCache$Factory:
    public abstract com.bumptech.glide.load.engine.cache.DiskCache build()
androidx.fragment.app.FragmentTransitionImpl$3:
    public final synthetic androidx.fragment.app.FragmentTransitionImpl this$0
androidx.appcompat.view.menu.MenuItemImpl$1:
    public void onActionProviderVisibilityChanged(boolean)
androidx.transition.ChangeBounds$9:
    public final synthetic androidx.transition.ChangeBounds this$0
androidx.core.view.ViewPropertyAnimatorUpdateListener:
    public abstract void onAnimationUpdate(android.view.View)
androidx.customview.widget.ViewDragHelper$Callback:
    public void onEdgeTouched()
    public boolean onEdgeLock()
    public void onEdgeDragStarted()
    public int getOrderedChildIndex(int)
androidx.fragment.app.BackStackState:
    public androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManagerImpl)
com.bumptech.glide.load.engine.EngineJobListener:
    public abstract void onEngineJobComplete(com.bumptech.glide.load.engine.EngineJob,com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource)
    public abstract void onEngineJobCancelled(com.bumptech.glide.load.engine.EngineJob,com.bumptech.glide.load.Key)
androidx.versionedparcelable.ParcelImpl$1:
    public androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel)
    public androidx.versionedparcelable.ParcelImpl[] newArray(int)
org.greenrobot.greendao.internal.SqlUtils:
    public static java.lang.StringBuilder appendColumn(java.lang.StringBuilder,java.lang.String,java.lang.String)
    public static java.lang.StringBuilder appendColumns(java.lang.StringBuilder,java.lang.String,java.lang.String[])
    public static java.lang.StringBuilder appendColumns(java.lang.StringBuilder,java.lang.String[])
    public static java.lang.StringBuilder appendPlaceholders(java.lang.StringBuilder,int)
    public static final char[] HEX_ARRAY
androidx.appcompat.app.WindowDecorActionBar$3:
    public void onAnimationUpdate(android.view.View)
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1:
    public final synthetic androidx.appcompat.widget.ActionMenuPresenter val$this$0
androidx.recyclerview.widget.RecyclerView$LayoutParams:
    public boolean isViewInvalid()
com.bumptech.glide.load.resource.UnitTransformation:
    public static com.bumptech.glide.load.resource.UnitTransformation get()
com.google.android.material.floatingactionbutton.FloatingActionButton$1:
    public void onShown()
    public void onHidden()
com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener:
    public void <init>(com.google.android.material.chip.ChipGroup)
    public static synthetic android.view.ViewGroup$OnHierarchyChangeListener access$202(com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener,android.view.ViewGroup$OnHierarchyChangeListener)
com.eptonic.photocollage.ui.view.sticker.StickerView$OnStickerOperationListener:
    public abstract void onStickerAdded(com.eptonic.photocollage.ui.view.sticker.Sticker)
    public abstract void onStickerClicked(com.eptonic.photocollage.ui.view.sticker.Sticker)
    public abstract void onStickerDeleted(com.eptonic.photocollage.ui.view.sticker.Sticker)
    public abstract void onStickerDragFinished(com.eptonic.photocollage.ui.view.sticker.Sticker)
    public abstract void onStickerTouchedDown(com.eptonic.photocollage.ui.view.sticker.Sticker)
    public abstract void onStickerZoomFinished(com.eptonic.photocollage.ui.view.sticker.Sticker)
    public abstract void onStickerDoubleTapped(com.eptonic.photocollage.ui.view.sticker.Sticker)
androidx.appcompat.widget.SearchView:
    public void setQuery(java.lang.CharSequence,boolean)
    public boolean isIconified()
    public boolean onSuggestionsKey(int,android.view.KeyEvent)
    public void onTextChanged(java.lang.CharSequence)
    public void onVoiceClicked()
    public void onTextFocusChanged()
    public void adjustDropDownSizeAndPosition()
    public final void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect)
    public final boolean hasVoiceSearch()
    public final boolean isSubmitAreaEnabled()
    public final void postUpdateFocusedState()
    public final java.lang.CharSequence getDecoratedHint(java.lang.CharSequence)
    public final void updateSearchAutoComplete()
    public final void dismissSuggestions()
    public final void rewriteQueryFromSuggestion(int)
    public final boolean launchSuggestion(int,int,java.lang.String)
    public final void launchIntent(android.content.Intent)
    public final android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo)
    public final android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)
org.greenrobot.greendao.InternalQueryDaoAccess:
    public java.util.List loadAllAndCloseCursor(android.database.Cursor)
androidx.customview.widget.FocusStrategy
com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapImageDecoderResourceDecoder:
    public boolean handles()
    public com.bumptech.glide.load.engine.Resource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.load.Options)
com.google.android.material.resources.CancelableFontCallback$ApplyFont:
    public abstract void apply(android.graphics.Typeface)
androidx.core.provider.FontsContractCompat$FontFamilyResult:
    public int getStatusCode()
    public androidx.core.provider.FontsContractCompat$FontInfo[] getFonts()
com.google.android.material.bottomsheet.BottomSheetBehavior$4:
    public boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments)
com.yd.photoeditor.view.DrawableCropImageView$OnDrawMaskListener:
    public abstract void onFinishDrawing()
    public abstract void onStartDrawing()
androidx.recyclerview.widget.LayoutState:
    public boolean hasMore(androidx.recyclerview.widget.RecyclerView$State)
    public android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback:
    public final synthetic androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback this$0
com.eptonic.photocollage.ui.view.sticker.StickerView:
    public void drawStickers(android.graphics.Canvas)
    public boolean onTouchDown(android.view.MotionEvent)
    public void onTouchUp(android.view.MotionEvent)
    public void handleCurrentMode(android.view.MotionEvent)
    public void zoomAndRotateCurrentSticker(android.view.MotionEvent)
    public void zoomAndRotateSticker(com.eptonic.photocollage.ui.view.sticker.Sticker,android.view.MotionEvent)
    public void constrainSticker(com.eptonic.photocollage.ui.view.sticker.Sticker)
    public android.graphics.PointF calculateMidPoint(android.view.MotionEvent)
    public android.graphics.PointF calculateMidPoint()
    public void transformSticker(com.eptonic.photocollage.ui.view.sticker.Sticker)
    public boolean removeCurrentSticker()
    public com.eptonic.photocollage.ui.view.sticker.StickerView addSticker(com.eptonic.photocollage.ui.view.sticker.Sticker,int)
    public void setStickerPosition(com.eptonic.photocollage.ui.view.sticker.Sticker,int)
    public void getStickerPoints(com.eptonic.photocollage.ui.view.sticker.Sticker,float[])
    public boolean isLocked()
    public com.eptonic.photocollage.ui.view.sticker.StickerView setLocked(boolean)
    public com.eptonic.photocollage.ui.view.sticker.StickerView setConstrained(boolean)
    public com.eptonic.photocollage.ui.view.sticker.StickerView setOnStickerOperationListener(com.eptonic.photocollage.ui.view.sticker.StickerView$OnStickerOperationListener)
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo:
    public boolean isViewValidAsAnchor(android.view.View,androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.widget.AlertDialogLayout:
    private void forceUniformWidth(int,int)
    private void setChildFrame(android.view.View,int,int,int,int)
    public final boolean tryOnMeasure(int,int)
com.google.android.material.math.MathUtils
androidx.activity.ComponentActivity:
    public java.lang.Object onRetainCustomNonConfigurationInstance()
    public int mContentLayoutId
com.yd.photoeditor.view.CropImageView:
    public static int findDirectionMovement(android.graphics.PointF,android.graphics.PointF)
    public void restoreInstanceState()
    public final int calculatePosition(float,float)
    public final void initClipArea()
com.google.android.material.transformation.FabTransformationScrimBehavior$1:
    public final synthetic com.google.android.material.transformation.FabTransformationScrimBehavior this$0
androidx.core.view.accessibility.AccessibilityRecordCompat
com.google.android.material.datepicker.MaterialCalendar$1:
    public final synthetic com.google.android.material.datepicker.MaterialCalendar this$0
com.google.android.material.chip.Chip$ChipTouchHelper:
    public int getVirtualViewAt(float,float)
    public void onVirtualViewKeyboardFocusChanged(int,boolean)
    public void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat
androidx.appcompat.app.ActionBar$Tab:
    public void <init>()
    public abstract android.graphics.drawable.Drawable getIcon()
    public abstract java.lang.CharSequence getText()
    public abstract android.view.View getCustomView()
    public abstract java.lang.CharSequence getContentDescription()
com.google.android.material.theme.MaterialComponentsViewInflater:
    public static void <clinit>()
com.bumptech.glide.load.engine.DataCacheGenerator:
    public final boolean hasNextModelLoader()
com.bumptech.glide.request.target.BaseTarget:
    public void onLoadCleared(android.graphics.drawable.Drawable)
    public void onLoadStarted(android.graphics.drawable.Drawable)
    public void onLoadFailed(android.graphics.drawable.Drawable)
    public void onStart()
    public void onStop()
androidx.transition.Transition:
    public long getDuration()
    public long getStartDelay()
    public android.animation.TimeInterpolator getInterpolator()
    public java.util.List getTargetIds()
    public java.util.List getTargets()
    public java.util.List getTargetNames()
    public java.util.List getTargetTypes()
    public void playTransition(android.view.ViewGroup)
    public void animate(android.animation.Animator)
    public androidx.transition.PathMotion getPathMotion()
    public androidx.transition.Transition$EpicenterCallback getEpicenterCallback()
    public void getPropagation()
    public java.lang.String getName()
    public final void matchInstances(androidx.collection.ArrayMap,androidx.collection.ArrayMap)
    public final void matchItemIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.LongSparseArray,androidx.collection.LongSparseArray)
    public final void matchIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,android.util.SparseArray,android.util.SparseArray)
    public final void matchNames(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap)
    public final void addUnmatched(androidx.collection.ArrayMap,androidx.collection.ArrayMap)
    public final void matchStartAndEnd(androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps)
    public final void runAnimator(android.animation.Animator,androidx.collection.ArrayMap)
    public android.view.ViewGroup mSceneRoot
    public androidx.collection.ArrayMap mNameOverrides
com.bumptech.glide.load.engine.GlideException:
    public static void appendCauses(java.util.List,java.lang.Appendable)
    public void setLoggingDetails(com.bumptech.glide.load.Key,com.bumptech.glide.load.DataSource)
    public void setLoggingDetails(com.bumptech.glide.load.Key,com.bumptech.glide.load.DataSource,java.lang.Class)
    public void setOrigin(java.lang.Exception)
    public java.util.List getCauses()
    public java.util.List getRootCauses()
    public java.lang.Exception exception
com.bumptech.glide.load.ImageHeaderParserUtils$5
androidx.transition.TransitionUtils:
    public static android.graphics.Bitmap createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF,android.view.ViewGroup)
    public static final boolean HAS_IS_ATTACHED_TO_WINDOW
    public static final boolean HAS_OVERLAY
androidx.core.view.ViewPropertyAnimatorCompat:
    public long getDuration()
    public androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator)
    public androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long)
    public void start()
androidx.constraintlayout.solver.widgets.ConstraintAnchor$1
androidx.core.content.res.ComplexColorCompat:
    public static androidx.core.content.res.ComplexColorCompat from(android.graphics.Shader)
    public static androidx.core.content.res.ComplexColorCompat from(android.content.res.ColorStateList)
    public static androidx.core.content.res.ComplexColorCompat from(int)
    public static androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)
    public android.graphics.Shader getShader()
    public int getColor()
    public void setColor(int)
    public boolean willDraw()
com.bumptech.glide.load.data.StreamAssetPathFetcher:
    public java.io.InputStream loadResource(android.content.res.AssetManager,java.lang.String)
    public void close(java.io.InputStream)
androidx.recyclerview.widget.GapWorker$Task:
    public void clear()
androidx.recyclerview.widget.ViewInfoStore$ProcessCallback:
    public abstract void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.google.android.material.card.MaterialCardView$OnCheckedChangeListener:
    public abstract void onCheckedChanged(com.google.android.material.card.MaterialCardView,boolean)
com.google.android.material.datepicker.MaterialCalendar:
    public static synthetic androidx.recyclerview.widget.RecyclerView access$000(com.google.android.material.datepicker.MaterialCalendar)
    public static synthetic com.google.android.material.datepicker.CalendarConstraints access$100(com.google.android.material.datepicker.MaterialCalendar)
    public static synthetic com.google.android.material.datepicker.DateSelector access$200(com.google.android.material.datepicker.MaterialCalendar)
    public static synthetic androidx.recyclerview.widget.RecyclerView access$300(com.google.android.material.datepicker.MaterialCalendar)
    public static synthetic com.google.android.material.datepicker.CalendarStyle access$400(com.google.android.material.datepicker.MaterialCalendar)
    public static synthetic android.view.View access$500(com.google.android.material.datepicker.MaterialCalendar)
    public static synthetic com.google.android.material.datepicker.Month access$602(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.Month)
    public com.google.android.material.datepicker.Month getCurrentMonth()
    public com.google.android.material.datepicker.CalendarConstraints getCalendarConstraints()
    public com.google.android.material.datepicker.DateSelector getDateSelector()
    public com.google.android.material.datepicker.CalendarStyle getCalendarStyle()
    public void toggleVisibleSelector()
    public final androidx.recyclerview.widget.RecyclerView$ItemDecoration createItemDecoration()
    public final void addActionsToMonthNavigation(android.view.View,com.google.android.material.datepicker.MonthsPagerAdapter)
androidx.appcompat.widget.TintInfo:
    public void clear()
androidx.appcompat.widget.AppCompatCheckedTextView:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.viewpager2.adapter.FragmentStateAdapter
androidx.customview.widget.ExploreByTouchHelper:
    public static int keyToDirection(int)
    public static android.graphics.Rect guessPreviouslyFocusedRect(android.view.View,int,android.graphics.Rect)
    public final boolean dispatchHoverEvent(android.view.MotionEvent)
    public final boolean dispatchKeyEvent(android.view.KeyEvent)
    public final void onFocusChanged(boolean,int,android.graphics.Rect)
    public final int getAccessibilityFocusedVirtualViewId()
    public final int getKeyboardFocusedVirtualViewId()
    public void onVirtualViewKeyboardFocusChanged(int,boolean)
    public boolean performAction(int,int,android.os.Bundle)
    public abstract int getVirtualViewAt(float,float)
    public void onPopulateEventForVirtualView()
    public void onPopulateEventForHost()
    public void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    public final void getBoundsInParent(int,android.graphics.Rect)
    public final androidx.collection.SparseArrayCompat getAllNodes()
    public final boolean clickKeyboardFocusedVirtualView()
    public final android.view.accessibility.AccessibilityEvent createEvent(int,int)
    public final android.view.accessibility.AccessibilityEvent createEventForHost(int)
    public final android.view.accessibility.AccessibilityEvent createEventForChild(int,int)
    public final androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost()
    public final boolean performActionForHost(int,android.os.Bundle)
    public final boolean performActionForChild(int,int,android.os.Bundle)
    public final boolean isVisibleToUser(android.graphics.Rect)
    public final boolean requestAccessibilityFocus(int)
androidx.appcompat.widget.AppCompatCompoundButtonHelper:
    public void setSupportButtonTintList(android.content.res.ColorStateList)
    public android.content.res.ColorStateList getSupportButtonTintList()
    public void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
    public android.graphics.PorterDuff$Mode getSupportButtonTintMode()
    public void onSetButtonDrawable()
    public int getCompoundPaddingLeft(int)
androidx.core.graphics.drawable.WrappedDrawableApi21
com.google.android.material.resources.TextAppearanceConfig
androidx.core.graphics.TypefaceCompatBaseImpl$1
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener:
    public abstract void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.fragment.app.FragmentManagerState$1:
    public androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel)
    public androidx.fragment.app.FragmentManagerState[] newArray(int)
androidx.arch.core.internal.SafeIterableMap:
    public java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
    public int size()
    public java.util.Iterator descendingIterator()
    public java.util.Map$Entry eldest()
    public java.util.Map$Entry newest()
com.eptonic.photocollage.ui.next.s.xx.xxx.yy.cc.activity.FrameDetailActivity$1:
    public final synthetic com.eptonic.photocollage.ui.next.s.xx.xxx.yy.cc.activity.FrameDetailActivity this$0
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper:
    public static java.lang.Object accessAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object)
    public static java.lang.reflect.Field getTextViewField(java.lang.String)
    public void loadFromAttributes(android.util.AttributeSet,int)
    public void setAutoSizeTextTypeWithDefaults(int)
    public void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
    public void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
    public int getAutoSizeTextType()
    public int getAutoSizeStepGranularity()
    public int getAutoSizeMinTextSize()
    public int getAutoSizeMaxTextSize()
    public int[] getAutoSizeTextAvailableSizes()
    public void initTempTextPaint(int)
    public android.text.StaticLayout createLayout(java.lang.CharSequence,android.text.Layout$Alignment,int,int)
    public boolean isAutoSizeEnabled()
    public final void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray)
    public final void clearAutoSizeConfiguration()
    public final void setRawTextSize(float)
    public final boolean suggestedSizeFitsInSpace(int,android.graphics.RectF)
    public final android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)
    public final android.text.StaticLayout createStaticLayoutForMeasuringPre23(java.lang.CharSequence,android.text.Layout$Alignment,int)
    public final android.text.StaticLayout createStaticLayoutForMeasuringPre16(java.lang.CharSequence,android.text.Layout$Alignment,int)
androidx.cursoradapter.widget.CursorFilter$CursorFilterClient:
    public abstract java.lang.CharSequence convertToString(android.database.Cursor)
    public abstract android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)
    public abstract android.database.Cursor getCursor()
    public abstract void changeCursor(android.database.Cursor)
androidx.constraintlayout.solver.widgets.Rectangle
com.google.android.material.chip.Chip:
    public static synthetic com.google.android.material.chip.ChipDrawable access$000(com.google.android.material.chip.Chip)
    public static synthetic boolean access$302(com.google.android.material.chip.Chip,boolean)
    public static synthetic android.graphics.Rect access$500()
    public boolean performCloseIconClick()
    public boolean isCloseIconVisible()
    public boolean shouldEnsureMinTouchTargetSize()
    public final void initMinTouchTarget(android.content.Context,android.util.AttributeSet,int)
    public final void validateAttributes(android.util.AttributeSet)
    public final void initOutlineProvider()
    public final void ensureChipDrawableHasCallback()
    public final void unapplyChipDrawable(com.google.android.material.chip.ChipDrawable)
    public final void applyChipDrawable(com.google.android.material.chip.ChipDrawable)
    public final boolean handleAccessibilityExit(android.view.MotionEvent)
    public final int[] createCloseIconDrawableState()
    public final void insetChipBackgroundDrawable(int,int,int,int)
com.bumptech.glide.load.resource.drawable.NonOwnedDrawableResource:
    public static com.bumptech.glide.load.engine.Resource newInstance(android.graphics.drawable.Drawable)
com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder$NonOwnedBitmapResource:
    public android.graphics.Bitmap get()
com.bumptech.glide.load.engine.LoadPath:
    public final com.bumptech.glide.load.engine.Resource loadWithExceptionList(com.bumptech.glide.load.data.DataRewinder,com.bumptech.glide.load.Options,int,int,com.bumptech.glide.load.engine.DecodePath$DecodeCallback,java.util.List)
    public final java.lang.Class dataClass
androidx.customview.widget.ExploreByTouchHelper$2:
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat get(androidx.collection.SparseArrayCompat,int)
    public int size(androidx.collection.SparseArrayCompat)
    public int size(java.lang.Object)
    public java.lang.Object get(java.lang.Object,int)
com.eptonic.photocollage.adapter.TemplateAdapter:
    public com.eptonic.photocollage.adapter.TemplateViewHolder onCreateViewHolder(android.view.ViewGroup,int)
    public void onBindViewHolder(com.eptonic.photocollage.adapter.TemplateViewHolder,int)
    public final android.content.Context mContext
    public int mHeaderDisplay
androidx.transition.ChangeBounds$1:
    public void set(android.graphics.drawable.Drawable,android.graphics.PointF)
    public android.graphics.PointF get(android.graphics.drawable.Drawable)
androidx.core.app.ActivityRecreator:
    public static boolean queueOnStopIfNecessary(java.lang.Object,android.app.Activity)
    public static java.lang.reflect.Method getPerformStopActivity3Params(java.lang.Class)
    public static java.lang.reflect.Method getPerformStopActivity2Params(java.lang.Class)
    public static java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class)
    public static java.lang.reflect.Field getMainThreadField()
    public static java.lang.reflect.Field getTokenField()
    public static java.lang.Class getActivityThreadClass()
androidx.transition.ChangeBounds$ViewBounds:
    public void setTopLeft(android.graphics.PointF)
    public void setBottomRight(android.graphics.PointF)
    public final void setLeftTopRightBottom()
org.greenrobot.greendao.query.Query$QueryData:
    public org.greenrobot.greendao.query.Query createQuery()
    public org.greenrobot.greendao.query.AbstractQuery createQuery()
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader:
    public com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options)
    public boolean handles(android.net.Uri)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions:
    public java.util.Map$Entry next()
androidx.transition.PropertyValuesHolderUtils
androidx.fragment.app.FragmentManagerImpl:
    public static androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeFadeAnimation(float,float)
    public static void executeOps(java.util.ArrayList,java.util.ArrayList,int,int)
    public static int transitToStyleIndex(int,boolean)
    public androidx.fragment.app.FragmentTransaction beginTransaction()
    public void handleOnBackPressed()
    public int getBackStackEntryCount()
    public void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment)
    public androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)
    public androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)
    public void addRetainedFragment(androidx.fragment.app.Fragment)
    public void removeRetainedFragment(androidx.fragment.app.Fragment)
    public boolean isDestroyed()
    public void performPendingDeferredStart(androidx.fragment.app.Fragment)
    public boolean isStateAtLeast(int)
    public void moveToState(androidx.fragment.app.Fragment)
    public void ensureInflatedFragmentView(androidx.fragment.app.Fragment)
    public void completeShowHideFragment(androidx.fragment.app.Fragment)
    public void makeInactive(androidx.fragment.app.Fragment)
    public void hideFragment(androidx.fragment.app.Fragment)
    public void showFragment(androidx.fragment.app.Fragment)
    public void doPendingDeferredStart()
    public void reportBackStackChanged()
    public void addBackStackState(androidx.fragment.app.BackStackRecord)
    public boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int)
    public android.os.Bundle saveFragmentBasicState(androidx.fragment.app.Fragment)
    public void dispatchActivityCreated()
    public void dispatchStart()
    public void dispatchResume()
    public void dispatchPause()
    public void dispatchStop()
    public void dispatchDestroyView()
    public void dispatchPrimaryNavigationFragmentChanged()
    public androidx.fragment.app.Fragment getPrimaryNavigationFragment()
    public boolean checkForMenus()
    public android.view.LayoutInflater$Factory2 getLayoutInflaterFactory()
    public final boolean popBackStackImmediate(java.lang.String,int,int)
    public final void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator,int)
    public final void makeRemovedFragmentsInvisible(androidx.collection.ArraySet)
    public final int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet)
    public final androidx.fragment.app.Fragment findFragmentUnder(androidx.fragment.app.Fragment)
    public final void forcePostponedTransactions()
    public final void endAnimatingAwayFragments()
    public final void burpActive()
    public java.util.ArrayList mBackStackChangeListeners
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem:
    public int getGapForSpan(int)
androidx.core.graphics.TypefaceCompatApi24Impl:
    public static boolean isUsable()
    public static java.lang.Object newFamily()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup:
    public int getSpan(int)
    public void setSpan(int,androidx.recyclerview.widget.StaggeredGridLayoutManager$Span)
    public int sizeForPosition(int)
    public final void offsetFullSpansForRemoval(int,int)
    public final void offsetFullSpansForAddition(int,int)
    public final int invalidateFullSpansAfter(int)
androidx.recyclerview.widget.LinearLayoutManager$SavedState:
    public void invalidateAnchor()
com.google.android.material.datepicker.Month:
    public static com.google.android.material.datepicker.Month create(int,int)
    public static com.google.android.material.datepicker.Month today()
    public long getStableId()
    public long getDay(int)
    public java.lang.String getLongName()
    public final long timeInMillis
androidx.transition.ViewOverlayApi18:
    public void add(android.graphics.drawable.Drawable)
    public void remove(android.graphics.drawable.Drawable)
androidx.appcompat.widget.DropDownListView:
    public final void clickPressedItem(android.view.View,int)
    public final void drawSelectorCompat(android.graphics.Canvas)
    public final void positionSelectorLikeTouchCompat(int,android.view.View,float,float)
    public final void positionSelectorLikeFocusCompat(int,android.view.View)
    public final void positionSelectorCompat(int,android.view.View)
    public final void clearPressedItem()
    public final void setPressedItem(android.view.View,int,float,float)
    public final boolean touchModeDrawsInPressedStateCompat()
com.bumptech.glide.load.engine.ActiveResources$ResourceWeakReference:
    public void reset()
androidx.coordinatorlayout.widget.CoordinatorLayout:
    public static int resolveGravity(int)
    public static int resolveKeylineGravity(int)
    public static int resolveAnchoredChildGravity(int)
    public static int clamp(int,int,int)
    public final androidx.core.view.WindowInsetsCompat setWindowInsets(androidx.core.view.WindowInsetsCompat)
    public void getDescendantRect(android.view.View,android.graphics.Rect)
    public void recordLastChildRect(android.view.View,android.graphics.Rect)
    public void getLastChildRect(android.view.View,android.graphics.Rect)
    public void getDesiredAnchoredChildRect(android.view.View,int,android.graphics.Rect,android.graphics.Rect)
    public void dispatchDependentViewsChanged(android.view.View)
    public void ensurePreDrawListener()
    public void addPreDrawListener()
    public void removePreDrawListener()
    public void offsetChildToAnchor(android.view.View,int)
    public androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    public androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    public androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateDefaultLayoutParams()
    public final void getTopSortedChildren(java.util.List)
    public final androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsetsToBehaviors(androidx.core.view.WindowInsetsCompat)
    public final void layoutChildWithAnchor(android.view.View,android.view.View,int)
    public final void layoutChildWithKeyline(android.view.View,int,int)
    public final void layoutChild(android.view.View,int)
    public final void offsetChildByInset(android.view.View,android.graphics.Rect,int)
    public final boolean hasDependencies(android.view.View)
    public android.graphics.Paint mScrimPaint
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl:
    public void setPrefetchVector(int,int)
    public void clearPrefetchPositions()
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult:
    public void resetInternal()
com.bumptech.glide.load.resource.bitmap.VideoDecoder$ParcelFileDescriptorInitializer:
    public void initialize(android.media.MediaMetadataRetriever,android.os.ParcelFileDescriptor)
androidx.core.view.ViewPropertyAnimatorCompat$2:
    public final synthetic androidx.core.view.ViewPropertyAnimatorCompat this$0
androidx.appcompat.view.menu.ListMenuItemView:
    public void setShortcut(boolean)
    public final void addContentView(android.view.View)
    public final void addContentView(android.view.View,int)
    public final void insertIconView()
    public int mMenuType
com.google.android.material.shape.CornerTreatment:
    public void getCornerPath(com.google.android.material.shape.ShapePath,float,float,android.graphics.RectF,com.google.android.material.shape.CornerSize)
com.bumptech.glide.load.resource.ImageDecoderResourceDecoder:
    public final boolean handles()
    public abstract com.bumptech.glide.load.engine.Resource decode(android.graphics.ImageDecoder$Source,int,int,android.graphics.ImageDecoder$OnHeaderDecodedListener)
androidx.cardview.widget.CardViewImpl:
    public abstract void setRadius(androidx.cardview.widget.CardViewDelegate,float)
    public abstract float getRadius(androidx.cardview.widget.CardViewDelegate)
    public abstract void setElevation(androidx.cardview.widget.CardViewDelegate,float)
    public abstract float getElevation(androidx.cardview.widget.CardViewDelegate)
    public abstract void initStatic()
    public abstract void setMaxElevation(androidx.cardview.widget.CardViewDelegate,float)
    public abstract float getMaxElevation(androidx.cardview.widget.CardViewDelegate)
    public abstract float getMinWidth(androidx.cardview.widget.CardViewDelegate)
    public abstract float getMinHeight(androidx.cardview.widget.CardViewDelegate)
    public abstract void onCompatPaddingChanged(androidx.cardview.widget.CardViewDelegate)
    public abstract void onPreventCornerOverlapChanged(androidx.cardview.widget.CardViewDelegate)
    public abstract void setBackgroundColor(androidx.cardview.widget.CardViewDelegate,android.content.res.ColorStateList)
    public abstract android.content.res.ColorStateList getBackgroundColor(androidx.cardview.widget.CardViewDelegate)
androidx.arch.core.internal.SafeIterableMap$ListIterator:
    public java.util.Map$Entry next()
    public final androidx.arch.core.internal.SafeIterableMap$Entry nextNode()
com.eptonic.photocollage.resEncryption.ResUtils:
    public static int addExtPath(android.content.res.AssetManager)
    public static java.util.List newAssertManagers
    public static java.util.WeakHashMap res2Cookie
    public static int sdkv
androidx.core.provider.FontsContractCompat:
    public static android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources)
    public static java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources)
    public static boolean equalsByteArrayList(java.util.List,java.util.List)
    public static java.util.List convertToByteArrayList(android.content.pm.Signature[])
    public static androidx.core.provider.FontsContractCompat$FontInfo[] getFontFromProvider(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal)
androidx.appcompat.graphics.drawable.DrawableWrapper:
    public android.graphics.drawable.Drawable getWrappedDrawable()
    public void setWrappedDrawable(android.graphics.drawable.Drawable)
com.eptonic.photocollage.presenter.listener.AddTextListener:
    public abstract void onOkClick(java.lang.String)
    public abstract void onCancelClick()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior:
    public static boolean isBottomSheet(android.view.View)
    public boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,android.view.View)
    public void shrinkOrHide(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public void extendOrShow(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,int)
    public boolean getInsetDodgeRect(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,android.graphics.Rect)
    public final void offsetIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback internalAutoHideCallback
    public com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback internalAutoShrinkCallback
androidx.constraintlayout.widget.ConstraintSet$1
androidx.core.app.AppOpsManagerCompat
androidx.recyclerview.widget.LinearLayoutManager:
    public void <init>(android.content.Context)
    public int getOrientation()
    public void setReverseLayout(boolean)
    public int getExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State)
    public androidx.recyclerview.widget.LinearLayoutManager$LayoutState createLayoutState()
    public boolean isSmoothScrollbarEnabled()
    public final void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int)
    public final void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
    public final boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
    public final boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
    public final void updateLayoutStateToFillEnd(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
    public final void updateLayoutStateToFillStart(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
    public final void recycleViewsFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)
    public final void recycleViewsFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)
    public final android.view.View findReferenceChildClosestToEnd(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public final android.view.View findReferenceChildClosestToStart(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public final android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd()
    public final android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart()
    public final android.view.View findFirstPartiallyOrCompletelyInvisibleChild()
    public final android.view.View findLastPartiallyOrCompletelyInvisibleChild()
    public boolean mRecycleChildrenOnDetach
com.bumptech.glide.load.model.stream.UrlLoader:
    public com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.net.URL,int,int,com.bumptech.glide.load.Options)
    public boolean handles()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat:
    public static android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode)
    public java.lang.Object getTargetByName(java.lang.String)
    public void setAllowCaching(boolean)
    public final void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
    public final void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public final boolean needMirroring()
    public android.graphics.drawable.Drawable$ConstantState mCachedConstantStateDelegate
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1:
    public androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel)
    public androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState[] newArray(int)
com.bumptech.glide.manager.RequestManagerFragment$FragmentRequestManagerTreeNode:
    public java.util.Set getDescendants()
com.google.android.material.button.MaterialButton:
    public final boolean isLayoutRTL()
    public final void resetIconDrawable(boolean)
androidx.transition.Visibility:
    public void setMode(int)
    public void captureStartValues(androidx.transition.TransitionValues)
    public android.animation.Animator onAppear(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues)
    public abstract android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)
    public android.animation.Animator onDisappear(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues,int)
com.yd.photoeditor.imageprocessing.filter.colour.P9:
    public void setTexelWidth(float)
    public void setTexelHeight(float)
    public final void updateTexelValues()
androidx.fragment.app.FragmentTransitionCompat21$4:
    public final synthetic androidx.fragment.app.FragmentTransitionCompat21 this$0
androidx.constraintlayout.solver.LinearSystem$Row:
    public abstract androidx.constraintlayout.solver.SolverVariable getPivotCandidate(androidx.constraintlayout.solver.LinearSystem,boolean[])
    public abstract void clear()
    public abstract void initFromRow(androidx.constraintlayout.solver.LinearSystem$Row)
    public abstract androidx.constraintlayout.solver.SolverVariable getKey()
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior:
    public static int getAppBarLayoutOffset(com.google.android.material.appbar.AppBarLayout)
    public float getOverlapRatioForOffset(android.view.View)
    public int getScrollRange(android.view.View)
    public synthetic bridge android.view.View findFirstDependency(java.util.List)
    public final void offsetChildAsNeeded(android.view.View,android.view.View)
    public final void updateLiftedStateIfNeeded(android.view.View,android.view.View)
com.bumptech.glide.load.resource.bitmap.ResourceBitmapDecoder:
    public boolean handles(android.net.Uri)
    public com.bumptech.glide.load.engine.Resource decode(android.net.Uri,int,int,com.bumptech.glide.load.Options)
com.google.android.material.shape.MaterialShapeDrawable:
    public void <init>(android.content.Context,android.util.AttributeSet,int,int)
    public static int modulateAlpha(int,int)
    public static synthetic com.google.android.material.shape.ShapePath$ShadowCompatOperation[] access$000(com.google.android.material.shape.MaterialShapeDrawable)
    public static synthetic com.google.android.material.shape.ShapePath$ShadowCompatOperation[] access$100(com.google.android.material.shape.MaterialShapeDrawable)
    public synthetic void <init>(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState,com.google.android.material.shape.MaterialShapeDrawable$1)
    public static synthetic boolean access$302(com.google.android.material.shape.MaterialShapeDrawable,boolean)
    public com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
    public android.content.res.ColorStateList getFillColor()
    public android.content.res.ColorStateList getTintList()
    public void setStrokeWidth(float)
    public void setPadding(int,int,int,int)
    public boolean isElevationOverlayEnabled()
    public float getParentAbsoluteElevation()
    public void setParentAbsoluteElevation(float)
    public float getElevation()
    public float getTranslationZ()
    public float getZ()
    public void setShadowCompatRotation(int)
    public int getShadowRadius()
    public void drawShape(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,android.graphics.RectF)
    public float getTopRightCornerResolvedSize()
    public float getBottomLeftCornerResolvedSize()
    public float getBottomRightCornerResolvedSize()
    public boolean isRoundRect()
    public final boolean requiresCompatShadow()
    public final void invalidateSelfIgnoreShape()
    public final boolean hasCompatShadow()
    public final boolean hasFill()
    public final void drawFillShape(android.graphics.Canvas)
    public final void drawStrokeShape(android.graphics.Canvas)
    public final void prepareCanvasForShadow(android.graphics.Canvas)
    public final void drawCompatShadow(android.graphics.Canvas)
    public final void calculateStrokePath()
    public final android.graphics.PorterDuffColorFilter calculatePaintColorTintFilter(android.graphics.Paint,boolean)
    public final android.graphics.PorterDuffColorFilter calculateTintColorTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,boolean)
androidx.recyclerview.widget.RecyclerView$ItemAnimator:
    public long getMoveDuration()
    public long getAddDuration()
    public long getRemoveDuration()
    public long getChangeDuration()
    public void setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener)
    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public abstract boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract void runPendingAnimations()
    public void onAnimationFinished()
    public abstract boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo()
com.eptonic.photocollage.ui.view.frame.FramePhotoLayout$3:
    public final synthetic com.eptonic.photocollage.ui.view.frame.FramePhotoLayout this$0
com.yd.photoeditor.imageprocessing.filter.effect.F1:
    public static java.lang.String getFragmentShader(int)
    public static java.lang.String getVertexShader(int)
    public void <init>()
    public void <init>(java.lang.String,java.lang.String)
androidx.constraintlayout.solver.widgets.Chain
com.eptonic.photocollage.ui.quickAction.PopupWindows:
    public void onShow()
    public void setContentView(android.view.View)
    public void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
    public android.content.Context mContext
com.google.android.material.textfield.TextInputLayout:
    public static void updateCounterContentDescription(android.content.Context,android.widget.TextView,int,int,boolean)
    public static void setIconOnClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnClickListener,android.view.View$OnLongClickListener)
    public static void setIconOnLongClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener)
    public static synthetic boolean access$000(com.google.android.material.textfield.TextInputLayout)
    public static synthetic com.google.android.material.internal.CheckableImageButton access$100(com.google.android.material.textfield.TextInputLayout)
    public void updateLabelState(boolean)
    public boolean isProvidingHint()
    public boolean isHelperTextEnabled()
    public boolean isStartIconVisible()
    public void addOnEndIconChangedListener(com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener)
    public final void assignBoxBackgroundByMode()
    public final void setEditTextBoxBackground()
    public final boolean shouldUseEditTextBackgroundForBoxBackground()
    public final android.graphics.Rect calculateCollapsedTextBounds(android.graphics.Rect)
    public final android.graphics.Rect calculateExpandedTextBounds(android.graphics.Rect)
    public final int calculateExpandedLabelTop(android.graphics.Rect,float)
    public final int calculateExpandedLabelBottom(android.graphics.Rect,android.graphics.Rect,float)
    public final boolean isSingleLineFilledTextField()
    public final int calculateBoxBackgroundColor()
    public final void applyBoxUnderlineAttributes()
    public final boolean canDrawOutlineStroke()
    public final boolean canDrawStroke()
    public final boolean updateEditTextHeightBasedOnIcon()
    public final void dispatchOnEditTextAttached()
    public final boolean hasStartIcon()
    public final void dispatchOnEndIconChanged(int)
    public final void tintEndIconOnError(boolean)
    public final void updateBoxUnderlineBounds(android.graphics.Rect)
    public final void drawHint(android.graphics.Canvas)
    public final void drawBoxUnderline(android.graphics.Canvas)
    public final void collapseHint(boolean)
    public final void closeCutout()
    public final void applyCutoutPadding(android.graphics.RectF)
    public final void expandHint(boolean)
org.greenrobot.greendao.query.AbstractQueryWithLimit:
    public final int limitPosition
    public final int offsetPosition
com.bumptech.glide.request.Request:
    public abstract boolean isAnyResourceSet()
com.eptonic.photocollage.ui.quickAction.QuickAction$OnActionItemClickListener
com.google.android.material.datepicker.YearGridAdapter:
    public static synthetic com.google.android.material.datepicker.MaterialCalendar access$000(com.google.android.material.datepicker.YearGridAdapter)
    public com.google.android.material.datepicker.YearGridAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup)
    public void onBindViewHolder(com.google.android.material.datepicker.YearGridAdapter$ViewHolder,int)
    public int getYearForPosition(int)
    public final android.view.View$OnClickListener createYearClickListener(int)
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup:
    public static int findFirstKeyLessThan(android.util.SparseIntArray,int)
    public abstract int getSpanSize(int)
    public void invalidateSpanIndexCache()
    public void invalidateSpanGroupIndexCache()
    public abstract int getSpanIndex(int,int)
androidx.recyclerview.widget.FastScroller:
    public void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)
    public void requestRedraw()
    public void hide(int)
    public void updateScrollPosition(int,int)
    public final void setupCallbacks()
    public final void destroyCallbacks()
    public final boolean isLayoutRTL()
    public final void resetHideDelay(int)
    public final void drawVerticalScrollbar(android.graphics.Canvas)
    public final void drawHorizontalScrollbar(android.graphics.Canvas)
    public final void verticalScrollTo(float)
    public final void horizontalScrollTo(float)
    public final int[] getVerticalRange()
    public final int[] getHorizontalRange()
com.eptonic.photocollage.resEncryption.utils.XLog:
    public static void <clinit>()
    public static boolean isPrintLog
com.google.android.material.bottomappbar.BottomAppBar$AnimationListener
com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener:
    public abstract void onResourceRemoved(com.bumptech.glide.load.engine.Resource)
androidx.core.provider.FontRequest:
    public java.lang.String getProviderAuthority()
    public java.lang.String getProviderPackage()
    public java.lang.String getQuery()
    public java.util.List getCertificates()
    public int getCertificatesArrayResId()
    public java.lang.String getIdentifier()
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span:
    public int getStartLine()
    public int getEndLine()
    public void cacheReferenceLineAndClear(boolean,int)
    public void invalidateCache()
    public void setLine(int)
    public int getDeletedSize()
    public void onOffset(int)
    public int findOnePartiallyOrCompletelyVisibleChild(int,int,boolean,boolean,boolean)
com.bumptech.glide.load.data.mediastore.ThumbFetcher:
    public static com.bumptech.glide.load.data.mediastore.ThumbFetcher buildImageFetcher(android.content.Context,android.net.Uri)
    public static com.bumptech.glide.load.data.mediastore.ThumbFetcher buildVideoFetcher(android.content.Context,android.net.Uri)
com.bumptech.glide.load.model.GlideUrl:
    public void <init>(java.net.URL,com.bumptech.glide.load.model.Headers)
    public void <init>(java.lang.String,com.bumptech.glide.load.model.Headers)
    public java.util.Map getHeaders()
    public final java.net.URL getSafeUrl()
    public final java.lang.String getSafeStringUrl()
    public final byte[] getCacheKeyBytes()
androidx.loader.app.LoaderManagerImpl$LoaderInfo:
    public void getLoader()
    public void markForRedelivery()
    public void destroy(boolean)
    public void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
    public final int mId
    public final android.os.Bundle mArgs
    public final androidx.loader.content.Loader mLoader
    public androidx.loader.content.Loader mPriorLoader
com.google.android.material.shape.MaterialShapeDrawable$1:
    public void onCornerPathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int)
    public void onEdgePathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB:
    public final synthetic androidx.appcompat.view.menu.MenuItemWrapperICS this$0
androidx.recyclerview.widget.ChildHelper:
    public void addView(android.view.View,boolean)
    public void removeView(android.view.View)
    public void removeViewAt(int)
    public void removeAllViewsUnfiltered()
    public android.view.View findHiddenNonRemovedView(int)
    public void hide(android.view.View)
    public void unhide(android.view.View)
    public boolean removeViewIfHidden(android.view.View)
com.bumptech.glide.RequestBuilder:
    public com.bumptech.glide.RequestBuilder addListener(com.bumptech.glide.request.RequestListener)
    public com.bumptech.glide.RequestBuilder load(java.lang.Object)
    public com.bumptech.glide.RequestBuilder load(java.lang.String)
    public com.bumptech.glide.RequestBuilder load(android.net.Uri)
    public com.bumptech.glide.RequestBuilder load(java.io.File)
    public com.bumptech.glide.RequestBuilder load(java.lang.Integer)
    public com.bumptech.glide.RequestBuilder clone()
    public com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target)
    public com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,java.util.concurrent.Executor)
    public final void initRequestListeners(java.util.List)
    public final com.bumptech.glide.RequestBuilder loadGeneric(java.lang.Object)
    public final boolean isSkipMemoryCacheWithCompletePreviousRequest(com.bumptech.glide.request.BaseRequestOptions,com.bumptech.glide.request.Request)
    public final com.bumptech.glide.Priority getThumbnailPriority(com.bumptech.glide.Priority)
    public final com.bumptech.glide.request.Request buildRequest(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.BaseRequestOptions,java.util.concurrent.Executor)
    public final com.bumptech.glide.request.Request buildThumbnailRequestRecursive(java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.TransitionOptions,com.bumptech.glide.Priority,int,int,com.bumptech.glide.request.BaseRequestOptions,java.util.concurrent.Executor)
    public final com.bumptech.glide.Glide glide
    public com.bumptech.glide.RequestBuilder thumbnailBuilder
    public com.bumptech.glide.RequestBuilder errorBuilder
    public java.lang.Float thumbSizeMultiplier
    public boolean isThumbnailBuilt
    public static final com.bumptech.glide.request.RequestOptions DOWNLOAD_ONLY_OPTIONS
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator:
    public androidx.core.graphics.PathParser$PathDataNode[] evaluate(float,androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams:
    public float dimensionRatioValue
com.bumptech.glide.load.model.LazyHeaders:
    public final java.lang.String buildHeaderValue(java.util.List)
androidx.lifecycle.ViewModelProvider
com.bumptech.glide.load.data.BufferedOutputStream:
    public void <init>(java.io.OutputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,int)
    public final void flushBuffer()
    public final void maybeFlushBuffer()
    public final void release()
androidx.loader.app.LoaderManagerImpl:
    public static void <clinit>()
    public void markForRedelivery()
    public static boolean DEBUG
androidx.loader.app.LoaderManager:
    public abstract void markForRedelivery()
androidx.core.provider.SelfDestructiveThread$2:
    public final synthetic androidx.core.provider.SelfDestructiveThread this$0
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl:
    public boolean dispatchOnCreate()
androidx.core.graphics.TypefaceCompatApi26Impl:
    public java.lang.Class obtainFontFamily()
    public java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class)
    public java.lang.reflect.Method obtainFreezeMethod(java.lang.Class)
    public java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class)
    public final boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int)
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$AtMost
androidx.core.graphics.drawable.IconCompat:
    public static java.lang.String typeToString(int)
    public static java.lang.String getResPackage(android.graphics.drawable.Icon)
    public static int getResId(android.graphics.drawable.Icon)
    public java.lang.String getResPackage()
    public int getResId()
    public void onPreParceling(boolean)
    public void onPostParceling()
androidx.core.content.res.GradientColorInflaterCompat
com.eptonic.photocollage.adapter.SelectedPicsAdapter:
    public void addPic(java.lang.String)
    public com.eptonic.photocollage.adapter.SelectedPicsAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup)
    public void onBindViewHolder(com.eptonic.photocollage.adapter.SelectedPicsAdapter$ViewHolder,int)
com.google.android.material.textview.MaterialTextView:
    public static boolean canApplyTextAppearanceLineHeight(android.content.Context)
    public static boolean viewAttrsHasLineHeight(android.content.Context,android.content.res.Resources$Theme,android.util.AttributeSet,int,int)
    public static int findViewAppearanceResourceId(android.content.res.Resources$Theme,android.util.AttributeSet,int,int)
androidx.recyclerview.widget.GapWorker$1:
    public int compare(androidx.recyclerview.widget.GapWorker$Task,androidx.recyclerview.widget.GapWorker$Task)
com.bumptech.glide.load.model.ModelCache$1:
    public void onItemEvicted(com.bumptech.glide.load.model.ModelCache$ModelKey)
    public final synthetic com.bumptech.glide.load.model.ModelCache this$0
androidx.appcompat.widget.TintContextWrapper:
    public static boolean shouldWrap(android.content.Context)
    public void <init>(android.content.Context)
    public android.content.res.Resources$Theme getTheme()
    public void setTheme(int)
    public android.content.res.Resources getResources()
    public android.content.res.AssetManager getAssets()
    public final android.content.res.Resources mResources
    public final android.content.res.Resources$Theme mTheme
    public static java.util.ArrayList sCache
androidx.customview.view.AbsSavedState:
    public void <init>()
    public final android.os.Parcelable getSuperState()
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1:
    public androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel)
    public androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState[] newArray(int)
com.bumptech.glide.load.data.InputStreamRewinder:
    public void fixMarkLimits()
androidx.appcompat.widget.AppCompatProgressBarHelper:
    public android.graphics.Bitmap getSampleTile()
    public final android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable)
    public final android.graphics.drawable.shapes.Shape getDrawableShape()
com.bumptech.glide.load.engine.DiskCacheStrategy:
    public static final com.bumptech.glide.load.engine.DiskCacheStrategy ALL
    public static final com.bumptech.glide.load.engine.DiskCacheStrategy RESOURCE
com.google.android.material.shape.ShapePath$PathLineOperation:
    public static synthetic float access$002(com.google.android.material.shape.ShapePath$PathLineOperation,float)
    public static synthetic float access$102(com.google.android.material.shape.ShapePath$PathLineOperation,float)
    public static synthetic float access$100(com.google.android.material.shape.ShapePath$PathLineOperation)
    public static synthetic float access$000(com.google.android.material.shape.ShapePath$PathLineOperation)
androidx.appcompat.view.menu.MenuItemImpl:
    public boolean invoke()
    public int getOrdering()
    public java.lang.String getShortcutLabel()
    public void setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder)
    public java.lang.CharSequence getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView)
    public void setExclusiveCheckable(boolean)
    public void setMenuInfo(android.view.ContextMenu$ContextMenuInfo)
    public void actionFormatChanged()
    public boolean shouldShowIcon()
    public boolean requestsActionButton()
    public boolean requiresActionButton()
    public boolean showsTextAsAction()
    public androidx.core.internal.view.SupportMenuItem setActionView(int)
    public androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int)
    public void setActionViewExpanded(boolean)
    public java.lang.Runnable mItemCallback
com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState
com.eptonic.photocollage.ui.wrapper.dah.ghjf.gfhs.fhsj.ghsj.hfjsh.fhsj.fhsj.hfjs.fdj.sjhfs.fgsj.jgks.vbb.uiManager.FrameManager:
    public void loadTemplateImages()
    public final int mImageInTemplateCount
com.eptonic.photocollage.adapter.GalleryAlbumAdapter$ViewHolder:
    public static synthetic android.widget.TextView access$000(com.eptonic.photocollage.adapter.GalleryAlbumAdapter$ViewHolder)
    public static synthetic android.widget.TextView access$100(com.eptonic.photocollage.adapter.GalleryAlbumAdapter$ViewHolder)
    public final synthetic com.eptonic.photocollage.adapter.GalleryAlbumAdapter this$0
androidx.versionedparcelable.VersionedParcel:
    public boolean isStream()
    public abstract void writeByteArray(byte[])
    public abstract void writeCharSequence(java.lang.CharSequence)
    public abstract void writeInt(int)
    public abstract void writeString(java.lang.String)
    public abstract void writeParcelable(android.os.Parcelable)
    public abstract void writeBoolean(boolean)
    public abstract int readInt()
    public abstract java.lang.String readString()
    public abstract byte[] readByteArray()
    public abstract java.lang.CharSequence readCharSequence()
    public abstract android.os.Parcelable readParcelable()
    public abstract boolean readBoolean()
    public void setSerializationFlags()
    public void writeBoolean(boolean,int)
    public void writeByteArray(byte[],int)
    public void writeCharSequence(java.lang.CharSequence,int)
    public void writeString(java.lang.String,int)
    public java.lang.String readString(java.lang.String,int)
    public byte[] readByteArray(byte[],int)
    public void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)
    public androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)
    public androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel)
    public void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel)
    public final void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable)
androidx.core.text.TextDirectionHeuristicCompat:
    public abstract boolean isRtl(java.lang.CharSequence,int,int)
androidx.customview.widget.ExploreByTouchHelper$1:
    public void obtainBounds(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.graphics.Rect)
androidx.core.app.SharedElementCallback:
    public abstract void onSharedElementStart(java.util.List,java.util.List,java.util.List)
    public abstract void onSharedElementEnd(java.util.List,java.util.List,java.util.List)
    public abstract void onMapSharedElements(java.util.List,java.util.Map)
com.google.android.material.stateful.ExtendableSavedState$1:
    public com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.stateful.ExtendableSavedState[] newArray(int)
com.bumptech.glide.provider.EncoderRegistry$Entry:
    public boolean handles(java.lang.Class)
com.bumptech.glide.load.data.HttpUrlFetcher$HttpUrlConnectionFactory:
    public abstract java.net.HttpURLConnection build(java.net.URL)
androidx.recyclerview.widget.OpReorderer:
    public void reorderOps(java.util.List)
    public void swapMoveRemove(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public void swapMoveUpdate(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public final void swapMoveOp(java.util.List,int,int)
    public final void swapMoveAdd(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public final int getLastMoveOutOfOrder(java.util.List)
com.yd.photoeditor.view.OrientationImageView:
    public android.graphics.Bitmap applyTransform()
    public void init(android.graphics.Bitmap,int,int)
androidx.transition.ViewUtilsApi21:
    public static void <clinit>()
    public static boolean sTryHiddenSetAnimationMatrix
androidx.appcompat.view.SupportMenuInflater$MenuState:
    public void resetGroup()
    public void readGroup(android.util.AttributeSet)
    public void readItem(android.util.AttributeSet)
    public void addItem()
    public boolean hasAddedItem()
    public final char getShortcut(java.lang.String)
androidx.recyclerview.widget.GridLayoutManager$LayoutParams:
    public int getSpanIndex()
    public int getSpanSize()
com.bumptech.glide.util.pool.StateVerifier$DefaultStateVerifier:
    public void setRecycled(boolean)
com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable:
    public static synthetic boolean access$100(com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable)
    public static synthetic boolean access$102(com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable,boolean)
androidx.appcompat.view.menu.StandardMenuPopup:
    public final boolean tryShow()
com.bumptech.glide.load.ImageHeaderParserUtils$4
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder:
    public static boolean isSupported()
com.bumptech.glide.load.engine.ActiveResources$DequeuedResourceCallback
com.eptonic.photocollage.ui.dahjk.ahjd.fah.fha.fragment.BaseFragment:
    public void setTitle()
    public void setTitle(int)
    public boolean already()
androidx.customview.widget.FocusStrategy$BoundsAdapter:
    public abstract void obtainBounds(java.lang.Object,android.graphics.Rect)
androidx.transition.RectEvaluator:
    public android.graphics.Rect evaluate(float,android.graphics.Rect,android.graphics.Rect)
    public android.graphics.Rect mRect
com.eptonic.photocollage.ui.view.PhotoLayout$1:
    public final synthetic com.eptonic.photocollage.ui.view.PhotoLayout this$0
com.google.android.material.shape.ShapePath:
    public void reset(float,float)
    public com.google.android.material.shape.ShapePath$ShadowCompatOperation createShadowCompatOperation(android.graphics.Matrix)
    public float getStartX()
    public float getStartY()
    public float getEndX()
    public float getEndY()
    public final void addShadowCompatOperation(com.google.android.material.shape.ShapePath$ShadowCompatOperation,float,float)
    public final float getCurrentShadowAngle()
    public final float getEndShadowAngle()
    public final void setStartX(float)
    public final void setStartY(float)
    public final void setEndX(float)
    public final void setEndY(float)
    public final void setCurrentShadowAngle(float)
    public final void setEndShadowAngle(float)
androidx.core.text.PrecomputedTextCompat:
    public static void <clinit>()
    public androidx.core.text.PrecomputedTextCompat$Params getParams()
    public final android.text.Spannable mText
    public final androidx.core.text.PrecomputedTextCompat$Params mParams
    public static final java.lang.Object sLock
    public static java.util.concurrent.Executor sExecutor
com.bumptech.glide.load.ImageHeaderParserUtils
androidx.appcompat.widget.AbsActionBarView:
    public static int next(int,int,boolean)
com.eptonic.photocollage.PhotoCollageApplication:
    public static android.content.Context getContext()
    public static com.eptonic.photocollage.model.DaoSession getDaoSession()
    public final void initGreenDao()
androidx.core.view.LayoutInflaterCompat
androidx.core.view.MotionEventCompat
androidx.core.view.NestedScrollingChildHelper:
    public void setNestedScrollingEnabled(boolean)
    public boolean isNestedScrollingEnabled()
    public boolean hasNestedScrollingParent()
    public boolean startNestedScroll(int)
    public void stopNestedScroll()
    public boolean dispatchNestedScroll(int,int,int,int,int[],int)
    public boolean dispatchNestedPreScroll(int,int,int[],int[])
    public final void setNestedScrollingParentForType(int,android.view.ViewParent)
    public final int[] getTempNestedScrollConsumed()
com.google.android.material.internal.CollapsingTextHelper:
    public static boolean isClose(float,float)
    public void setTextSizeInterpolator(android.animation.TimeInterpolator)
    public void setPositionInterpolator(android.animation.TimeInterpolator)
    public void setExpandedTextSize(float)
    public void setExpandedTextColor(android.content.res.ColorStateList)
    public void setExpandedBounds(int,int,int,int)
    public void setExpandedBounds(android.graphics.Rect)
    public void setCollapsedBounds(int,int,int,int)
    public void setCollapsedBounds(android.graphics.Rect)
    public void getCollapsedTextActualBounds(android.graphics.RectF)
    public float getExpandedTextHeight()
    public void setExpandedTextGravity(int)
    public void setCollapsedTextGravity(int)
    public void setCollapsedTextAppearance(int)
    public void setCollapsedTypeface(android.graphics.Typeface)
    public final boolean setState(int[])
    public final boolean isStateful()
    public float getExpansionFraction()
    public void draw(android.graphics.Canvas)
    public void setText(java.lang.CharSequence)
    public android.content.res.ColorStateList getCollapsedTextColor()
    public final void getTextPaintExpanded(android.text.TextPaint)
    public final void getTextPaintCollapsed(android.text.TextPaint)
    public final boolean setCollapsedTypefaceInternal(android.graphics.Typeface)
    public final boolean setExpandedTypefaceInternal(android.graphics.Typeface)
    public final void calculateCurrentOffsets()
    public final int getCurrentExpandedTextColor()
    public final void calculateBaseOffsets()
    public final void interpolateBounds(float)
    public final void ensureExpandedTexture()
    public final void clearTexture()
    public com.google.android.material.resources.CancelableFontCallback expandedFontCallback
    public android.content.res.ColorStateList expandedShadowColor
    public static final boolean USE_SCALING_TEXTURE
com.bumptech.glide.load.data.mediastore.FileService:
    public boolean exists(java.io.File)
    public long length(java.io.File)
    public java.io.File get(java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton:
    public void <init>(android.content.Context,android.util.AttributeSet)
com.eptonic.photocollage.ui.mutitouchh.MultiTouchController$PointInfo:
    public void set(int,float[],float[],float[],int[],int,boolean,long)
    public boolean isMultiTouch()
    public float getMultiTouchDiameterSq()
    public float getMultiTouchDiameter()
    public float getMultiTouchAngle()
    public int getNumTouchPoints()
    public float getX()
    public float[] getXs()
    public float getY()
    public float[] getYs()
    public float[] getPressures()
    public boolean isDown()
    public long getEventTime()
    public final int julery_isqrt(int)
androidx.appcompat.app.AppCompatDelegateImpl:
    public void <init>(android.app.Activity,androidx.appcompat.app.AppCompatCallback)
    public void <init>(android.app.Dialog,androidx.appcompat.app.AppCompatCallback)
    public void attachBaseContext(android.content.Context)
    public void onPostCreate(android.os.Bundle)
    public androidx.appcompat.app.ActionBar getSupportActionBar()
    public final androidx.appcompat.app.ActionBar peekSupportActionBar()
    public final android.content.Context getActionBarThemedContext()
    public android.view.MenuInflater getMenuInflater()
    public android.view.View findViewById(int)
    public void onConfigurationChanged(android.content.res.Configuration)
    public void onStart()
    public void onPostResume()
    public void onSaveInstanceState(android.os.Bundle)
    public void onDestroy()
    public void setTheme(int)
    public void onSubDecorInstalled()
    public final java.lang.CharSequence getTitle()
    public void onPanelClosed(int)
    public void onMenuOpened(int)
    public androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
    public androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback)
    public boolean isHandleNativeActionModesEnabled()
    public boolean onBackPressed()
    public boolean onKeyShortcut(int,android.view.KeyEvent)
    public boolean onKeyUp(int,android.view.KeyEvent)
    public boolean onKeyDown(int,android.view.KeyEvent)
    public android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
    public void closePanel(int)
    public void dismissPopups()
    public int getLocalNightMode()
    public int mapNightMode(int)
    public final void cleanupAutoManagers()
    public final android.view.ViewGroup createSubDecor()
    public final void applyFixedSizeWindow()
    public final boolean shouldInheritContext(android.view.ViewParent)
    public final androidx.appcompat.app.AppCompatActivity tryUnwrapContext()
    public final boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
    public final void reopenMenu(boolean)
    public final boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
    public final boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
    public final boolean onKeyDownPanel(int,android.view.KeyEvent)
    public final boolean onKeyUpPanel(int,android.view.KeyEvent)
    public final int sanitizeWindowFeatureId(int)
    public final int calculateNightMode()
    public final boolean updateForNightMode(int,boolean)
    public final void updateResourcesConfigurationForNightMode(int,boolean)
    public final androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager()
    public final boolean isActivityManifestHandlingUiMode()
com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate:
    public boolean canSwipeDismissView(android.view.View)
    public void onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)
    public com.google.android.material.snackbar.SnackbarManager$Callback managerCallback
com.bumptech.glide.load.model.StringLoader:
    public static android.net.Uri parseUri(java.lang.String)
    public static android.net.Uri toFileUri(java.lang.String)
    public com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.String,int,int,com.bumptech.glide.load.Options)
    public boolean handles()
com.eptonic.photocollage.ui.next.s.xx.xxx.yy.cc.activity.TemplateActivity:
    public final void gotoAppSetting()
com.bumptech.glide.load.model.ModelLoaderRegistry$ModelLoaderCache:
    public void clear()
    public void put(java.lang.Class,java.util.List)
    public java.util.List get(java.lang.Class)
com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl:
    public void setShadowPadding(int,int,int,int)
    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public boolean isCompatPaddingEnabled()
com.eptonic.photocollage.ui.next.s.xx.xxx.yy.cc.activity.MyBaseActivity:
    public static void setStatusBarColor(android.app.Activity,int)
    public void initData()
    public android.widget.ImageView getFunc()
    public android.view.View mToolBar
com.google.android.material.animation.MatrixEvaluator:
    public android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix)
com.eptonic.photocollage.ui.view.sticker.StickerLayout$StickerButtonsClickListener:
    public void <init>(com.eptonic.photocollage.ui.view.sticker.StickerLayout)
androidx.fragment.app.FragmentManagerImpl$5:
    public final synthetic androidx.fragment.app.FragmentManagerImpl this$0
com.eptonic.photocollage.ui.view.sticker.StickerLayout:
    public void addImageSticker(int)
    public void addImageSticker(android.graphics.Bitmap)
    public void addTextSticker(java.lang.String)
    public final void setStickerIcons()
androidx.transition.PathProperty
com.google.android.material.internal.CheckableImageButton$SavedState:
    public final void readFromParcel(android.os.Parcel)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate:
    public void saveOriginalDelegate(android.view.View)
    public androidx.core.view.AccessibilityDelegateCompat getAndRemoveOriginalDelegateForItem(android.view.View)
com.yd.photoeditor.view.MultiTouchHandler$1:
    public com.yd.photoeditor.view.MultiTouchHandler createFromParcel(android.os.Parcel)
    public com.yd.photoeditor.view.MultiTouchHandler[] newArray(int)
androidx.core.graphics.TypefaceCompatUtil
com.bumptech.glide.load.engine.DecodePath$DecodeCallback:
    public abstract com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.engine.Resource)
androidx.appcompat.app.AppCompatDelegateImpl$1:
    public final boolean shouldWrapException(java.lang.Throwable)
androidx.appcompat.app.ResourcesFlusher:
    public static void flush(android.content.res.Resources)
    public static void flushLollipops(android.content.res.Resources)
    public static void flushMarshmallows(android.content.res.Resources)
    public static void flushNougats(android.content.res.Resources)
    public static boolean determineGroups(androidx.constraintlayout.solver.widgets.ConstraintWidget,java.util.List,boolean)
    public static void invalidate(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup)
    public static void setConnection(androidx.constraintlayout.solver.widgets.ConstraintAnchor)
    public static void singleGroup(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer)
    public static void updateSizeDependentWidgets(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,int)
    public static java.lang.String permissionToOp(java.lang.String)
    public static int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)
    public static boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)
    public static void navigateUpTo(android.app.Activity,android.content.Intent)
    public static java.lang.String getParentActivityName(android.app.Activity)
    public static int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)
    public static android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)
    public static android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public static android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])
    public static int modulateColorAlpha(int,float)
    public static androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
    public static androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
    public static int getType(android.content.res.TypedArray,int)
    public static androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
    public static android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public static androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public static androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int)
    public static android.graphics.Shader$TileMode parseTileMode(int)
    public static android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
    public static android.graphics.Typeface getFont(android.content.Context,int)
    public static void getFont(android.content.Context,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler)
    public static android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)
    public static android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)
    public static boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean)
    public static android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int)
    public static android.content.res.ColorStateList getNamedColorStateListFromInt(android.util.TypedValue)
    public static int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)
    public static android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)
    public static void updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
    public static int nextStart(java.lang.String,int)
    public static void addNode(java.util.ArrayList,char,float[])
    public static float[] getFloats(java.lang.String)
    public static void extract(java.lang.String,int,androidx.core.graphics.PathParser$ExtractFloatResult)
    public static java.nio.ByteBuffer mmap(java.io.File)
    public static java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int)
    public static void closeQuietly(java.io.Closeable)
    public static void jumpToCurrentState(android.graphics.drawable.Drawable)
    public static void setAutoMirrored(android.graphics.drawable.Drawable,boolean)
    public static boolean isAutoMirrored(android.graphics.drawable.Drawable)
    public static void setHotspot(android.graphics.drawable.Drawable,float,float)
    public static void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
    public static int getAlpha(android.graphics.drawable.Drawable)
    public static void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
    public static boolean canApplyTheme(android.graphics.drawable.Drawable)
    public static android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
    public static void clearColorFilter(android.graphics.drawable.Drawable)
    public static void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public static android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)
    public static android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable)
    public static boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
    public static int getLayoutDirection(android.graphics.drawable.Drawable)
    public static float clamp(float,float,float)
    public static void beginSection(java.lang.String)
    public static void endSection()
    public static boolean equals(java.lang.Object,java.lang.Object)
    public static varargs int hash(java.lang.Object[])
    public static void checkArgument(boolean,java.lang.Object)
    public static void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)
    public static int getAbsoluteGravity(int,int)
    public static void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)
    public static void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)
    public static int getMarginStart(android.view.ViewGroup$MarginLayoutParams)
    public static int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
    public static android.view.MenuItem setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider)
    public static void setContentDescription(android.view.MenuItem,java.lang.CharSequence)
    public static void setTooltipText(android.view.MenuItem,java.lang.CharSequence)
    public static void setNumericShortcut(android.view.MenuItem,char,int)
    public static void setAlphabeticShortcut(android.view.MenuItem,char,int)
    public static void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
    public static void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
    public static int getActionMasked(android.view.MotionEvent)
    public static boolean isFromSource(android.view.MotionEvent,int)
    public static boolean isTransitionGroup(android.view.ViewGroup)
    public static boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent)
    public static boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)
    public static void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int)
    public static void onStopNestedScroll(android.view.ViewParent,android.view.View,int)
    public static void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int,int[])
    public static void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int)
    public static boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
    public static boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
    public static void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
    public static int getContentChangeTypes(android.view.accessibility.AccessibilityEvent)
    public static void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int)
    public static void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)
    public static void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)
    public static void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
    public static android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)
    public static void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
    public static android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
    public static void onPull(android.widget.EdgeEffect,float,float)
    public static android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
    public static void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
    public static android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
    public static void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
    public static void scrollListBy(android.widget.ListView,int)
    public static void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
    public static void setOverlapAnchor(android.widget.PopupWindow,boolean)
    public static void setWindowLayoutType(android.widget.PopupWindow,int)
    public static void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
    public static void setTextAppearance(android.widget.TextView,int)
    public static android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
    public static int getFirstBaselineToTopHeight(android.widget.TextView)
    public static int getLastBaselineToBottomHeight(android.widget.TextView)
    public static void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)
    public static void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat)
    public static android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView)
    public static int getTextDirection(android.text.TextDirectionHeuristic)
    public static void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
    public static void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
    public static java.lang.Object findNextFocusInRelativeDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,int,boolean,boolean)
    public static java.lang.Object getNextFocusable(java.lang.Object,java.util.ArrayList,boolean)
    public static java.lang.Object getPreviousFocusable(java.lang.Object,java.util.ArrayList,boolean)
    public static java.lang.Object findNextFocusInAbsoluteDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,android.graphics.Rect,int)
    public static boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)
    public static int getWeightedDistanceFor(int,int)
    public static boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect)
    public static int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect)
    public static int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect)
    public static int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect)
    public static void addPauseListener(android.animation.Animator,android.animation.AnimatorListenerAdapter)
    public static void pause(android.animation.Animator)
    public static void resume(android.animation.Animator)
    public static android.animation.PropertyValuesHolder ofPointF(android.util.Property,android.graphics.Path)
    public static void suppressLayout(android.view.ViewGroup,boolean)
    public static void cancelLayoutTransition(android.animation.LayoutTransition)
    public static android.view.animation.Interpolator loadInterpolator(android.content.Context,int)
    public static android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser)
    public static android.animation.Animator loadAnimator(android.content.Context,int)
    public static android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int)
    public static android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float)
    public static void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser)
    public static void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser)
    public static void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)
    public static android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float)
    public static android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
    public static int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)
    public static int inferValueTypeFromValues(android.content.res.TypedArray,int,int)
    public static android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)
    public static void distributeKeyframes(android.animation.Keyframe[],float,int,int)
    public static android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser)
    public static android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser)
    public static com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.util.List,java.nio.ByteBuffer)
    public static com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.util.List,com.bumptech.glide.load.data.ParcelFileDescriptorRewinder,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)
    public static com.bumptech.glide.load.ImageHeaderParser$ImageType getTypeInternal(java.util.List,com.bumptech.glide.load.ImageHeaderParserUtils$TypeReader)
    public static int getOrientation(java.util.List,com.bumptech.glide.load.data.ParcelFileDescriptorRewinder,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)
    public static int getOrientationInternal(java.util.List,com.bumptech.glide.load.ImageHeaderParserUtils$OrientationReader)
    public static boolean isVideoUri(android.net.Uri)
    public static boolean isMediaStoreVideoUri(android.net.Uri)
    public static boolean isMediaStoreImageUri(android.net.Uri)
    public static int availableProcessors()
    public static int getCoreCountPre17()
    public static java.lang.Object checkNotNull1(java.lang.Object)
    public static java.lang.String checkNotEmpty(java.lang.String)
    public static java.util.Collection checkNotEmpty(java.util.Collection)
    public static void beginSection1()
    public static void beginSectionFormat()
    public static void beginSectionFormata()
    public static void endSection1()
    public static long getLastGenExtVersion(android.content.Context)
    public static void setLastGenExtVersion(android.content.Context,long)
    public static long getLastGenExtSize(android.content.Context)
    public static void setLastGenExtSize(android.content.Context,long)
    public static android.content.SharedPreferences getSp(android.content.Context)
    public static int copy(java.io.InputStream,java.io.OutputStream)
    public static int decodeCopy(java.io.InputStream,java.io.OutputStream)
    public static com.eptonic.photocollage.model.TemplateItem collage_2_0()
    public static com.eptonic.photocollage.model.TemplateItem collage_2_1()
    public static com.eptonic.photocollage.model.TemplateItem collage_2_2()
    public static com.eptonic.photocollage.model.TemplateItem collage_2_3()
    public static com.eptonic.photocollage.model.TemplateItem collage_2_4()
    public static com.eptonic.photocollage.model.TemplateItem collage_2_5()
    public static com.eptonic.photocollage.model.TemplateItem collage_2_6()
    public static com.eptonic.photocollage.model.TemplateItem collage_2_7()
    public static com.eptonic.photocollage.model.TemplateItem collage_2_8()
    public static com.eptonic.photocollage.model.TemplateItem collage_2_9()
    public static com.eptonic.photocollage.model.TemplateItem collage_2_10()
    public static com.eptonic.photocollage.model.TemplateItem collage_2_11()
    public static void trapToRect(android.graphics.RectF,float[])
    public static java.lang.reflect.Method sSetLayoutDirectionMethod
    public static boolean sSetLayoutDirectionMethodFetched
    public static java.lang.reflect.Method sGetLayoutDirectionMethod
    public static boolean sGetLayoutDirectionMethodFetched
    public static java.lang.reflect.Field sLayoutInflaterFactory2Field
    public static boolean sCheckedField
    public static java.lang.reflect.Field sButtonDrawableField
    public static boolean sButtonDrawableFieldFetched
    public static java.lang.reflect.Method sSetWindowLayoutTypeMethod
    public static boolean sSetWindowLayoutTypeMethodAttempted
    public static java.lang.reflect.Field sOverlapAnchorField
    public static boolean sOverlapAnchorFieldAttempted
    public static android.animation.LayoutTransition sEmptyLayoutTransition
    public static java.lang.reflect.Field sLayoutSuppressedField
    public static boolean sLayoutSuppressedFieldFetched
    public static java.lang.reflect.Method sCancelMethod
    public static boolean sCancelMethodFetched
com.yd.photoeditor.vv.DialogUtils
com.bumptech.glide.util.Util:
    public static java.lang.String bytesToHex(byte[],char[])
    public static int getBytesPerPixel(android.graphics.Bitmap$Config)
    public static boolean isValidDimension(int)
    public static int hashCode(int,int)
    public static int hashCode(float,int)
    public static int hashCode(boolean,int)
androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector:
    public void doBeforeTextChanged(android.widget.AutoCompleteTextView)
    public void doAfterTextChanged(android.widget.AutoCompleteTextView)
    public void ensureImeVisible(android.widget.AutoCompleteTextView,boolean)
org.greenrobot.greendao.DaoException:
    public void safeInitCause(java.lang.Throwable)
androidx.core.view.accessibility.AccessibilityEventCompat
com.bumptech.glide.load.engine.DecodeHelper:
    public void init(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.Key,int,int,com.bumptech.glide.load.engine.DiskCacheStrategy,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.Options,java.util.Map,boolean,boolean,com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider)
    public void clear()
    public com.bumptech.glide.load.engine.DiskCacheStrategy getDiskCacheStrategy()
    public com.bumptech.glide.Priority getPriority()
    public com.bumptech.glide.load.Options getOptions()
    public com.bumptech.glide.load.Key getSignature()
    public int getWidth()
    public int getHeight()
    public com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool getArrayPool()
    public java.lang.Class getTranscodeClass()
    public java.lang.Class getModelClass()
    public java.util.List getRegisteredResourceClasses()
    public boolean isScaleOnlyOrNoTransform()
    public boolean isResourceEncoderAvailable(com.bumptech.glide.load.engine.Resource)
    public com.bumptech.glide.load.ResourceEncoder getResultEncoder(com.bumptech.glide.load.engine.Resource)
    public java.util.List getModelLoaders(java.io.File)
    public boolean isSourceKey(com.bumptech.glide.load.Key)
    public com.bumptech.glide.load.Encoder getSourceEncoder(java.lang.Object)
androidx.core.content.res.FontResourcesParserCompat
com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener:
    public abstract void onDayClick(long)
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable:
    public void cancel()
    public void post()
androidx.fragment.app.FragmentActivity$HostCallbacks:
    public void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
    public boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment)
    public android.view.LayoutInflater onGetLayoutInflater()
    public androidx.fragment.app.FragmentActivity onGetHost()
    public void onSupportInvalidateOptionsMenu()
    public boolean onHasWindowAnimations()
    public int onGetWindowAnimations()
    public void onAttachFragment(androidx.fragment.app.Fragment)
    public java.lang.Object onGetHost()
androidx.recyclerview.widget.AdapterHelper:
    public void <init>(androidx.recyclerview.widget.AdapterHelper$Callback,boolean)
    public void reset()
    public boolean hasAnyUpdateTypes(int)
    public int findPositionOffset(int)
    public boolean onItemRangeInserted(int,int)
    public int applyPendingUpdatesToPosition(int)
    public boolean hasUpdates()
    public final void applyMove(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public final void applyRemove(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public final void applyUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public final void applyAdd(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public java.lang.Runnable mOnItemProcessedCallback
androidx.core.widget.TextViewCompat
com.bumptech.glide.load.resource.transcode.UnitTranscoder:
    public static com.bumptech.glide.load.resource.transcode.ResourceTranscoder get()
androidx.core.graphics.PathParser
com.google.android.material.datepicker.MaterialCalendarGridView:
    public static boolean skipMonth(java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long)
    public static int horizontalMidPoint(android.view.View)
    public final void gainFocus(int,android.graphics.Rect)
androidx.core.graphics.TypefaceCompatBaseImpl$2
androidx.core.content.PermissionChecker
com.bumptech.glide.load.engine.DecodeJob$DeferredEncodeManager:
    public void init(com.bumptech.glide.load.Key,com.bumptech.glide.load.ResourceEncoder,com.bumptech.glide.load.engine.LockedResource)
    public void encode(com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider,com.bumptech.glide.load.Options)
    public boolean hasResourceToEncode()
    public void clear()
org.greenrobot.greendao.query.AbstractQuery:
    public static java.lang.String[] toStringArray(java.lang.Object[])
    public void checkThread()
androidx.cardview.widget.CardViewDelegate:
    public abstract void setMinWidthHeightInternal(int,int)
    public abstract android.view.View getCardView()
com.bumptech.glide.load.Option:
    public static com.bumptech.glide.load.Option memory(java.lang.String)
    public static com.bumptech.glide.load.Option disk(java.lang.String,java.lang.Object,com.bumptech.glide.load.Option$CacheKeyUpdater)
    public static com.bumptech.glide.load.Option$CacheKeyUpdater emptyUpdater()
    public java.lang.Object getDefaultValue()
    public void update(java.lang.Object,java.security.MessageDigest)
    public final byte[] getKeyBytes()
androidx.transition.AutoTransition:
    public final void init()
androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager
androidx.transition.ViewGroupUtilsApi14$1
com.bumptech.glide.load.engine.Engine$EngineJobFactory:
    public com.bumptech.glide.load.engine.EngineJob build(com.bumptech.glide.load.Key,boolean,boolean,boolean,boolean)
androidx.lifecycle.Lifecycle:
    public abstract void removeObserver(androidx.lifecycle.LifecycleObserver)
    public abstract androidx.lifecycle.Lifecycle$State getCurrentState()
    public java.util.concurrent.atomic.AtomicReference mInternalScopeRef
com.eptonic.photocollage.ui.view.sticker.Sticker:
    public android.graphics.Matrix getMatrix()
    public com.eptonic.photocollage.ui.view.sticker.Sticker setMatrix(android.graphics.Matrix)
    public void getMappedPoints(float[],float[])
    public void getCenterPoint(android.graphics.PointF)
    public float getCurrentAngle()
    public float getMatrixAngle(android.graphics.Matrix)
    public float getMatrixValue(android.graphics.Matrix,int)
    public boolean contains(float[])
    public boolean isFlippedHorizontally
    public boolean isFlippedVertically
com.eptonic.photocollage.ui.next.s.xx.xxx.yy.cc.activity.PCBaseTemplateDetailActivity$2:
    public varargs java.io.File doInBackground()
    public void onPostExecute(java.io.File)
    public java.lang.String errMsg
androidx.appcompat.view.ActionMode:
    public void setTag(java.lang.Object)
    public java.lang.Object getTag()
    public boolean getTitleOptionalHint()
com.eptonic.photocollage.ui.view.frame.FramePhotoLayout:
    public com.eptonic.photocollage.ui.view.frame.FrameImageView getSelectedFrameImageView(com.eptonic.photocollage.ui.view.frame.FrameImageView,android.view.DragEvent)
    public void restoreInstanceState(android.os.Bundle)
    public void build(int,int,float,float,float)
    public void recycleImages()
    public final void createQuickAction()
    public final boolean isNotLargeThan1Gb()
    public final com.eptonic.photocollage.ui.view.frame.FrameImageView addPhotoItemView(com.eptonic.photocollage.ui.view.template.PhotoItem,float,float,float)
com.bumptech.glide.load.model.UrlUriLoader:
    public com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options)
    public boolean handles(android.net.Uri)
androidx.recyclerview.widget.RecyclerView$OnFlingListener:
    public abstract boolean onFling(int,int)
androidx.recyclerview.widget.GapWorker:
    public static boolean isPrefetchPositionAttached(androidx.recyclerview.widget.RecyclerView,int)
    public void add(androidx.recyclerview.widget.RecyclerView)
    public void remove(androidx.recyclerview.widget.RecyclerView)
    public final void buildTaskList()
    public final void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long)
    public final void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long)
    public final void flushTasksWithDeadline(long)
androidx.constraintlayout.solver.Pools$SimplePool:
    public void releaseAll(java.lang.Object[],int)
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool:
    public com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key create()
com.google.android.material.appbar.MaterialToolbar:
    public final void initBackground(android.content.Context)
androidx.appcompat.widget.AppCompatImageHelper:
    public boolean hasOverlappingRendering()
    public android.content.res.ColorStateList getSupportImageTintList()
    public android.graphics.PorterDuff$Mode getSupportImageTintMode()
    public final boolean shouldApplyFrameworkTintUsingColorFilter()
    public final boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable)
    public androidx.appcompat.widget.TintInfo mInternalImageTint
    public androidx.appcompat.widget.TintInfo mTmpInfo
com.yd.photoeditor.imageprocessing.filter.ImageRender$9:
    public final synthetic com.yd.photoeditor.imageprocessing.filter.ImageRender this$0
androidx.fragment.app.FragmentController:
    public static androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback)
    public androidx.fragment.app.FragmentManager getSupportFragmentManager()
    public androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
    public void attachHost(androidx.fragment.app.Fragment)
    public android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
    public android.os.Parcelable saveAllState()
    public void restoreSaveState(android.os.Parcelable)
    public void dispatchCreate()
    public void dispatchActivityCreated()
    public void dispatchStart()
    public void dispatchResume()
    public void dispatchPause()
    public void dispatchStop()
    public void dispatchDestroy()
    public void dispatchMultiWindowModeChanged(boolean)
    public void dispatchPictureInPictureModeChanged(boolean)
    public void dispatchConfigurationChanged(android.content.res.Configuration)
    public void dispatchLowMemory()
    public boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
    public boolean dispatchPrepareOptionsMenu(android.view.Menu)
    public boolean dispatchOptionsItemSelected(android.view.MenuItem)
    public boolean dispatchContextItemSelected(android.view.MenuItem)
    public void dispatchOptionsMenuClosed(android.view.Menu)
    public boolean execPendingActions()
com.yd.photoeditor.imageprocessing.filter.colour.P13:
    public void <init>(float,float[])
    public void setIntensity(float)
    public void setColor(float[])
com.eptonic.photocollage.ui.wrapper.dah.ghjf.gfhs.fhsj.ghsj.hfjsh.fhsj.fhsj.hfjs.fdj.sjhfs.fgsj.jgks.vbb.uiManager.FreePhotoUiManager:
    public static synthetic com.eptonic.photocollage.ui.view.sticker.StickerLayout access$000(com.eptonic.photocollage.ui.wrapper.dah.ghjf.gfhs.fhsj.ghsj.hfjsh.fhsj.fhsj.hfjs.fdj.sjhfs.fgsj.jgks.vbb.uiManager.FreePhotoUiManager)
    public static synthetic android.widget.ImageView access$100(com.eptonic.photocollage.ui.wrapper.dah.ghjf.gfhs.fhsj.ghsj.hfjsh.fhsj.fhsj.hfjs.fdj.sjhfs.fgsj.jgks.vbb.uiManager.FreePhotoUiManager)
    public static synthetic android.widget.SeekBar access$200(com.eptonic.photocollage.ui.wrapper.dah.ghjf.gfhs.fhsj.ghsj.hfjsh.fhsj.fhsj.hfjs.fdj.sjhfs.fgsj.jgks.vbb.uiManager.FreePhotoUiManager)
    public static synthetic com.eptonic.photocollage.ui.dialog.AddTextDialog access$300(com.eptonic.photocollage.ui.wrapper.dah.ghjf.gfhs.fhsj.ghsj.hfjsh.fhsj.fhsj.hfjs.fdj.sjhfs.fgsj.jgks.vbb.uiManager.FreePhotoUiManager)
    public static synthetic int access$408(com.eptonic.photocollage.ui.wrapper.dah.ghjf.gfhs.fhsj.ghsj.hfjsh.fhsj.fhsj.hfjs.fdj.sjhfs.fgsj.jgks.vbb.uiManager.FreePhotoUiManager)
    public void initView()
    public void initTab()
    public void pickMultipleImageFromGallery()
    public void onProgressChange(android.widget.SeekBar,int)
    public void onStickerAdded(com.eptonic.photocollage.ui.view.sticker.Sticker)
    public void onStickerClicked(com.eptonic.photocollage.ui.view.sticker.Sticker)
    public void onStickerDeleted(com.eptonic.photocollage.ui.view.sticker.Sticker)
    public void onStickerDragFinished(com.eptonic.photocollage.ui.view.sticker.Sticker)
    public void onStickerTouchedDown(com.eptonic.photocollage.ui.view.sticker.Sticker)
    public void onStickerZoomFinished(com.eptonic.photocollage.ui.view.sticker.Sticker)
    public void onStickerDoubleTapped(com.eptonic.photocollage.ui.view.sticker.Sticker)
    public void saveImage(android.graphics.Bitmap,android.content.Context)
    public void onImageEdit()
    public final void getMultipleImagesAsync(android.net.Uri[],android.content.Context)
    public final void saveTempImage(android.graphics.Bitmap,android.app.Activity)
    public int mCurrentTab
com.bumptech.glide.request.transition.Transition$ViewAdapter
com.bumptech.glide.load.engine.DataCacheWriter:
    public boolean write(java.io.File)
com.bumptech.glide.load.resource.bitmap.BitmapResource:
    public android.graphics.Bitmap get()
com.google.android.material.bottomsheet.BottomSheetBehavior:
    public static synthetic com.google.android.material.shape.MaterialShapeDrawable access$000(com.google.android.material.bottomsheet.BottomSheetBehavior)
    public static synthetic boolean access$200(com.google.android.material.bottomsheet.BottomSheetBehavior)
    public static synthetic int access$400(com.google.android.material.bottomsheet.BottomSheetBehavior)
    public static synthetic boolean access$500(com.google.android.material.bottomsheet.BottomSheetBehavior)
    public void setFitToContents(boolean)
    public final void setPeekHeight(int,boolean)
    public void setHalfExpandedRatio(float)
    public void setExpandedOffset(int)
    public void setHideable(boolean)
    public void setSkipCollapsed(boolean)
    public void setSaveFlags(int)
    public final void calculateHalfExpandedOffset()
    public final void reset()
    public final void restoreOptionalState(com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState)
    public final void createMaterialShapeDrawable(android.content.Context,android.util.AttributeSet,boolean)
    public final void createShapeValueAnimator()
    public final float getYVelocity()
com.yd.photoeditor.imageprocessing.filter.TwoPassRender
com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory$1:
    public java.io.InputStream convert(byte[])
    public final synthetic com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory this$0
androidx.constraintlayout.solver.widgets.ChainHead:
    public static boolean isMatchConstraintEqualityCandidate(androidx.constraintlayout.solver.widgets.ConstraintWidget,int)
    public void define()
    public final void defineChainProperties()
com.eptonic.photocollage.model.PhotoStickerSaveDataDao:
    public static void createTable(org.greenrobot.greendao.database.Database,boolean)
    public static void dropTable(org.greenrobot.greendao.database.Database,boolean)
    public final void bindValues(org.greenrobot.greendao.database.DatabaseStatement,com.eptonic.photocollage.model.PhotoStickerSaveData)
    public final void bindValues(android.database.sqlite.SQLiteStatement,com.eptonic.photocollage.model.PhotoStickerSaveData)
    public java.lang.Void readKey()
    public com.eptonic.photocollage.model.PhotoStickerSaveData readEntity(android.database.Cursor,int)
    public final java.lang.Void updateKeyAfterInsert()
    public java.lang.Object updateKeyAfterInsert(java.lang.Object,long)
    public void bindValues(android.database.sqlite.SQLiteStatement,java.lang.Object)
    public void bindValues(org.greenrobot.greendao.database.DatabaseStatement,java.lang.Object)
    public java.lang.Object readKey(android.database.Cursor,int)
com.bumptech.glide.manager.RequestManagerRetriever$1:
    public com.bumptech.glide.RequestManager build(com.bumptech.glide.Glide,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode,android.content.Context)
androidx.fragment.app.BackStackState$1:
    public androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel)
    public androidx.fragment.app.BackStackState[] newArray(int)
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback:
    public androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback wrap(android.graphics.drawable.Drawable$Callback)
    public android.graphics.drawable.Drawable$Callback unwrap()
com.bumptech.glide.request.target.DrawableImageViewTarget:
    public void setResource(android.graphics.drawable.Drawable)
com.eptonic.photocollage.adapter.TemplateViewHolder$1:
    public final synthetic com.eptonic.photocollage.adapter.TemplateViewHolder this$0
androidx.appcompat.widget.ActionBarOverlayLayout:
    public boolean isInOverlayMode()
    public androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams()
    public androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    public final androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)
    public final void postRemoveActionBarHideOffset()
    public final void postAddActionBarHideOffset()
    public final void removeActionBarHideOffset()
    public final void addActionBarHideOffset()
    public final boolean shouldHideActionBarOnFling(float)
com.bumptech.glide.load.engine.Jobs:
    public com.bumptech.glide.load.engine.EngineJob get(com.bumptech.glide.load.Key,boolean)
    public void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineJob)
    public void removeIfCurrent(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineJob)
com.bumptech.glide.load.model.MediaStoreFileLoader:
    public com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri)
    public boolean handles(android.net.Uri)
com.bumptech.glide.request.target.BitmapImageViewTarget:
    public void setResource(android.graphics.Bitmap)
com.google.android.material.ripple.RippleDrawableCompat
androidx.core.text.BidiFormatter$Builder
com.bumptech.glide.util.MultiClassKey:
    public void set(java.lang.Class,java.lang.Class,java.lang.Class)
com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder:
    public boolean handles(java.io.InputStream)
    public com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int,com.bumptech.glide.load.Options)
androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder:
    public final androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback
androidx.lifecycle.LiveData$ObserverWrapper:
    public void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer)
    public abstract boolean shouldBeActive()
    public boolean isAttachedTo(androidx.lifecycle.LifecycleOwner)
    public void detachObserver()
com.yd.photoeditor.vv.DialogUtils$OnAddImageButtonClickListener
com.bumptech.glide.load.resource.bytes.ByteBufferRewinder:
    public java.nio.ByteBuffer rewindAndGet()
com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapDecoder:
    public boolean handles(java.nio.ByteBuffer)
    public com.bumptech.glide.load.engine.Resource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.load.Options)
com.bumptech.glide.util.LruCache:
    public void clearMemory()
    public final void evict()
    public final long initialMaxSize
androidx.arch.core.executor.DefaultTaskExecutor$1:
    public final synthetic androidx.arch.core.executor.DefaultTaskExecutor this$0
androidx.core.util.Pools$SimplePool:
    public final boolean isInPool(java.lang.Object)
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    public final boolean doCheck(java.lang.CharSequence,int,int)
com.yd.photoeditor.actions.MaskAction:
    public static void <clinit>()
    public abstract int getMaskLayoutRes()
    public void adjustImageMaskLayout(int,int)
    public static final java.lang.String TAG
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat:
    public boolean perform(android.view.View,android.os.Bundle)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat createReplacementAction(java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)
    public final java.lang.CharSequence mLabel
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_FOCUS
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_FOCUS
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SELECT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_SELECTION
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_LONG_CLICK
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_ACCESSIBILITY_FOCUS
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_ACCESSIBILITY_FOCUS
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_HTML_ELEMENT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_HTML_ELEMENT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_FORWARD
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_BACKWARD
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COPY
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PASTE
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CUT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_SELECTION
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_TEXT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_ON_SCREEN
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_TO_POSITION
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_UP
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_LEFT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_DOWN
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_RIGHT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CONTEXT_CLICK
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_PROGRESS
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_MOVE_WINDOW
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_TOOLTIP
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_HIDE_TOOLTIP
com.bumptech.glide.util.ExceptionCatchingInputStream:
    public void setInputStream(java.io.InputStream)
    public java.io.IOException getException()
com.yd.photoeditor.model.XXXXXXXXXXXXXX:
    public void setTitle(java.lang.String)
    public java.lang.String getTitle()
    public void setSelected(boolean)
    public void setShowingType(int)
    public int getShowingType()
    public void setThumbnail(java.lang.String)
    public java.lang.String getThumbnail()
    public void setSelectedThumbnail(java.lang.String)
    public boolean mSelected
    public java.lang.String mSeectedNail
com.eptonic.photocollage.ui.mutitouchh.ImageEntity:
    public void setBorderColor(int)
    public void setDrawImageBorder(boolean)
    public int getBorderColor()
    public boolean isDrawImageBorder()
    public void setSticker(boolean)
    public void setShadowSize(int)
    public void setDrawShadow(boolean)
    public void setInitScaleFactor(double)
    public void setBorderSize(float)
    public void draw(android.graphics.Canvas)
    public void draw(android.graphics.Canvas,float)
    public boolean isNull()
    public void unload()
    public void load(android.content.Context)
    public void load(android.content.Context,float,float)
    public void resetPrimaryInfo()
    public void readFromParcel(android.os.Parcel)
    public final void drawShadow(android.graphics.Canvas,float)
androidx.recyclerview.widget.RecyclerView$Adapter:
    public void onBindViewHolder1(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
    public final androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int)
    public final void bindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
    public int getItemViewType()
    public void setHasStableIds(boolean)
    public final boolean hasStableIds()
    public void onViewRecycled()
    public boolean onFailedToRecycleView()
    public void onViewAttachedToWindow()
    public void onViewDetachedFromWindow()
    public final boolean hasObservers()
    public void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver)
    public void unregisterAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver)
    public void onAttachedToRecyclerView()
    public void onDetachedFromRecyclerView()
    public final void notifyDataSetChanged()
    public final void notifyItemInserted(int)
com.yd.photoeditor.listener.OnBottomMenuItemClickListener:
    public abstract void onEditorItemClick(int,com.yd.photoeditor.model.XXXXXXXXXXXXXX)
androidx.fragment.app.Fragment:
    public final void restoreViewState(android.os.Bundle)
    public final android.os.Bundle getArguments()
    public final boolean isStateSaved()
    public final androidx.fragment.app.Fragment getTargetFragment()
    public final android.content.Context requireContext()
    public final androidx.fragment.app.FragmentActivity getActivity()
    public final androidx.fragment.app.FragmentActivity requireActivity()
    public final java.lang.Object getHost()
    public final java.lang.String getString(int)
    public final androidx.fragment.app.FragmentManager getFragmentManager()
    public final androidx.fragment.app.Fragment getParentFragment()
    public void onHiddenChanged()
    public final boolean getRetainInstance()
    public void onActivityResult()
    public void onRequestPermissionsResult()
    public android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
    public android.view.LayoutInflater getLayoutInflater()
    public void onInflate()
    public void onAttachFragment()
    public void onAttach()
    public android.view.animation.Animation onCreateAnimation()
    public android.animation.Animator onCreateAnimator()
    public void restoreChildFragmentState(android.os.Bundle)
    public void onViewCreated()
    public android.view.View getView()
    public void onActivityCreated()
    public void onViewStateRestored()
    public void onResume()
    public void onMultiWindowModeChanged()
    public void onPictureInPictureModeChanged()
    public void onPrimaryNavigationFragmentChanged()
    public void onPause()
    public void onDestroyView()
    public void initState()
    public void onCreateOptionsMenu()
    public void onPrepareOptionsMenu()
    public void onDestroyOptionsMenu()
    public boolean onOptionsItemSelected()
    public void onOptionsMenuClosed()
    public boolean onContextItemSelected()
    public java.lang.Object getReturnTransition()
    public java.lang.Object getReenterTransition()
    public java.lang.Object getSharedElementReturnTransition()
    public boolean getAllowEnterTransitionOverlap()
    public boolean getAllowReturnTransitionOverlap()
    public void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
    public androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
    public void performAttach()
    public void performCreate(android.os.Bundle)
    public void performActivityCreated(android.os.Bundle)
    public void performStart()
    public void performResume()
    public void noteStateNotSaved()
    public void performPrimaryNavigationFragmentChanged()
    public void performMultiWindowModeChanged(boolean)
    public void performPictureInPictureModeChanged(boolean)
    public void performConfigurationChanged(android.content.res.Configuration)
    public void performLowMemory()
    public boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
    public boolean performPrepareOptionsMenu(android.view.Menu)
    public boolean performOptionsItemSelected(android.view.MenuItem)
    public boolean performContextItemSelected(android.view.MenuItem)
    public void performOptionsMenuClosed(android.view.Menu)
    public void performSaveInstanceState(android.os.Bundle)
    public void performPause()
    public void performStop()
    public void performDestroyView()
    public void performDestroy()
    public void performDetach()
    public void setNextTransition(int,int)
    public void getEnterTransitionCallback()
    public void getExitTransitionCallback()
    public void setStateAfterAnimating(int)
    public boolean isPostponed()
    public java.lang.Runnable mPostponedDurationRunnable
    public int mContentLayoutId
androidx.core.widget.NestedScrollView:
    public void dispatchNestedScroll(int,int,int,int,int[],int,int[])
    public void stopNestedScroll(int)
    public boolean pageScroll(int)
    public final void smoothScrollTo(int,int)
    public final void initScrollView()
    public final boolean canScroll()
    public final boolean inChild(int,int)
    public final void initOrResetVelocityTracker()
    public final void initVelocityTrackerIfNotExists()
    public final android.view.View findFocusableViewInBounds(boolean,int,int)
    public final boolean isOffScreen(android.view.View)
    public final boolean scrollToChildRect(android.graphics.Rect,boolean)
com.eptonic.photocollage.adapter.GalleryAlbumAdapter:
    public static synthetic com.eptonic.photocollage.presenter.listener.OnItemClickListener access$200(com.eptonic.photocollage.adapter.GalleryAlbumAdapter)
    public void setOnItemClickListener(com.eptonic.photocollage.presenter.listener.OnItemClickListener)
    public com.eptonic.photocollage.adapter.GalleryAlbumAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup)
    public void onBindViewHolder(com.eptonic.photocollage.adapter.GalleryAlbumAdapter$ViewHolder,int)
    public final android.content.Context mContext
    public final int mType
com.bumptech.glide.load.engine.ActiveResources:
    public void <init>(boolean,java.util.concurrent.Executor)
    public void cleanReferenceQueue()
    public final java.util.concurrent.Executor monitorClearedResourcesExecutor
    public volatile boolean isShutdown
    public volatile com.bumptech.glide.load.engine.ActiveResources$DequeuedResourceCallback cb
com.bumptech.glide.manager.RequestManagerFragment:
    public void <init>(com.bumptech.glide.manager.ActivityFragmentLifecycle)
    public void setRequestManager(com.bumptech.glide.RequestManager)
    public com.bumptech.glide.manager.ActivityFragmentLifecycle getGlideLifecycle()
    public com.bumptech.glide.RequestManager getRequestManager()
    public com.bumptech.glide.manager.RequestManagerTreeNode getRequestManagerTreeNode()
    public java.util.Set getDescendantRequestManagerFragments()
    public void setParentFragmentHint(android.app.Fragment)
    public final void addChildRequestManagerFragment(com.bumptech.glide.manager.RequestManagerFragment)
    public final void removeChildRequestManagerFragment(com.bumptech.glide.manager.RequestManagerFragment)
    public final android.app.Fragment getParentFragmentUsingHint()
    public final boolean isDescendant(android.app.Fragment)
androidx.appcompat.app.AlertDialog:
    public android.widget.ListView getListView()
com.google.android.material.datepicker.CalendarItemStyle:
    public int getTopInset()
    public int getBottomInset()
androidx.collection.LruCache:
    public void entryRemoved()
    public java.lang.Object create()
    public int sizeOf()
    public final int safeSizeOf(java.lang.Object,java.lang.Object)
    public int createCount
com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider:
    public abstract com.bumptech.glide.load.engine.cache.DiskCache getDiskCache()
androidx.appcompat.widget.AppCompatImageView:
    public void <init>(android.content.Context,android.util.AttributeSet)
com.eptonic.photocollage.adapter.SaveAdapter$ViewHolder:
    public final synthetic com.eptonic.photocollage.adapter.SaveAdapter this$0
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate:
    public androidx.core.view.AccessibilityDelegateCompat getItemDelegate()
com.bumptech.glide.load.model.UnitModelLoader$Factory:
    public static com.bumptech.glide.load.model.UnitModelLoader$Factory getInstance()
com.bumptech.glide.manager.DefaultConnectivityMonitorFactory:
    public com.bumptech.glide.manager.ConnectivityMonitor build(android.content.Context,com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener)
androidx.constraintlayout.solver.ArrayLinkedVariables:
    public final boolean containsKey(androidx.constraintlayout.solver.SolverVariable)
    public void invert()
    public void divideByAmount(float)
    public androidx.constraintlayout.solver.SolverVariable chooseSubject(androidx.constraintlayout.solver.LinearSystem)
    public final void updateFromRow(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.ArrayRow,boolean)
    public void updateFromSystem(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.ArrayRow[])
androidx.lifecycle.ReportFragment:
    public final void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
    public final void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
    public final void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
com.bumptech.glide.load.engine.EngineJob$ResourceCallbacksAndExecutors:
    public void <init>(java.util.List)
    public static com.bumptech.glide.load.engine.EngineJob$ResourceCallbackAndExecutor defaultCallbackAndExecutor(com.bumptech.glide.request.ResourceCallback)
    public void add(com.bumptech.glide.request.ResourceCallback,java.util.concurrent.Executor)
    public void remove(com.bumptech.glide.request.ResourceCallback)
    public boolean contains(com.bumptech.glide.request.ResourceCallback)
    public int size()
    public void clear()
    public com.bumptech.glide.load.engine.EngineJob$ResourceCallbacksAndExecutors copy()
androidx.appcompat.widget.ActionBarContextView$1:
    public final synthetic androidx.appcompat.widget.ActionBarContextView this$0
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$KeyPool:
    public com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key create()
com.eptonic.photocollage.resEncryption.utils.EDCoder:
    public static java.security.Key getKey(byte[])
com.bumptech.glide.load.resource.bitmap.TransformationUtils:
    public static java.util.concurrent.locks.Lock getBitmapDrawableLock()
    public static void setAlpha(android.graphics.Bitmap,android.graphics.Bitmap)
    public static int getExifOrientationDegrees(int)
    public static android.graphics.Bitmap rotateImageExif(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int)
    public static boolean isExifOrientationRequired(int)
    public static void clear(android.graphics.Canvas)
    public static void initializeMatrixForRotation(int,android.graphics.Matrix)
    public static final android.graphics.Paint CIRCLE_CROP_SHAPE_PAINT
com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider:
    public abstract android.graphics.Bitmap obtain(int,int,android.graphics.Bitmap$Config)
    public abstract void release(android.graphics.Bitmap)
    public abstract byte[] obtainByteArray(int)
    public abstract void release(byte[])
    public abstract int[] obtainIntArray(int)
    public abstract void release(int[])
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry:
    public java.lang.String getFileName()
    public int getWeight()
    public boolean isItalic()
    public java.lang.String getVariationSettings()
    public int getTtcIndex()
    public int getResourceId()
com.eptonic.photocollage.ui.dahjk.ahjd.fah.fha.fragment.GalleryAlbumFragment:
    public static synthetic void access$000(com.eptonic.photocollage.ui.dahjk.ahjd.fah.fha.fragment.GalleryAlbumFragment,com.eptonic.photocollage.model.GalleryAlbum)
    public void createWrapper()
    public java.util.ArrayList loadPhotoAlbums()
    public boolean already()
    public final void goToDetailPictures(com.eptonic.photocollage.model.GalleryAlbum)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup:
    public void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)
    public final void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)
androidx.core.view.ViewParentCompat
com.yd.photoeditor.model.CropInfo:
    public java.lang.String getForeground()
    public java.lang.String getBackground()
    public void setForeground(java.lang.String)
    public void setBackground(java.lang.String)
com.bumptech.glide.load.engine.DiskCacheStrategy$1
androidx.core.widget.PopupWindowCompat
androidx.fragment.app.FragmentTransitionImpl$1:
    public final synthetic androidx.fragment.app.FragmentTransitionImpl this$0
com.google.android.material.datepicker.MaterialCalendar$3:
    public void onDayClick(long)
com.bumptech.glide.load.resource.bitmap.VideoDecoder$AssetFileDescriptorInitializer:
    public void <init>()
    public void initialize(android.media.MediaMetadataRetriever,android.content.res.AssetFileDescriptor)
com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec
androidx.core.view.NestedScrollingParentHelper:
    public void onNestedScrollAccepted(android.view.View,android.view.View,int)
    public void onNestedScrollAccepted(int,int)
    public void onStopNestedScroll(int)
androidx.transition.ChangeBounds$7:
    public final synthetic androidx.transition.ChangeBounds this$0
com.yd.photoeditor.imageprocessing.temp.ImageFilter3$LoadImageTask:
    public void onPostExecute(android.graphics.Bitmap)
    public final android.graphics.Bitmap loadResizedImage()
    public final android.graphics.Bitmap scaleBitmap(android.graphics.Bitmap)
    public final int[] getScaleSize(int,int)
    public final boolean checkSize(boolean,boolean)
    public final android.graphics.Bitmap rotateImage(android.graphics.Bitmap)
com.eptonic.photocollage.util.PermissionUtils
androidx.appcompat.view.menu.CascadingMenuPopup:
    public final androidx.appcompat.widget.MenuPopupWindow createPopupWindow()
    public final int getInitialMenuPosition()
    public final int getNextMenuPosition(int)
    public final android.view.MenuItem findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder)
    public final android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder)
    public final int findIndexOfAddedMenu(androidx.appcompat.view.menu.MenuBuilder)
org.greenrobot.greendao.query.WhereCollector:
    public boolean isEmpty()
    public final org.greenrobot.greendao.AbstractDao dao
    public final java.lang.String tablePrefix
com.yd.photoeditor.actions.CropAction:
    public void reset()
    public void onStartDrawing()
    public void onFinishDrawing()
    public int getMaskLayoutRes()
    public java.util.ArrayList loadNormalItems(long)
    public final void clickSquareView()
    public final void clickCustomView()
    public final void initSourceImageView()
    public final void pinchImage()
    public android.content.SharedPreferences mCropActionPref
androidx.constraintlayout.widget.ConstraintSet:
    public static int lookupID(android.content.res.TypedArray,int,int)
    public void clone(androidx.constraintlayout.widget.Constraints)
    public void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout)
    public final void populateConstraint(androidx.constraintlayout.widget.ConstraintSet$Constraint,android.content.res.TypedArray)
androidx.appcompat.content.res.AppCompatResources:
    public static android.content.res.ColorStateList inflateColorStateList(android.content.Context,int)
    public static android.content.res.ColorStateList getCachedColorStateList(android.content.Context,int)
    public static void addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList)
    public static boolean isColorInt(android.content.Context,int)
    public static android.util.TypedValue getTypedValue()
androidx.lifecycle.ViewModel:
    public static void closeWithRuntimeException(java.lang.Object)
    public volatile boolean mCleared
com.bumptech.glide.load.ImageHeaderParserUtils$3
com.eptonic.photocollage.ui.view.template.PhotoItem:
    public boolean clearPathAlignParentRight
com.yd.photoeditor.imageprocessing.filter.ImageRender$1:
    public final synthetic com.yd.photoeditor.imageprocessing.filter.ImageRender this$0
org.greenrobot.greendao.internal.LongHashMap:
    public void <init>(int)
    public void reserveRoom(int)
com.bumptech.glide.manager.SupportRequestManagerFragment:
    public void <init>(com.bumptech.glide.manager.ActivityFragmentLifecycle)
    public static androidx.fragment.app.FragmentManager getRootFragmentManager(androidx.fragment.app.Fragment)
    public void setRequestManager(com.bumptech.glide.RequestManager)
    public com.bumptech.glide.manager.ActivityFragmentLifecycle getGlideLifecycle()
    public com.bumptech.glide.RequestManager getRequestManager()
    public com.bumptech.glide.manager.RequestManagerTreeNode getRequestManagerTreeNode()
    public java.util.Set getDescendantRequestManagerFragments()
    public void setParentFragmentHint(androidx.fragment.app.Fragment)
    public final void addChildRequestManagerFragment(com.bumptech.glide.manager.SupportRequestManagerFragment)
    public final void removeChildRequestManagerFragment(com.bumptech.glide.manager.SupportRequestManagerFragment)
    public final boolean isDescendant(androidx.fragment.app.Fragment)
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback
androidx.lifecycle.Lifecycling$1:
    public final synthetic androidx.lifecycle.LifecycleEventObserver val$observer
androidx.fragment.app.FragmentViewLifecycleOwner:
    public void initialize()
    public boolean isInitialized()
    public void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)
com.bumptech.glide.request.target.CustomTarget:
    public void <init>(int,int)
androidx.cardview.widget.CardViewBaseImpl$1
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy:
    public static android.graphics.Bitmap$Config[] getInConfigs(android.graphics.Bitmap$Config)
    public final com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key findBestKey(int,android.graphics.Bitmap$Config)
androidx.core.view.ViewConfigurationCompat:
    public static float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)
com.bumptech.glide.load.resource.gif.StreamGifDecoder:
    public static byte[] inputStreamToBytes(java.io.InputStream)
    public boolean handles(java.io.InputStream,com.bumptech.glide.load.Options)
    public com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int,com.bumptech.glide.load.Options)
com.eptonic.photocollage.ui.dahjk.ahjd.fah.fha.fragment.GalleryAlbumImageFragment:
    public static synthetic com.eptonic.photocollage.presenter.listener.OnImageSelectListener access$000(com.eptonic.photocollage.ui.dahjk.ahjd.fah.fha.fragment.GalleryAlbumImageFragment)
    public static synthetic java.util.ArrayList access$100(com.eptonic.photocollage.ui.dahjk.ahjd.fah.fha.fragment.GalleryAlbumImageFragment)
    public android.view.View mToolBar
com.eptonic.photocollage.ui.dialog.AddTextDialog$Builder:
    public void setListener(com.eptonic.photocollage.presenter.listener.AddTextListener)
    public com.eptonic.photocollage.ui.dialog.AddTextDialog create()
    public android.view.View contentView
androidx.constraintlayout.solver.widgets.ConstraintWidget:
    public static void <clinit>()
    public void setMaxWidth(int)
    public void setMaxHeight(int)
    public boolean isSpreadWidth()
    public boolean isSpreadHeight()
    public void updateResolutionNodes()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getParent()
    public void setParent(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public void setWidthWrapContent(boolean)
    public void setHeightWrapContent(boolean)
    public void connectCircularConstraint(androidx.constraintlayout.solver.widgets.ConstraintWidget,float,int)
    public void setVisibility(int)
    public int getVisibility()
    public java.lang.String getDebugName()
    public void setDebugName(java.lang.String)
    public int getX()
    public int getY()
    public int getWrapWidth()
    public int getWrapHeight()
    public int getDrawX()
    public int getDrawY()
    public int getRootX()
    public int getRootY()
    public float getBiasPercent(int)
    public boolean hasBaseline()
    public int getBaselineDistance()
    public java.lang.Object getCompanionWidget()
    public void setX(int)
    public void setY(int)
    public void setOrigin(int,int)
    public void setHorizontalMatchStyle(int,int,int,float)
    public void setVerticalMatchStyle(int,int,int,float)
    public void setDimensionRatio(java.lang.String)
    public void setHorizontalBiasPercent(float)
    public void setVerticalBiasPercent(float)
    public void setMinWidth(int)
    public void setMinHeight(int)
    public void setWrapWidth(int)
    public void setWrapHeight(int)
    public void setFrame(int,int,int,int)
    public int getRelativePositioning(int)
    public void setRelativePositioning(int,int)
    public void setBaselineDistance(int)
    public void setCompanionWidget(java.lang.Object)
    public void setHorizontalWeight(float)
    public void setVerticalWeight(float)
    public void setHorizontalChainStyle(int)
    public void setVerticalChainStyle(int)
    public void resetAnchors()
    public boolean isInHorizontalChain()
    public boolean isInVerticalChain()
    public void setupDimensionRatio(boolean,boolean,boolean,boolean)
    public final void addAnchors()
    public boolean mIsWidthWrapContent
    public boolean mIsHeightWrapContent
    public int mDrawWidth
    public int mDrawHeight
    public int mContainerItemSkip
    public boolean mHorizontalWrapVisited
    public boolean mVerticalWrapVisited
    public boolean mHorizontalChainFixedPosition
    public boolean mVerticalChainFixedPosition
    public androidx.constraintlayout.solver.widgets.ConstraintWidget mHorizontalNextWidget
    public androidx.constraintlayout.solver.widgets.ConstraintWidget mVerticalNextWidget
androidx.recyclerview.widget.SnapHelper:
    public boolean onFling(int,int)
    public void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)
    public int[] calculateScrollDistance(int,int)
    public androidx.recyclerview.widget.RecyclerView$SmoothScroller createScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager)
    public androidx.recyclerview.widget.LinearSmoothScroller createSnapScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager)
    public abstract int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int)
    public final void setupCallbacks()
    public final void destroyCallbacks()
    public final boolean snapFromFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int)
com.google.android.material.expandable.ExpandableWidgetHelper
com.bumptech.glide.load.engine.LockedResource$1:
    public com.bumptech.glide.load.engine.LockedResource create()
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer:
    public void setOptimizationLevel(int)
    public int getOptimizationLevel()
    public boolean isWidthMeasuredTooSmall()
    public boolean isHeightMeasuredTooSmall()
    public void updateChildrenFromSolver(androidx.constraintlayout.solver.LinearSystem,boolean[])
    public void setRtl(boolean)
    public boolean isRtl()
    public void optimize()
    public boolean handlesInternalConstraints()
    public final void addHorizontalChain(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public final void addVerticalChain(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public int mDebugSolverPassCount
com.eptonic.photocollage.util.TemplateUtils$1:
    public int compare(com.eptonic.photocollage.model.TemplateItem,com.eptonic.photocollage.model.TemplateItem)
androidx.appcompat.view.menu.SubMenuBuilder:
    public android.view.Menu getParentMenu()
    public void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback)
androidx.core.provider.FontsContractCompat$2:
    public void onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl:
    public void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl)
com.google.android.material.circularreveal.CircularRevealCompat
com.yd.photoeditor.vv.DateTimeUtils
com.eptonic.photocollage.adapter.SelectStickerAdapter:
    public static synthetic com.eptonic.photocollage.presenter.listener.OnItemClickListener access$000(com.eptonic.photocollage.adapter.SelectStickerAdapter)
    public void setOnItemClickListener(com.eptonic.photocollage.presenter.listener.OnItemClickListener)
    public com.eptonic.photocollage.adapter.SelectStickerAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup)
    public void onBindViewHolder(com.eptonic.photocollage.adapter.SelectStickerAdapter$ViewHolder,int)
    public final int mType
com.yd.photoeditor.imageprocessing.temp.ImageFilter3:
    public void setBackground(float,float,float,float)
    public void setGLSurfaceView(android.opengl.GLSurfaceView)
    public void setFilter(com.yd.photoeditor.imageprocessing.filter.ImageRender)
    public void setScaleType(com.yd.photoeditor.imageprocessing.temp.ImageFilter3$ScaleType)
    public void deleteImage()
    public void setImage(android.net.Uri)
    public void setImage(java.io.File)
    public int getOutputWidth()
    public int getOutputHeight()
    public final boolean supportsOpenGLES2(android.content.Context)
    public final void setImage(android.graphics.Bitmap,boolean)
    public java.util.concurrent.locks.ReentrantLock lock
com.eptonic.photocollage.model.DaoMaster:
    public static void createAllTables(org.greenrobot.greendao.database.Database,boolean)
    public static void dropAllTables(org.greenrobot.greendao.database.Database,boolean)
    public void <init>(org.greenrobot.greendao.database.Database)
    public com.eptonic.photocollage.model.DaoSession newSession()
androidx.cursoradapter.widget.CursorAdapter:
    public void init(android.content.Context,android.database.Cursor,int)
    public android.database.Cursor getCursor()
    public abstract android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
    public android.database.Cursor swapCursor(android.database.Cursor)
    public void onContentChanged()
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1:
    public androidx.recyclerview.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel)
    public androidx.recyclerview.widget.LinearLayoutManager$SavedState[] newArray(int)
com.bumptech.glide.load.model.UriLoader:
    public com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri)
    public boolean handles(android.net.Uri)
androidx.recyclerview.widget.DefaultItemAnimator:
    public void runPendingAnimations()
    public boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void animateAddImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void animateMoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
    public boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
    public void animateChangeImpl(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo)
    public final void animateRemoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo)
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifDecoderFactory:
    public com.bumptech.glide.gifdecoder.GifDecoder build(com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.gifdecoder.GifHeader,java.nio.ByteBuffer,int)
androidx.core.view.ViewGroupCompat
androidx.appcompat.widget.ContentFrameLayout$OnAttachListener:
    public abstract void onDetachedFromWindow()
    public abstract void onAttachedFromWindow()
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy:
    public static final com.bumptech.glide.load.resource.bitmap.DownsampleStrategy AT_LEAST
    public static final com.bumptech.glide.load.resource.bitmap.DownsampleStrategy AT_MOST
androidx.appcompat.app.AlertController$AlertParams$OnPrepareListViewListener
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat
com.yd.photoeditor.actions.PackageAction:
    public void onEditorItemClick(int,com.yd.photoeditor.model.XXXXXXXXXXXXXX)
    public void backNormalPackage()
    public final void createMenuList()
    public final void selectItem(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1:
    public androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel)
    public androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int)
com.bumptech.glide.util.pool.GlideTrace
androidx.transition.TransitionSet$1:
    public final synthetic androidx.transition.TransitionSet this$0
androidx.customview.view.AbsSavedState$2:
    public androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel)
    public androidx.customview.view.AbsSavedState[] newArray(int)
com.bumptech.glide.load.resource.gif.GifDrawableEncoder:
    public boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File)
androidx.fragment.app.FragmentState$1:
    public androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel)
    public androidx.fragment.app.FragmentState[] newArray(int)
com.bumptech.glide.request.SingleRequest:
    public static com.bumptech.glide.request.SingleRequest obtain(android.content.Context,com.bumptech.glide.GlideContext,java.lang.Object,java.lang.Object,java.lang.Class,com.bumptech.glide.request.BaseRequestOptions,int,int,com.bumptech.glide.Priority,com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,java.util.List,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.load.engine.Engine,com.bumptech.glide.request.transition.TransitionFactory,java.util.concurrent.Executor)
    public static int maybeApplySizeMultiplier(int,float)
    public boolean isAnyResourceSet()
    public void onLoadFailed(com.bumptech.glide.load.engine.GlideException)
    public java.lang.Object getLock()
    public final void cancel()
    public final android.graphics.drawable.Drawable getErrorDrawable()
    public final boolean canSetResource()
    public final boolean canNotifyCleared()
    public final boolean canNotifyStatusChanged()
    public final void notifyLoadSuccess()
    public final void notifyLoadFailed()
androidx.recyclerview.widget.AdapterHelper$Callback:
    public abstract androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int)
    public abstract void offsetPositionsForRemovingInvisible(int,int)
    public abstract void offsetPositionsForRemovingLaidOutOrNewView(int,int)
    public abstract void markViewHoldersUpdated(int,int,java.lang.Object)
    public abstract void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public abstract void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public abstract void offsetPositionsForAdd(int,int)
    public abstract void offsetPositionsForMove(int,int)
androidx.recyclerview.widget.RecyclerView$RecycledViewPool:
    public void clear()
    public androidx.recyclerview.widget.RecyclerView$ViewHolder getRecycledView(int)
    public void putRecycledView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void factorInCreateTime(int,long)
    public void factorInBindTime(int,long)
    public boolean willCreateInTime(int,long,long)
    public boolean willBindInTime(int,long,long)
    public void attach()
    public void detach()
    public void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean)
com.yd.photoeditor.imageprocessing.filter.effect.F12:
    public void <init>(int)
    public void setRadius(int)
com.yd.photoeditor.model.FilterInfo:
    public static void <clinit>()
    public void setCmd(java.lang.String)
    public final void buildImageFilter()
    public final com.yd.photoeditor.imageprocessing.filter.ImageRender createFilter(java.lang.String)
    public static final java.lang.String TAG
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action:
    public void <init>(int,int,int,android.view.animation.Interpolator)
    public void jumpTo(int)
    public boolean hasJumpTarget()
    public final void validate()
com.bumptech.glide.util.Executors:
    public static java.util.concurrent.Executor mainThreadExecutor()
    public static java.util.concurrent.Executor directExecutor()
androidx.appcompat.view.menu.BaseMenuWrapper:
    public final void internalClear()
    public final void internalRemoveGroup(int)
    public final void internalRemoveItem(int)
androidx.appcompat.view.ActionBarPolicy
androidx.arch.core.executor.ArchTaskExecutor$2
androidx.appcompat.widget.SearchView$SearchAutoComplete:
    public boolean isEmpty()
    public void showSoftInputIfNecessary()
androidx.recyclerview.widget.AdapterHelper$UpdateOp:
    public java.lang.String cmdToString()
androidx.appcompat.view.WindowCallbackWrapper:
    public boolean dispatchKeyEvent(android.view.KeyEvent)
    public boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
    public boolean onCreatePanelMenu(int,android.view.Menu)
    public boolean onPreparePanel(int,android.view.View,android.view.Menu)
    public boolean onMenuOpened(int,android.view.Menu)
    public void onPanelClosed(int,android.view.Menu)
    public android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)
    public android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int)
    public void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int)
    public final android.view.Window$Callback getWrapped()
org.greenrobot.greendao.AbstractDaoMaster:
    public void registerDaoClass(java.lang.Class)
    public final int schemaVersion
com.bumptech.glide.load.model.AssetUriLoader:
    public static void <clinit>()
    public com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri)
    public boolean handles(android.net.Uri)
    public static final int ASSET_PREFIX_LENGTH
androidx.lifecycle.MethodCallsLogger:
    public java.util.Map mCalledMethods
androidx.appcompat.widget.ListPopupWindow:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public void setPromptPosition(int)
    public boolean isModal()
    public void setAnimationStyle(int)
    public android.view.View getAnchorView()
    public void setAnchorView(android.view.View)
    public void setEpicenterBounds(android.graphics.Rect)
    public void setDropDownGravity(int)
    public int getWidth()
    public void setWidth(int)
    public void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)
    public void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
    public void setInputMethodMode(int)
    public void setSelection(int)
    public void clearListSelection()
    public boolean isInputMethodNotNeeded()
    public void setOverlapAnchor(boolean)
    public final void removePromptView()
    public final int buildDropDown()
    public final void setPopupClipToScreenEnabled(boolean)
    public final int getMaxAvailableHeight(android.view.View,int,boolean)
    public boolean mIsAnimatedFromAnchor
    public android.view.View mPromptView
    public android.graphics.drawable.Drawable mDropDownListHighlight
    public android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener
    public java.lang.Runnable mShowDropDownRunnable
org.greenrobot.greendao.DaoLog
androidx.appcompat.view.menu.ActionMenuItem:
    public androidx.core.internal.view.SupportMenuItem setActionView()
    public androidx.core.internal.view.SupportMenuItem setActionView1()
    public androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int)
    public final int mCategoryOrder
    public int mIconResId
    public android.view.MenuItem$OnMenuItemClickListener mClickListener
com.bumptech.glide.load.model.UnitModelLoader:
    public static com.bumptech.glide.load.model.UnitModelLoader getInstance()
com.eptonic.photocollage.ui.view.PhotoLayout$7:
    public void onLongClickImage(com.eptonic.photocollage.ui.view.TransitionImageView)
    public void onDoubleClickImage(com.eptonic.photocollage.ui.view.TransitionImageView)
com.bumptech.glide.util.Preconditions
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams:
    public boolean isFullSpan()
    public final int getSpanIndex()
com.yd.photoeditor.imageprocessing.filter.colour.P7:
    public void <init>(float)
    public void setOpacity(float)
com.yd.photoeditor.listener.OnDoneActionsClickListener:
    public abstract void onDoneButtonClick()
com.bumptech.glide.load.resource.gif.GifBitmapProvider:
    public android.graphics.Bitmap obtain(int,int,android.graphics.Bitmap$Config)
    public void release(android.graphics.Bitmap)
    public void release(byte[])
    public int[] obtainIntArray(int)
    public void release(int[])
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder:
    public android.os.ParcelFileDescriptor rewind()
com.yd.photoeditor.imageprocessing.temp.ImageFilter3$LoadImageFileTask:
    public final synthetic com.yd.photoeditor.imageprocessing.temp.ImageFilter3 this$0
androidx.transition.ViewGroupOverlayApi18
com.eptonic.photocollage.ui.view.PhotoLayout:
    public void build(int,int,float)
    public android.graphics.Bitmap createImage()
    public void recycleImages(boolean)
    public final void init(java.util.List,android.graphics.Bitmap)
    public final void createQuickAction()
    public final void asyncCreateBackgroundImage(java.lang.String)
    public final com.eptonic.photocollage.ui.view.template.ItemImageView addPhotoItemView(com.eptonic.photocollage.ui.view.template.PhotoItem,float,float)
org.greenrobot.greendao.internal.DaoConfig:
    public org.greenrobot.greendao.internal.DaoConfig clone()
    public org.greenrobot.greendao.identityscope.IdentityScope getIdentityScope()
    public void initIdentityScope(org.greenrobot.greendao.identityscope.IdentityScopeType)
com.yd.photoeditor.imageprocessing.filter.effect.F12345:
    public void setLineSize(float)
androidx.fragment.app.FragmentManager$OnBackStackChangedListener
com.yd.photoeditor.imageprocessing.filter.effect.F123456:
    public void setTexelWidth(float)
    public void setTexelHeight(float)
    public void setBlurSize(float)
    public void setThreshold(float)
    public void setQuantizationLevels(float)
androidx.appcompat.app.AlertController:
    public static boolean shouldCenterSingleButton(android.content.Context)
    public void installContent()
    public void setTitle(java.lang.CharSequence)
    public void setCustomTitle(android.view.View)
    public void setMessage(java.lang.CharSequence)
    public void setView(int)
    public void setView(android.view.View)
    public void setView(android.view.View,int,int,int,int)
    public void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message,android.graphics.drawable.Drawable)
    public void setIcon(android.graphics.drawable.Drawable)
    public int getIconAttributeResId(int)
    public android.widget.ListView getListView()
    public boolean onKeyDown(android.view.KeyEvent)
    public boolean onKeyUp(android.view.KeyEvent)
    public final int selectContentView()
    public final void setupView()
    public final void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int)
    public final void setupCustomContent(android.view.ViewGroup)
    public final void setupTitle(android.view.ViewGroup)
    public final void setupContent(android.view.ViewGroup)
    public final void setupButtons(android.view.ViewGroup)
com.bumptech.glide.Glide$RequestOptionsFactory:
    public abstract com.bumptech.glide.request.RequestOptions build()
com.eptonic.photocollage.adapter.PhotosAdapter$ViewHolder:
    public void <init>(com.eptonic.photocollage.adapter.PhotosAdapter)
    public final synthetic com.eptonic.photocollage.adapter.PhotosAdapter this$0
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat
androidx.appcompat.widget.FitWindowsViewGroup
com.yd.photoeditor.imageprocessing.filter.ImageRender$8:
    public final synthetic com.yd.photoeditor.imageprocessing.filter.ImageRender this$0
com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions:
    public abstract int getWidthPixels()
    public abstract int getHeightPixels()
com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverFactory:
    public android.media.MediaMetadataRetriever build()
com.bumptech.glide.request.transition.TransitionFactory:
    public abstract com.bumptech.glide.request.transition.Transition build(com.bumptech.glide.load.DataSource,boolean)
androidx.core.widget.TintableCompoundButton
androidx.transition.ChangeBounds$10:
    public final synthetic androidx.transition.ChangeBounds this$0
com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader:
    public com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options)
    public boolean handles(android.net.Uri)
    public final boolean isRequestingDefaultFrame(com.bumptech.glide.load.Options)
com.google.android.material.snackbar.SnackbarManager:
    public static com.google.android.material.snackbar.SnackbarManager getInstance()
    public final boolean cancelSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord,int)
    public final boolean isCurrentSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback)
    public final void scheduleTimeoutLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord)
    public com.google.android.material.snackbar.SnackbarManager$SnackbarRecord currentSnackbar
    public com.google.android.material.snackbar.SnackbarManager$SnackbarRecord nextSnackbar
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState:
    public int addStateSet(int[],android.graphics.drawable.Drawable)
    public void growArray(int,int)
com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder:
    public boolean handles()
    public com.bumptech.glide.load.engine.Resource decode(android.graphics.Bitmap)
com.bumptech.glide.load.resource.gif.GifDrawable:
    public int getSize()
    public void setFrameTransformation(com.bumptech.glide.load.Transformation,android.graphics.Bitmap)
    public java.nio.ByteBuffer getBuffer()
    public int getFrameCount()
    public int getFrameIndex()
    public void recycle()
    public final void resetLoopCount()
    public final android.graphics.Rect getDestRect()
    public final android.graphics.drawable.Drawable$Callback findCallback()
    public final void notifyAnimationEndToListeners()
    public java.util.List animationCallbacks
androidx.constraintlayout.solver.widgets.ResolutionDimension:
    public void reset()
    public void remove()
com.bumptech.glide.load.resource.drawable.UnitDrawableDecoder:
    public boolean handles()
    public com.bumptech.glide.load.engine.Resource decode(android.graphics.drawable.Drawable)
com.google.android.material.behavior.SwipeDismissBehavior:
    public static int clamp(int,int,int)
    public static float fraction(float,float,float)
    public void setSwipeDirection(int)
    public void setStartAlphaSwipeDistance(float)
    public void setEndAlphaSwipeDistance(float)
    public final void ensureViewDragHelper(android.view.ViewGroup)
    public boolean sensitivitySet
androidx.exifinterface.media.ExifInterface$ExifTag:
    public boolean isFormatCompatible(int)
org.greenrobot.greendao.query.AbstractQueryData:
    public abstract org.greenrobot.greendao.query.AbstractQuery createQuery()
androidx.appcompat.view.menu.MenuBuilder:
    public static int getOrdering(int)
    public static int findInsertIndex(java.util.ArrayList,int)
    public androidx.appcompat.view.menu.MenuBuilder setDefaultShowAsAction(int)
    public void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)
    public void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback)
    public void setExclusiveItemChecked(android.view.MenuItem)
    public int findItemIndex(int)
    public int findGroupIndex(int)
    public int findGroupIndex(int,int)
    public android.content.res.Resources getResources()
    public android.content.Context getContext()
    public void changeMenuMode()
    public void onItemVisibleChanged()
    public java.util.ArrayList getActionItems()
    public java.util.ArrayList getNonActionItems()
    public androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence)
    public androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(int)
    public androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable)
    public androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(int)
    public androidx.appcompat.view.menu.MenuBuilder setHeaderViewInt(android.view.View)
    public java.lang.CharSequence getHeaderTitle()
    public android.graphics.drawable.Drawable getHeaderIcon()
    public android.view.View getHeaderView()
    public boolean getOptionalIconsVisible()
    public androidx.appcompat.view.menu.MenuItemImpl getExpandedItem()
    public void setOverrideVisibleItems(boolean)
    public final void dispatchPresenterUpdate(boolean)
    public final boolean dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder,androidx.appcompat.view.menu.MenuPresenter)
    public final androidx.appcompat.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int)
    public final void setShortcutsVisibleInner(boolean)
    public android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo
androidx.recyclerview.widget.RecyclerView$ViewCacheExtension:
    public abstract android.view.View getViewForPositionAndType(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat:
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int)
org.greenrobot.greendao.identityscope.IdentityScopeLong:
    public java.lang.Object get(java.lang.Long)
    public java.lang.Object getNoLock(java.lang.Long)
    public java.lang.Object get2NoLock(long)
    public void put(java.lang.Long,java.lang.Object)
    public void putNoLock(java.lang.Long,java.lang.Object)
    public void put2NoLock(long,java.lang.Object)
    public void putNoLock(java.lang.Object,java.lang.Object)
    public void put(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.ThemeUtils:
    public static android.util.TypedValue getTypedValue()
    public static int getThemeAttrColor(android.content.Context,int,float)
    public static final int[] ACTIVATED_STATE_SET
    public static final int[] SELECTED_STATE_SET
    public static final int[] NOT_PRESSED_OR_FOCUSED_STATE_SET
androidx.core.widget.AutoScrollHelper$ClampedScroller:
    public void setRampUpDuration(int)
    public void setRampDownDuration(int)
    public void start()
    public void requestStop()
    public boolean isFinished()
    public void computeScrollDelta()
    public void setTargetVelocity(float,float)
    public int getHorizontalDirection()
    public int getVerticalDirection()
    public int getDeltaX()
    public int getDeltaY()
    public final float interpolateValue(float)
androidx.appcompat.widget.RtlSpacingHelper:
    public int getLeft()
    public int getRight()
    public int getStart()
    public int getEnd()
    public void setAbsolute(int,int)
    public void setDirection(boolean)
com.google.android.material.behavior.SwipeDismissBehavior$1:
    public final boolean shouldDismiss(android.view.View,float)
androidx.recyclerview.widget.LinearLayoutManager$LayoutState:
    public void assignPositionFromScrapList()
    public android.view.View nextViewInLimitedList(android.view.View)
    public final android.view.View nextViewFromScrapList()
com.eptonic.photocollage.util.FileUtils
androidx.core.view.ActionProvider:
    public abstract android.view.View onCreateActionView()
    public boolean onPerformDefaultAction()
    public boolean hasSubMenu()
    public void onPrepareSubMenu(android.view.SubMenu)
    public void setSubUiVisibilityListener(androidx.core.view.ActionProvider$SubUiVisibilityListener)
    public void reset()
    public final android.content.Context mContext
    public androidx.core.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener
com.eptonic.photocollage.util.Utils
com.bumptech.glide.request.target.ImageViewTarget:
    public void setDrawable(android.graphics.drawable.Drawable)
    public final void maybeUpdateAnimatable(java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl:
    public static synthetic int access$002(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,int)
    public static synthetic android.animation.Animator access$102(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,android.animation.Animator)
    public static synthetic float access$202(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,float)
    public void setBackgroundTintList(android.content.res.ColorStateList)
    public void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
    public final void setElevation(float)
    public float getHoveredFocusedTranslationZ()
    public float getPressedTranslationZ()
    public final void setHoveredFocusedTranslationZ(float)
    public final void setPressedTranslationZ(float)
    public final void updateImageMatrixScale()
    public final void setShapeAppearance(com.google.android.material.shape.ShapeAppearanceModel)
    public final com.google.android.material.shape.ShapeAppearanceModel getShapeAppearance()
    public final com.google.android.material.animation.MotionSpec getShowMotionSpec()
    public final void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
    public final com.google.android.material.animation.MotionSpec getHideMotionSpec()
    public final void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
    public boolean getEnsureMinTouchTargetSize()
    public void setEnsureMinTouchTargetSize(boolean)
    public void setShadowPaddingEnabled(boolean)
    public void updateShapeElevation(float)
    public void addOnShowAnimationListener(android.animation.Animator$AnimatorListener)
    public void addOnHideAnimationListener(android.animation.Animator$AnimatorListener)
    public void hide(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)
    public void show(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)
    public void addTransformationCallback(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback)
    public final android.graphics.drawable.Drawable getContentBackground()
    public void onPaddingUpdated(android.graphics.Rect)
    public void onAttachedToWindow()
    public void onDetachedFromWindow()
    public void onPreDraw()
    public final void calculateImageMatrixFromScale(float,android.graphics.Matrix)
    public final com.google.android.material.animation.MotionSpec getDefaultShowMotionSpec()
    public final com.google.android.material.animation.MotionSpec getDefaultHideMotionSpec()
    public final void workAroundOreoBug(android.animation.ObjectAnimator)
    public final android.view.ViewTreeObserver$OnPreDrawListener getOrCreatePreDrawListener()
    public android.graphics.drawable.Drawable rippleDrawable
    public com.google.android.material.floatingactionbutton.BorderDrawable borderDrawable
    public android.graphics.drawable.Drawable contentBackground
    public int minTouchTargetSize
    public int maxImageSize
com.bumptech.glide.manager.RequestManagerRetriever:
    public static void assertNotDestroyed(android.app.Activity)
    public com.bumptech.glide.RequestManager get(androidx.fragment.app.FragmentActivity)
    public com.bumptech.glide.RequestManager get(android.app.Activity)
    public com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.Activity)
    public com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.content.Context,androidx.fragment.app.FragmentManager)
    public final com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)
    public final com.bumptech.glide.RequestManager supportFragmentGet(android.content.Context,androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,boolean)
    public final androidx.collection.ArrayMap tempViewToSupportFragment
    public final androidx.collection.ArrayMap tempViewToFragment
    public final android.os.Bundle tempBundle
com.bumptech.glide.RequestManager:
    public void <init>(com.bumptech.glide.Glide,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode,com.bumptech.glide.manager.RequestTracker,com.bumptech.glide.manager.ConnectivityMonitorFactory,android.content.Context)
    public synchronized void pauseAllRequests()
    public synchronized void pauseAllRequestsRecursive()
    public com.bumptech.glide.RequestBuilder asBitmap()
    public com.bumptech.glide.RequestBuilder load(java.lang.String)
    public com.bumptech.glide.RequestBuilder load(android.net.Uri)
    public com.bumptech.glide.RequestBuilder load(java.io.File)
    public com.bumptech.glide.RequestBuilder load(java.lang.Integer)
    public com.bumptech.glide.RequestBuilder as(java.lang.Class)
    public java.util.List getDefaultRequestListeners()
    public com.bumptech.glide.TransitionOptions getDefaultTransitionOptions(java.lang.Class)
    public final void untrackOrDelegate(com.bumptech.glide.request.target.Target)
    public boolean pauseAllRequestsOnTrimMemoryModerate
    public static final com.bumptech.glide.request.RequestOptions DECODE_TYPE_GIF
    public static final com.bumptech.glide.request.RequestOptions DOWNLOAD_ONLY_OPTIONS
com.bumptech.glide.Registry:
    public com.bumptech.glide.Registry append(java.lang.Class,com.bumptech.glide.load.Encoder)
    public com.bumptech.glide.Registry append(java.lang.Class,java.lang.Class,com.bumptech.glide.load.ResourceDecoder)
    public com.bumptech.glide.Registry append(java.lang.String,java.lang.Class,java.lang.Class,com.bumptech.glide.load.ResourceDecoder)
    public final com.bumptech.glide.Registry setResourceDecoderBucketPriorityList(java.util.List)
    public com.bumptech.glide.Registry append(java.lang.Class,com.bumptech.glide.load.ResourceEncoder)
    public com.bumptech.glide.Registry register(com.bumptech.glide.load.data.DataRewinder$Factory)
    public com.bumptech.glide.Registry register(java.lang.Class,java.lang.Class,com.bumptech.glide.load.resource.transcode.ResourceTranscoder)
    public com.bumptech.glide.Registry register(com.bumptech.glide.load.ImageHeaderParser)
    public com.bumptech.glide.Registry append(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory)
    public com.bumptech.glide.load.engine.LoadPath getLoadPath(java.lang.Class,java.lang.Class,java.lang.Class)
    public java.util.List getRegisteredResourceClasses(java.lang.Class,java.lang.Class,java.lang.Class)
    public boolean isResourceEncoderAvailable(com.bumptech.glide.load.engine.Resource)
    public com.bumptech.glide.load.ResourceEncoder getResultEncoder(com.bumptech.glide.load.engine.Resource)
    public com.bumptech.glide.load.Encoder getSourceEncoder(java.lang.Object)
    public com.bumptech.glide.load.data.DataRewinder getRewinder(java.lang.Object)
    public final java.util.List getDecodePaths(java.lang.Class,java.lang.Class,java.lang.Class)
com.eptonic.photocollage.ui.wrapper.dah.ghjf.gfhs.fhsj.ghsj.hfjsh.fhsj.fhsj.hfjs.fdj.sjhfs.fgsj.jgks.vbb.uiManager.FreePhotoUiManager$5:
    public void onOkClick(java.lang.String)
    public void onCancelClick()
com.eptonic.photocollage.model.ItemInfo$1:
    public com.eptonic.photocollage.model.ItemInfo createFromParcel(android.os.Parcel)
    public com.eptonic.photocollage.model.ItemInfo[] newArray(int)
androidx.collection.ArraySet:
    public void <init>(int)
    public void ensureCapacity(int)
    public java.lang.Object valueAt(int)
    public final androidx.collection.MapCollections getCollection()
org.greenrobot.greendao.identityscope.IdentityScope:
    public abstract void put(java.lang.Object,java.lang.Object)
    public abstract void putNoLock(java.lang.Object,java.lang.Object)
com.eptonic.photocollage.ui.view.template.ItemImageView:
    public void swapImage(com.eptonic.photocollage.ui.view.template.ItemImageView)
    public void init(float,float,float)
    public void recycleImages(boolean)
    public final void recycleMaskImage()
com.google.android.material.datepicker.UtcDates
org.greenrobot.greendao.Property:
    public final java.lang.String name
androidx.savedstate.SavedStateRegistry:
    public android.os.Bundle consumeRestoredStateForKey(java.lang.String)
    public void performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle)
    public void performSave(android.os.Bundle)
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap:
    public static void updateEntry(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry)
    public static void removeEntry(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry)
    public final void makeHead(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry)
    public final void makeTail(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry)
androidx.exifinterface.media.ExifInterface:
    public static boolean isJpegFormat(byte[])
    public int getAttributeInt(java.lang.String,int)
    public final void loadAttributes(java.io.InputStream)
    public final boolean isRafFormat(byte[])
    public final boolean isOrfFormat(byte[])
    public final boolean isRw2Format(byte[])
    public final void readExifSegment(byte[],int)
    public final void retrieveJpegImageSize(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,int)
    public final void handleThumbnailFromStrips(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,java.util.HashMap)
    public final boolean isSupportedDataType(java.util.HashMap)
    public final void validateImages()
    public boolean mHasThumbnail
    public int mThumbnailOffset
    public int mThumbnailLength
    public byte[] mThumbnailBytes
    public boolean mIsSupportedFile
    public static final java.util.List ROTATION_ORDER
    public static final java.util.List FLIPPED_ROTATION_ORDER
    public static final int[] BITS_PER_SAMPLE_GREYSCALE_1
    public static final androidx.exifinterface.media.ExifInterface$ExifTag JPEG_INTERCHANGE_FORMAT_TAG
    public static final androidx.exifinterface.media.ExifInterface$ExifTag JPEG_INTERCHANGE_FORMAT_LENGTH_TAG
    public static final java.util.regex.Pattern sNonZeroTimePattern
    public static final java.util.regex.Pattern sGpsTimestampPattern
com.google.android.material.resources.MaterialResources
androidx.core.text.PrecomputedTextCompat$Params:
    public android.text.TextPaint getTextPaint()
    public android.text.TextDirectionHeuristic getTextDirection()
    public int getBreakStrategy()
    public int getHyphenationFrequency()
com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder:
    public com.bumptech.glide.load.engine.Resource decode(android.graphics.ImageDecoder$Source,int,int,android.graphics.ImageDecoder$OnHeaderDecodedListener)
com.bumptech.glide.load.engine.ResourceCacheKey:
    public final byte[] getResourceClassBytes()
com.bumptech.glide.load.model.ModelLoader$LoadData:
    public void <init>(com.bumptech.glide.load.Key,java.util.List,com.bumptech.glide.load.data.DataFetcher)
androidx.viewpager2.adapter.FragmentStateAdapter$2:
    public final synthetic androidx.viewpager2.adapter.FragmentViewHolder val$holder
    public final synthetic androidx.viewpager2.adapter.FragmentStateAdapter this$0
androidx.appcompat.widget.AppCompatSpinner:
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int,int)
    public void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme)
com.bumptech.glide.manager.RequestManagerTreeNode:
    public abstract java.util.Set getDescendants()
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper:
    public android.view.View onCreateActionView()
    public boolean onPerformDefaultAction()
    public boolean hasSubMenu()
    public void onPrepareSubMenu(android.view.SubMenu)
androidx.core.content.res.ColorStateListInflaterCompat
com.bumptech.glide.load.ImageHeaderParserUtils$OrientationReader
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper:
    public android.view.View getWrappedView()
androidx.transition.FragmentTransitionSupport$4:
    public final synthetic android.graphics.Rect val$epicenter
    public final synthetic androidx.transition.FragmentTransitionSupport this$0
androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor
androidx.appcompat.widget.ScrollingTabContainerView:
    public void animateToTab(int)
    public androidx.appcompat.widget.ScrollingTabContainerView$TabView createTabView(androidx.appcompat.app.ActionBar$Tab,boolean)
    public final boolean isCollapsed()
    public final void performCollapse()
    public final boolean performExpand()
    public final android.widget.Spinner createSpinner()
    public androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener mTabClickListener
    public androidx.appcompat.widget.LinearLayoutCompat mTabLayout
    public android.widget.Spinner mTabSpinner
    public static final android.view.animation.Interpolator sAlphaInterpolator
androidx.fragment.app.FragmentTransitionCompat21$1:
    public final synthetic androidx.fragment.app.FragmentTransitionCompat21 this$0
com.google.android.material.appbar.ViewUtilsLollipop
androidx.viewpager2.adapter.FragmentViewHolder
com.bumptech.glide.load.ImageHeaderParserUtils$2
androidx.core.graphics.drawable.TintAwareDrawable
androidx.appcompat.view.menu.ListMenuPresenter:
    public void <init>(int,int)
    public androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
androidx.recyclerview.widget.GridLayoutManager:
    public static int[] calculateItemBorders(int[],int,int)
    public int getSpanCount()
    public final void clearPreLayoutSpanMappingCache()
    public final void cachePreLayoutSpanMapping()
    public final void ensureAnchorIsInCorrectSpan(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int)
    public final void guessMeasurement(float,int)
    public final void assignSpans(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,boolean)
    public final int computeScrollRangeWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State)
    public final int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State)
    public boolean mUsingSpansToEstimateScrollBarDimensions
com.yd.photoeditor.imageprocessing.filter.effect.Fxxx:
    public void setVignetteCenter(android.graphics.PointF)
    public void setVignetteColor(float[])
    public void setVignetteStart(float)
    public void setVignetteEnd(float)
com.bumptech.glide.util.ByteBufferUtil:
    public static com.bumptech.glide.util.ByteBufferUtil$SafeArray getSafeArray(java.nio.ByteBuffer)
com.bumptech.glide.gifdecoder.GifHeaderParser:
    public com.bumptech.glide.gifdecoder.GifHeaderParser setData(java.nio.ByteBuffer)
    public void clear()
    public final void reset()
    public final void readContents()
    public final void readContents(int)
    public final void readGraphicControlExt()
    public final void readBitmap()
    public final void readNetscapeExt()
    public final void readHeader()
    public final void readLSD()
    public final void skipImageData()
androidx.lifecycle.ViewModelStore:
    public final void put(java.lang.String,androidx.lifecycle.ViewModel)
    public final androidx.lifecycle.ViewModel get(java.lang.String)
androidx.activity.OnBackPressedDispatcher:
    public androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback)
    public void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)
androidx.core.view.KeyEventDispatcher:
    public static boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent)
    public static boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent)
    public static boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent)
    public static android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog)
    public static boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent)
    public static void <clinit>()
androidx.core.content.res.TypedArrayUtils
com.bumptech.glide.load.data.HttpUrlFetcher:
    public void <init>(com.bumptech.glide.load.model.GlideUrl,int,com.bumptech.glide.load.data.HttpUrlFetcher$HttpUrlConnectionFactory)
    public static boolean isHttpOk(int)
    public static boolean isHttpRedirect(int)
    public final java.io.InputStream getStreamForSuccessfulRequest(java.net.HttpURLConnection)
androidx.fragment.app.FragmentTransitionImpl$2:
    public final synthetic androidx.fragment.app.FragmentTransitionImpl this$0
androidx.transition.ChangeBounds$8:
    public final synthetic androidx.transition.ChangeBounds this$0
com.bumptech.glide.request.RequestCoordinator$RequestState
com.bumptech.glide.manager.EmptyRequestManagerTreeNode:
    public java.util.Set getDescendants()
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$Factory:
    public com.bumptech.glide.load.data.DataRewinder build(android.os.ParcelFileDescriptor)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState:
    public int addStateSet(int[],android.graphics.drawable.Drawable,int)
    public int indexOfTransition(int,int)
    public boolean isTransitionReversed(int,int)
    public boolean transitionHasReversibleFlag(int,int)
com.yd.photoeditor.vv.FileUtils$3
androidx.core.view.TintableBackgroundView
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener:
    public final void resolveMethod(android.content.Context)
com.bumptech.glide.request.transition.NoTransition$NoAnimationFactory:
    public com.bumptech.glide.request.transition.Transition build(com.bumptech.glide.load.DataSource,boolean)
com.google.android.material.internal.CollapsingTextHelper$1:
    public void apply(android.graphics.Typeface)
com.bumptech.glide.request.target.ViewTarget$SizeDeterminer:
    public static int getMaxDisplayLength(android.content.Context)
    public void checkCurrentDimens()
    public void getSize(com.bumptech.glide.request.target.SizeReadyCallback)
    public void removeCallback(com.bumptech.glide.request.target.SizeReadyCallback)
    public final void notifyCbs(int,int)
    public final boolean isDimensionValid(int)
    public boolean waitForLayout
androidx.appcompat.widget.ToolbarWidgetWrapper:
    public void <init>(androidx.appcompat.widget.Toolbar,boolean,int)
    public void setDefaultNavigationContentDescription(int)
    public void setSubtitle(java.lang.CharSequence)
    public void setLogo(android.graphics.drawable.Drawable)
    public void setCustomView(android.view.View)
    public void setNavigationIcon(android.graphics.drawable.Drawable)
    public void setNavigationContentDescription(java.lang.CharSequence)
    public void setNavigationContentDescription(int)
    public final int detectDisplayOptions()
    public final void setTitleInt(java.lang.CharSequence)
androidx.core.provider.FontsContractCompat$1:
    public androidx.core.provider.FontsContractCompat$TypefaceResult call()
com.yd.photoeditor.imageprocessing.filter.ImageRenderGroup:
    public java.util.List getFilters()
    public java.util.List getMergedFilters()
com.yd.photoeditor.imageprocessing.temp.ImageFilter2:
    public void setEnableBlend(boolean)
    public void setFilter(com.yd.photoeditor.imageprocessing.filter.ImageRender)
    public void setImageBitmap(android.graphics.Bitmap,boolean)
    public void setScaleType(com.yd.photoeditor.imageprocessing.temp.ImageFilter3$ScaleType)
    public int getFrameWidth()
    public int getFrameHeight()
    public void setRotation(com.yd.photoeditor.imageprocessing.temp.ImageFilter6,boolean,boolean)
    public void setBackground(float,float,float,float)
androidx.fragment.app.Fragment$1
com.google.android.material.circularreveal.cardview.CircularRevealCardView:
    public final com.google.android.material.circularreveal.CircularRevealHelper helper
com.bumptech.glide.load.model.MultiModelLoaderFactory:
    public void <init>(androidx.core.util.Pools$Pool,com.bumptech.glide.load.model.MultiModelLoaderFactory$Factory)
    public static com.bumptech.glide.load.model.ModelLoader emptyModelLoader()
    public final void add(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory,boolean)
androidx.loader.content.Loader
com.bumptech.glide.request.transition.NoTransition:
    public static com.bumptech.glide.request.transition.TransitionFactory getFactory()
    public boolean transition(java.lang.Object,com.bumptech.glide.request.transition.Transition$ViewAdapter)
com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory$1:
    public java.io.File getCacheDirectory()
androidx.lifecycle.ClassesInfoCache:
    public boolean hasLifecycleMethods(java.lang.Class)
    public final java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class)
androidx.constraintlayout.widget.ConstraintLayout:
    public void solveLinearSystem()
    public androidx.constraintlayout.widget.ConstraintLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    public android.view.View getViewById(int)
    public final void updateHierarchy()
    public final void setChildrenConstraints()
    public final void internalMeasureChildren(int,int)
    public final void setSelfDimensionBehaviour(int,int)
    public int mLastMeasureWidthSize
    public int mLastMeasureHeightSize
    public int mLastMeasureWidthMode
    public int mLastMeasureHeightMode
    public androidx.constraintlayout.solver.Metrics mMetrics
com.bumptech.glide.load.model.FileLoader$FileDescriptorFactory$1:
    public android.os.ParcelFileDescriptor open(java.io.File)
    public void close(android.os.ParcelFileDescriptor)
com.bumptech.glide.load.resource.bitmap.ParcelFileDescriptorBitmapDecoder:
    public boolean handles(android.os.ParcelFileDescriptor)
    public com.bumptech.glide.load.engine.Resource decode(android.os.ParcelFileDescriptor,int,int,com.bumptech.glide.load.Options)
androidx.core.view.MarginLayoutParamsCompat
com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder:
    public void <init>(android.graphics.Bitmap$CompressFormat,int)
com.yd.photoeditor.vv.FileUtils:
    public static boolean isLocalStorageDocument(android.net.Uri)
    public static boolean isExternalStorageDocument(android.net.Uri)
    public static boolean isDownloadsDocument(android.net.Uri)
    public static boolean isMediaDocument(android.net.Uri)
    public static boolean isGooglePhotosUri(android.net.Uri)
    public static final java.lang.String TEMP_FOLDER
    public static java.util.Comparator sComparator
    public static java.io.FileFilter sDirFilter
    public static java.io.FileFilter sFileFilter
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat:
    public void <init>(android.content.Context)
    public static androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public final void setupColorAnimator(android.animation.Animator)
    public final void setupAnimatorsForTarget(java.lang.String,android.animation.Animator)
    public android.animation.Animator$AnimatorListener mAnimatorListener
    public java.util.ArrayList mAnimationCallbacks
com.eptonic.photocollage.resEncryption.SPHelper
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry:
    public androidx.core.provider.FontRequest getRequest()
    public int getFetchStrategy()
    public int getTimeout()
androidx.appcompat.app.AlertController$RecycleListView:
    public void setHasDecor(boolean,boolean)
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1:
    public com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState[] newArray(int)
com.google.android.material.animation.AnimatorSetCompat
com.eptonic.photocollage.ui.view.PhotoView:
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public boolean pointInObjectGrabArea()
    public void loadImages(android.content.Context)
    public void destroyBackground()
    public void unloadImages()
    public com.eptonic.photocollage.ui.mutitouchh.MultiTouchEntity getDraggableObjectAtPoint(com.eptonic.photocollage.ui.mutitouchh.MultiTouchController$PointInfo)
    public void selectObject(com.eptonic.photocollage.ui.mutitouchh.MultiTouchEntity,com.eptonic.photocollage.ui.mutitouchh.MultiTouchController$PointInfo)
    public void getPositionAndScale(com.eptonic.photocollage.ui.mutitouchh.MultiTouchEntity,com.eptonic.photocollage.ui.mutitouchh.MultiTouchController$PositionAndScale)
    public boolean setPositionAndScale(com.eptonic.photocollage.ui.mutitouchh.MultiTouchEntity,com.eptonic.photocollage.ui.mutitouchh.MultiTouchController$PositionAndScale,com.eptonic.photocollage.ui.mutitouchh.MultiTouchController$PointInfo)
    public final void cleanImages()
    public final void drawMultitouchDebugMarks(android.graphics.Canvas)
    public int displayHeight
    public int displayWidth
androidx.transition.ChangeBounds$4:
    public void set(android.view.View,android.graphics.PointF)
    public android.graphics.PointF get()
com.eptonic.photocollage.util.ResultContainer:
    public void putImage(java.lang.String,android.graphics.Bitmap)
    public java.util.ArrayList getImageEntities()
    public android.net.Uri mFrameBackgroundImage
    public java.util.ArrayList mFrameImages
    public java.util.ArrayList mFrameStickerImages
    public android.net.Uri mPhotoBackgroundImage
androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks:
    public abstract android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)
    public abstract boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)
    public abstract android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)
    public abstract boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)
    public abstract android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int)
androidx.core.text.BidiFormatter$DirectionalityEstimator:
    public static byte getCachedDirectionality(char)
    public int getEntryDir()
    public int getExitDir()
    public byte dirTypeForward()
    public final byte skipTagForward()
    public final byte skipTagBackward()
    public final byte skipEntityForward()
    public final byte skipEntityBackward()
com.yd.photoeditor.imageprocessing.temp.ImageFilter4:
    public void setBackground(float,float,float,float)
com.google.android.material.resources.MaterialAttributes
com.bumptech.glide.load.engine.executor.GlideExecutor:
    public static com.bumptech.glide.load.engine.executor.GlideExecutor$Builder newDiskCacheBuilder()
    public static com.bumptech.glide.load.engine.executor.GlideExecutor$Builder newSourceBuilder()
    public static com.bumptech.glide.load.engine.executor.GlideExecutor newUnlimitedSourceExecutor()
    public static com.bumptech.glide.load.engine.executor.GlideExecutor$Builder newAnimationBuilder()
    public static com.bumptech.glide.load.engine.executor.GlideExecutor newAnimationExecutor()
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter
com.google.android.material.shape.ShapeAppearanceModel:
    public static com.google.android.material.shape.ShapeAppearanceModel$Builder builder()
    public static com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int,int)
    public static com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int,com.google.android.material.shape.CornerSize)
    public static com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int)
    public static com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int,int)
    public void <init>(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static void <clinit>()
    public com.google.android.material.shape.CornerTreatment getTopLeftCorner()
    public com.google.android.material.shape.CornerTreatment getTopRightCorner()
    public com.google.android.material.shape.CornerTreatment getBottomRightCorner()
    public com.google.android.material.shape.CornerTreatment getBottomLeftCorner()
    public com.google.android.material.shape.CornerSize getTopLeftCornerSize()
    public com.google.android.material.shape.CornerSize getTopRightCornerSize()
    public com.google.android.material.shape.CornerSize getBottomRightCornerSize()
    public com.google.android.material.shape.CornerSize getBottomLeftCornerSize()
    public com.google.android.material.shape.EdgeTreatment getLeftEdge()
    public com.google.android.material.shape.EdgeTreatment getTopEdge()
    public com.google.android.material.shape.EdgeTreatment getRightEdge()
    public com.google.android.material.shape.EdgeTreatment getBottomEdge()
    public com.google.android.material.shape.ShapeAppearanceModel$Builder toBuilder()
    public com.google.android.material.shape.ShapeAppearanceModel withTransformedCornerSizes(com.google.android.material.shape.ShapeAppearanceModel$CornerSizeUnaryOperator)
    public static final com.google.android.material.shape.CornerSize PILL
com.bumptech.glide.request.transition.Transition:
    public abstract boolean transition(java.lang.Object,com.bumptech.glide.request.transition.Transition$ViewAdapter)
org.greenrobot.greendao.identityscope.IdentityScopeObject:
    public void put(java.lang.Object,java.lang.Object)
    public void putNoLock(java.lang.Object,java.lang.Object)
com.bumptech.glide.gifdecoder.StandardGifDecoder:
    public void <init>(com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider)
    public static void <clinit>()
    public int getDelay(int)
    public final void copyIntoScratchFast(com.bumptech.glide.gifdecoder.GifFrame)
    public final void copyCopyIntoScratchRobust(com.bumptech.glide.gifdecoder.GifFrame)
    public final int averageColorsNear(int,int,int)
    public final void decodeBitmapData(com.bumptech.glide.gifdecoder.GifFrame)
    public final int readByte()
    public final int readBlock()
    public static final java.lang.String TAG
com.bumptech.glide.request.target.ViewTarget:
    public void onLoadStarted(android.graphics.drawable.Drawable)
    public void onLoadCleared(android.graphics.drawable.Drawable)
    public final void maybeAddAttachStateListener()
    public final void maybeRemoveAttachStateListener()
    public final void setTag(java.lang.Object)
    public final java.lang.Object getTag()
    public android.view.View$OnAttachStateChangeListener attachStateListener
    public boolean isClearedByUs
    public boolean isAttachStateListenerAdded
    public static boolean isTagUsedAtLeastOnce
androidx.core.widget.ListViewCompat
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup:
    public int getSpanSize(int)
    public int getSpanIndex(int,int)
androidx.transition.ViewOverlayApi14$OverlayViewGroup
com.bumptech.glide.load.model.MultiModelLoaderFactory$Entry:
    public boolean handles(java.lang.Class,java.lang.Class)
    public boolean handles(java.lang.Class)
com.google.android.material.ripple.RippleDrawableCompat$1
com.yd.photoeditor.imageprocessing.util.OpenGlUtils
com.bumptech.glide.load.engine.cache.MemoryCache:
    public abstract com.bumptech.glide.load.engine.Resource remove(com.bumptech.glide.load.Key)
    public abstract com.bumptech.glide.load.engine.Resource put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.Resource)
    public abstract void setResourceRemovedListener(com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener)
    public abstract void clearMemory()
    public abstract void trimMemory(int)
com.bumptech.glide.load.data.mediastore.MediaStoreUtil
com.eptonic.photocollage.model.ItemInfo:
    public void setTitle(java.lang.String)
    public java.lang.String getTitle()
    public void setSelected(boolean)
    public boolean isSelected()
androidx.customview.widget.FocusStrategy$CollectionAdapter:
    public abstract java.lang.Object get(java.lang.Object,int)
    public abstract int size(java.lang.Object)
androidx.core.view.accessibility.AccessibilityViewCommand:
    public abstract boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments)
androidx.recyclerview.widget.RecyclerView$SavedState:
    public void copyFrom(androidx.recyclerview.widget.RecyclerView$SavedState)
com.bumptech.glide.load.engine.executor.GlideExecutor$Builder
androidx.vectordrawable.graphics.drawable.ArgbEvaluator:
    public static androidx.vectordrawable.graphics.drawable.ArgbEvaluator getInstance()
androidx.constraintlayout.solver.widgets.ConstraintWidget$1
androidx.appcompat.widget.AppCompatSeekBarHelper:
    public void setTickMark(android.graphics.drawable.Drawable)
    public void jumpDrawablesToCurrentState()
    public void drawableStateChanged()
androidx.recyclerview.widget.RecyclerView$ViewFlinger:
    public void fling(int,int)
    public final void internalPostOnAnimation()
    public final float distanceInfluenceForSnapDuration(float)
    public final int computeScrollDuration(int,int,int,int)
androidx.core.text.PrecomputedTextCompat$Params$Builder
com.yd.photoeditor.actions.BaseAction:
    public boolean isAttached()
    public void onDoneButtonClick()
    public void onClicked()
androidx.appcompat.app.AlertController$4
com.google.android.material.textfield.TextInputLayout$SavedState$1:
    public com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.textfield.TextInputLayout$SavedState[] newArray(int)
androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup:
    public java.util.List getStartWidgets(int)
    public java.util.Set getWidgetsToSet(int)
    public java.util.List getWidgetsToSolve()
    public void updateUnresolvedWidgets()
com.bumptech.glide.disklrucache.Util:
    public static void closeQuietly(java.io.Closeable)
    public static final java.nio.charset.Charset UTF_8
com.google.android.material.textfield.IndicatorViewController:
    public static synthetic int access$002(com.google.android.material.textfield.IndicatorViewController,int)
    public static synthetic android.animation.Animator access$102(com.google.android.material.textfield.IndicatorViewController,android.animation.Animator)
    public static synthetic android.widget.TextView access$200(com.google.android.material.textfield.IndicatorViewController)
    public void showHelper(java.lang.CharSequence)
    public void hideHelperText()
    public void showError(java.lang.CharSequence)
    public boolean isCaptionView(int)
    public void setErrorEnabled(boolean)
    public boolean isErrorEnabled()
    public boolean isHelperTextEnabled()
    public void setHelperTextEnabled(boolean)
    public java.lang.CharSequence getErrorText()
    public java.lang.CharSequence getHelperText()
    public void setTypefaces(android.graphics.Typeface)
    public android.content.res.ColorStateList getErrorViewTextColors()
    public void setErrorViewTextColor(android.content.res.ColorStateList)
    public void setErrorTextAppearance(int)
    public int getHelperTextViewCurrentTextColor()
    public void setHelperTextViewTextColor(android.content.res.ColorStateList)
    public void setHelperTextAppearance(int)
    public final void setCaptionViewVisibilities(int,int)
    public final android.animation.ObjectAnimator createCaptionOpacityAnimator(android.widget.TextView,boolean)
    public final android.animation.ObjectAnimator createCaptionTranslationYAnimator(android.widget.TextView)
    public final boolean canAdjustIndicatorPadding()
    public final void setViewGroupGoneIfEmpty(android.view.ViewGroup,int)
    public final boolean isCaptionStateError(int)
    public final void setTextViewTypeface(android.widget.TextView,android.graphics.Typeface)
com.google.android.material.internal.NavigationMenuItemView:
    public final boolean shouldExpandActionArea()
    public final void adjustAppearance()
    public final android.graphics.drawable.StateListDrawable createDefaultBackground()
com.bumptech.glide.signature.ApplicationVersionSignature:
    public static com.bumptech.glide.load.Key obtainVersionSignature(android.content.Context)
    public static java.lang.String getVersionCode(android.content.pm.PackageInfo)
    public static android.content.pm.PackageInfo getPackageInfo(android.content.Context)
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty:
    public java.lang.Integer get(com.google.android.material.circularreveal.CircularRevealWidget)
    public void set(com.google.android.material.circularreveal.CircularRevealWidget,java.lang.Integer)
com.google.android.material.animation.MotionTiming:
    public static com.google.android.material.animation.MotionTiming createFromAnimator(android.animation.ValueAnimator)
    public static android.animation.TimeInterpolator getInterpolatorCompat(android.animation.ValueAnimator)
    public long getDelay()
    public long getDuration()
    public int getRepeatCount()
    public int getRepeatMode()
androidx.exifinterface.media.ExifInterface$Rational:
    public double calculate()
com.bumptech.glide.load.resource.bitmap.Downsampler:
    public static void calculateScaling(com.bumptech.glide.load.ImageHeaderParser$ImageType,com.bumptech.glide.load.resource.bitmap.ImageReader,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,int,int,int,int,int,android.graphics.BitmapFactory$Options)
    public static int adjustTargetDensityForError(double)
    public static boolean isScaling(android.graphics.BitmapFactory$Options)
    public static void logDecode(int,int,java.lang.String,android.graphics.BitmapFactory$Options,android.graphics.Bitmap,int,int,long)
    public static java.lang.String getInBitmapString(android.graphics.BitmapFactory$Options)
    public static void setInBitmap(android.graphics.BitmapFactory$Options,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int,int)
    public boolean handles()
    public boolean handles1()
    public boolean handles2()
    public com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int,com.bumptech.glide.load.Options)
    public com.bumptech.glide.load.engine.Resource decode(android.os.ParcelFileDescriptor,int,int,com.bumptech.glide.load.Options)
    public final boolean shouldUsePool(com.bumptech.glide.load.ImageHeaderParser$ImageType)
    public final void calculateConfig(com.bumptech.glide.load.resource.bitmap.ImageReader,com.bumptech.glide.load.DecodeFormat,boolean,boolean,android.graphics.BitmapFactory$Options,int,int)
    public static final com.bumptech.glide.load.Option DOWNSAMPLE_STRATEGY
com.eptonic.photocollage.ui.view.PhotoLayout$6:
    public varargs android.graphics.Bitmap doInBackground()
    public void onPostExecute(android.graphics.Bitmap)
com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper:
    public static com.bumptech.glide.load.engine.cache.DiskCache create(java.io.File,long)
com.google.android.material.internal.DescendantOffsetUtils:
    public static void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect)
androidx.recyclerview.widget.OpReorderer$Callback:
    public abstract androidx.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object)
    public abstract void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
androidx.constraintlayout.solver.widgets.ConstraintAnchor:
    public androidx.constraintlayout.solver.widgets.ResolutionAnchor getResolutionNode()
    public androidx.constraintlayout.solver.SolverVariable getSolverVariable()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getOwner()
    public androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type getType()
    public androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength getStrength()
    public androidx.constraintlayout.solver.widgets.ConstraintAnchor getTarget()
    public int getConnectionCreator()
    public boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength,int)
    public boolean isValidConnection(androidx.constraintlayout.solver.widgets.ConstraintAnchor)
    public androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType mConnectionType
com.google.android.material.circularreveal.CircularRevealHelper
com.eptonic.photocollage.ui.dahjk.ahjd.fah.fha.fragment.GalleryAlbumFragment$LoadAsyncTask:
    public varargs java.util.ArrayList doInBackground()
    public void onPostExecute(java.util.ArrayList)
com.bumptech.glide.load.model.ModelLoaderRegistry:
    public void <init>(com.bumptech.glide.load.model.MultiModelLoaderFactory)
    public static java.lang.Class getClass(java.lang.Object)
    public java.util.List getModelLoaders(java.lang.Object)
androidx.appcompat.app.TwilightManager$TwilightState:
    public long yesterdaySunset
    public long todaySunrise
    public long todaySunset
    public long tomorrowSunrise
com.bumptech.glide.load.engine.DecodeJob:
    public com.bumptech.glide.load.engine.DecodeJob init(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.engine.EngineKey,com.bumptech.glide.load.Key,int,int,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.engine.DiskCacheStrategy,java.util.Map,boolean,boolean,boolean,com.bumptech.glide.load.Options,com.bumptech.glide.load.engine.DecodeJob$Callback,int)
    public boolean willDecodeFromCache()
    public void release(boolean)
    public int compareTo(com.bumptech.glide.load.engine.DecodeJob)
    public void cancel()
    public com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.DataSource,com.bumptech.glide.load.engine.Resource)
    public final void onEncodeComplete()
    public final void onLoadFailed()
    public final int getPriority()
    public final void notifyComplete(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource)
    public final void notifyEncodeAndRelease(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource)
    public final com.bumptech.glide.load.Options getOptionsWithHardwareConfig(com.bumptech.glide.load.DataSource)
    public final com.bumptech.glide.load.engine.Resource runLoadPath(java.lang.Object,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.engine.LoadPath)
    public final void logWithTimeAndKey(java.lang.String,long)
com.bumptech.glide.load.resource.file.FileDecoder:
    public boolean handles()
    public com.bumptech.glide.load.engine.Resource decode(java.io.File)
androidx.core.content.ContextCompat:
    public static android.content.res.ColorStateList getColorStateList(android.content.Context,int)
    public static android.util.TypedValue sTempValue
com.google.android.material.animation.MotionSpec:
    public static void addInfoFromAnimator(com.google.android.material.animation.MotionSpec,android.animation.Animator)
    public boolean hasTiming(java.lang.String)
    public void setTiming(java.lang.String,com.google.android.material.animation.MotionTiming)
    public void setPropertyValues(java.lang.String,android.animation.PropertyValuesHolder[])
    public long getTotalDuration()
androidx.core.widget.EdgeEffectCompat
com.yd.photoeditor.imageprocessing.filter.TwoInputRender:
    public void setBitmap(android.graphics.Bitmap)
    public void setRecycleBitmap(boolean)
    public boolean isRecycleBitmap()
    public java.nio.ByteBuffer mTexture2CoordinatesBuffer
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath:
    public void toPath(android.graphics.Path)
com.google.android.material.floatingactionbutton.MotionStrategy:
    public abstract void setMotionSpec(com.google.android.material.animation.MotionSpec)
    public abstract com.google.android.material.animation.MotionSpec getMotionSpec()
androidx.collection.MapCollections:
    public static boolean containsAllHelper(java.util.Map,java.util.Collection)
    public static boolean removeAllHelper(java.util.Map,java.util.Collection)
    public java.util.Set getEntrySet()
    public java.util.Set getKeySet()
    public java.util.Collection getValues()
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback:
    public abstract void onWindowVisibilityChanged(int)
    public abstract void showForSystem()
    public abstract void hideForSystem()
    public abstract void enableContentAnimations(boolean)
    public abstract void onContentScrollStarted()
    public abstract void onContentScrollStopped()
androidx.lifecycle.LiveData:
    public void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)
    public void setValue(java.lang.Object)
    public java.lang.Object getValue()
    public boolean hasActiveObservers()
    public final java.lang.Runnable mPostValueRunnable
com.eptonic.photocollage.util.FrameImageUtils:
    public static com.eptonic.photocollage.model.TemplateItem template_1_19()
    public static com.eptonic.photocollage.model.TemplateItem template_1_18()
    public static com.eptonic.photocollage.model.TemplateItem template_1_17()
    public static com.eptonic.photocollage.model.TemplateItem template_1_16()
    public static com.eptonic.photocollage.model.TemplateItem template_1_15()
    public static com.eptonic.photocollage.model.TemplateItem template_1_14()
    public static com.eptonic.photocollage.model.TemplateItem template_1_13()
    public static com.eptonic.photocollage.model.TemplateItem template_1_12()
    public static com.eptonic.photocollage.model.TemplateItem template_1_11()
    public static com.eptonic.photocollage.model.TemplateItem template_1_10()
    public static com.eptonic.photocollage.model.TemplateItem template_1_9()
    public static com.eptonic.photocollage.model.TemplateItem template_1_8()
    public static com.eptonic.photocollage.model.TemplateItem template_1_7()
    public static com.eptonic.photocollage.model.TemplateItem template_1_6()
    public static com.eptonic.photocollage.model.TemplateItem template_1_5()
    public static com.eptonic.photocollage.model.TemplateItem template_1_4()
    public static com.eptonic.photocollage.model.TemplateItem template_1_3()
    public static com.eptonic.photocollage.model.TemplateItem template_1_2()
    public static com.eptonic.photocollage.model.TemplateItem template_1_1()
    public static com.eptonic.photocollage.model.TemplateItem template_1_0()
    public static com.eptonic.photocollage.model.TemplateItem template_0_20()
    public static com.eptonic.photocollage.model.TemplateItem template_0_19()
    public static com.eptonic.photocollage.model.TemplateItem template_0_18()
    public static com.eptonic.photocollage.model.TemplateItem template_0_17()
    public static com.eptonic.photocollage.model.TemplateItem template_0_16()
    public static com.eptonic.photocollage.model.TemplateItem template_0_15()
    public static com.eptonic.photocollage.model.TemplateItem template_0_14()
    public static com.eptonic.photocollage.model.TemplateItem template_0_13()
    public static com.eptonic.photocollage.model.TemplateItem template_0_12()
    public static com.eptonic.photocollage.model.TemplateItem template_0_11()
    public static com.eptonic.photocollage.model.TemplateItem template_0_10()
    public static com.eptonic.photocollage.model.TemplateItem template_0_9()
    public static com.eptonic.photocollage.model.TemplateItem template_0_8()
    public static com.eptonic.photocollage.model.TemplateItem template_0_7()
    public static com.eptonic.photocollage.model.TemplateItem template_0_6()
    public static com.eptonic.photocollage.model.TemplateItem template_0_5()
    public static com.eptonic.photocollage.model.TemplateItem template_0_4()
    public static com.eptonic.photocollage.model.TemplateItem template_0_3()
    public static com.eptonic.photocollage.model.TemplateItem template_0_2()
    public static com.eptonic.photocollage.model.TemplateItem template_0_1()
    public static com.eptonic.photocollage.model.TemplateItem template_0_0()
com.bumptech.glide.load.resource.transcode.DrawableBytesTranscoder:
    public static com.bumptech.glide.load.engine.Resource toGifDrawableResource(com.bumptech.glide.load.engine.Resource)
androidx.core.view.MenuItemCompat
androidx.appcompat.app.ActionBar:
    public boolean openOptionsMenu()
    public boolean closeOptionsMenu()
    public boolean invalidateOptionsMenu()
    public boolean onMenuKeyEvent()
    public void onDestroy()
androidx.loader.content.Loader$OnLoadCompleteListener
com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$1
com.bumptech.glide.load.model.ByteBufferFileLoader:
    public com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.io.File)
    public boolean handles()
com.eptonic.photocollage.ui.wrapper.dah.ghjf.gfhs.fhsj.ghsj.hfjsh.fhsj.fhsj.hfjs.fdj.sjhfs.fgsj.jgks.vbb.uiManager.TemplateManager:
    public void loadTemplateImages()
    public final int mImageInTemplateCount
androidx.appcompat.app.AppCompatDelegate:
    public static int getDefaultNightMode()
    public abstract androidx.appcompat.app.ActionBar getSupportActionBar()
    public abstract android.view.MenuInflater getMenuInflater()
    public abstract void onPostCreate(android.os.Bundle)
    public abstract void onConfigurationChanged(android.content.res.Configuration)
    public abstract void onStart()
    public abstract void onPostResume()
    public void setTheme(int)
    public abstract android.view.View findViewById(int)
    public void attachBaseContext(android.content.Context)
    public abstract void onDestroy()
    public abstract void onSaveInstanceState(android.os.Bundle)
    public int getLocalNightMode()
    public static int sDefaultNightMode
com.bumptech.glide.load.data.FileDescriptorLocalUriFetcher:
    public android.os.ParcelFileDescriptor loadResource(android.net.Uri,android.content.ContentResolver)
    public void close(android.os.ParcelFileDescriptor)
org.greenrobot.greendao.AbstractDaoSession:
    public void registerDao(java.lang.Class,org.greenrobot.greendao.AbstractDao)
    public org.greenrobot.greendao.query.QueryBuilder queryBuilder(java.lang.Class)
    public final org.greenrobot.greendao.database.Database db
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool
com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo:
    public void set(float,float,float)
androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener:
    public abstract void onFitSystemWindows(android.graphics.Rect)
androidx.constraintlayout.solver.widgets.Guideline$1
androidx.transition.ViewUtils$2:
    public android.graphics.Rect get(android.view.View)
    public void set(android.view.View,android.graphics.Rect)
com.eptonic.photocollage.adapter.SelectedPicsAdapter$ViewHolder:
    public android.widget.ImageView mClose
com.eptonic.photocollage.adapter.TemplateViewHolder:
    public void bindItem(com.eptonic.photocollage.model.TemplateItem,com.eptonic.photocollage.adapter.TemplateViewHolder$OnTemplateItemClickListener)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$5:
    public void set(android.view.View,java.lang.Float)
    public java.lang.Float get(android.view.View)
com.yd.photoeditor.task.ApplyFilterTask:
    public varargs android.graphics.Bitmap doInBackground()
    public void onPostExecute(android.graphics.Bitmap)
com.eptonic.photocollage.util.Constants:
    public static java.lang.String XX2
    public static java.lang.String XX
com.yd.photoeditor.imageprocessing.filter.TwoPassTextureSamplingRender:
    private void constructor$com$yd$photoeditor$imageprocessing$filter$TwoPassRender(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.eptonic.photocollage.adapter.SelectStickerAdapter$ViewHolder:
    public final synthetic com.eptonic.photocollage.adapter.SelectStickerAdapter this$0
androidx.core.provider.FontsContractCompat$FontInfo:
    public android.net.Uri getUri()
    public int getTtcIndex()
    public int getWeight()
    public boolean isItalic()
    public int getResultCode()
com.bumptech.glide.util.ContentLengthInputStream:
    public static java.io.InputStream obtain(java.io.InputStream,long)
androidx.constraintlayout.solver.ArrayRow:
    public boolean hasKeyVariable()
    public java.lang.String toReadableString()
    public void reset()
    public boolean hasVariable(androidx.constraintlayout.solver.SolverVariable)
    public androidx.constraintlayout.solver.ArrayRow createRowDefinition(androidx.constraintlayout.solver.SolverVariable,int)
    public androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.SolverVariable,int)
    public androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int)
    public androidx.constraintlayout.solver.ArrayRow addSingleError(androidx.constraintlayout.solver.SolverVariable,int)
    public androidx.constraintlayout.solver.ArrayRow createRowEqualMatchDimensions(float,float,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable)
    public androidx.constraintlayout.solver.ArrayRow createRowCentering(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int)
    public androidx.constraintlayout.solver.ArrayRow createRowDimensionPercent(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float)
    public void ensurePositiveConstant()
    public boolean chooseSubject(androidx.constraintlayout.solver.LinearSystem)
    public androidx.constraintlayout.solver.SolverVariable pickPivot(androidx.constraintlayout.solver.SolverVariable)
    public boolean isEmpty()
    public androidx.constraintlayout.solver.SolverVariable getPivotCandidate(androidx.constraintlayout.solver.LinearSystem,boolean[])
    public void clear()
    public void initFromRow(androidx.constraintlayout.solver.LinearSystem$Row)
    public androidx.constraintlayout.solver.SolverVariable getKey()
com.yd.photoeditor.imageprocessing.filter.ImageRender:
    public boolean isInitialized()
    public int getOutputWidth()
    public int getOutputHeight()
    public int getProgram()
    public void setInteger(int,int)
    public void setFloatVec3(int,float[])
    public void setPoint(int,android.graphics.PointF)
    public void setUniformMatrix3f(int,float[])
    public void setUniformMatrix4f(int,float[])
    public java.lang.Object object
com.eptonic.photocollage.ui.view.template.MultiTouchHandler:
    public void <init>(android.os.Parcel)
    public void setMaxPositionOffset(float)
    public android.graphics.Matrix getMatrix()
    public android.graphics.Matrix getScaleMatrix()
    public void setScale(float)
    public void setEnableRotation(boolean)
    public void setEnableZoom(boolean)
    public void setEnableTranslateX(boolean)
    public void setEnableTranslateY(boolean)
com.bumptech.glide.load.engine.executor.RuntimeCompat
com.bumptech.glide.request.ErrorRequestCoordinator
com.yd.photoeditor.vv.Utils:
    public void <init>()
    public static final java.lang.String BACKGROUND_FOLDER
    public static final java.lang.String CROP_FOLDER
    public static final java.lang.String FILTER_FOLDER
    public static final java.lang.String FRAME_FOLDER
    public static final java.lang.String STICKER_FOLDER
    public static final java.lang.String TAG
    public static final java.lang.String TEMP_FOLDER
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder:
    public void <init>(android.content.Context,java.util.List,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifHeaderParserPool,com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifDecoderFactory)
    public boolean handles(java.nio.ByteBuffer,com.bumptech.glide.load.Options)
    public com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.load.Options)
androidx.transition.AnimatorUtils$AnimatorPauseListenerCompat
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser:
    public static int parseExifSegment(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$RandomAccessReader)
    public static int calcTagOffset(int,int)
    public static boolean handles(int)
    public final int getOrientation(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)
    public final boolean hasJpegExifPreamble(byte[],int)
androidx.transition.Fade$1:
    public final synthetic androidx.transition.Fade this$0
com.bumptech.glide.load.ImageHeaderParserUtils$1
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry:
    public int size()
    public void add(java.lang.Object)
com.yd.photoeditor.actions.RotationAction:
    public void reset()
    public void rotateLeft()
    public void rotateRight()
    public void flipVer()
    public void flipHor()
    public android.content.SharedPreferences mRotationActionPref
androidx.appcompat.app.ToolbarActionBar
com.google.android.material.shape.ShapePath$1:
    public final synthetic com.google.android.material.shape.ShapePath this$0
com.google.android.material.transformation.FabTransformationBehavior$2:
    public final synthetic com.google.android.material.transformation.FabTransformationBehavior this$0
com.bumptech.glide.load.engine.Engine$EngineJobFactory$1:
    public com.bumptech.glide.load.engine.EngineJob create()
androidx.core.widget.TintableImageSourceView
com.bumptech.glide.manager.TargetTracker:
    public void track(com.bumptech.glide.request.target.Target)
    public void untrack(com.bumptech.glide.request.target.Target)
    public java.util.List getAll()
    public void clear()
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo:
    public void saveSpanReferenceLines(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[])
    public void assignCoordinateFromPadding(int)
com.eptonic.photocollage.ui.next.s.xx.xxx.yy.cc.activity.BasePhotoActivity:
    public void resultPickMultipleImages()
    public void resultStickers(android.net.Uri[])
    public android.app.Dialog getBackgroundImageDialog()
    public void requestPhoto()
    public final void startPhotoEditor(android.net.Uri,boolean)
    public android.net.Uri mCapturedImageUri
com.bumptech.glide.GlideBuilder$1:
    public com.bumptech.glide.request.RequestOptions build()
    public final synthetic com.bumptech.glide.GlideBuilder this$0
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable:
    public void setEnabled(boolean)
androidx.core.util.Preconditions
androidx.core.widget.CompoundButtonCompat
androidx.core.text.TextUtilsCompat:
    public static int getLayoutDirectionFromFirstChar(java.util.Locale)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$DisabledElevationAnimation:
    public final synthetic com.google.android.material.floatingactionbutton.FloatingActionButtonImpl this$0
com.bumptech.glide.load.model.DataUrlLoader$DataDecoder:
    public abstract java.lang.Object decode(java.lang.String)
    public abstract void close(java.lang.Object)
    public abstract java.lang.Class getDataClass()
com.bumptech.glide.load.resource.bitmap.DrawableTransformation:
    public com.bumptech.glide.load.Transformation asBitmapDrawable()
    public final com.bumptech.glide.load.engine.Resource newDrawableResource(android.content.Context,com.bumptech.glide.load.engine.Resource)
com.bumptech.glide.load.engine.EngineKeyFactory:
    public com.bumptech.glide.load.engine.EngineKey buildKey(java.lang.Object,com.bumptech.glide.load.Key,int,int,java.util.Map,java.lang.Class,java.lang.Class,com.bumptech.glide.load.Options)
com.google.android.material.drawable.DrawableUtils
com.yd.photoeditor.imageprocessing.filter.processing.VWWWV:
    public void <init>(float)
    public void setBlurSize(float)
androidx.appcompat.app.AppCompatDialog:
    public static int getThemeResId(android.content.Context,int)
    public boolean supportRequestWindowFeature(int)
com.eptonic.photocollage.ui.next.s.xx.xxx.yy.cc.activity.FrameDetailActivity:
    public android.widget.LinearLayout itemsPanel
androidx.constraintlayout.solver.LinearSystem:
    public static void getMetrics()
    public static androidx.constraintlayout.solver.ArrayRow createRowDimensionPercent(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float,boolean)
    public static void <clinit>()
    public androidx.constraintlayout.solver.SolverVariable createExtraVariable()
    public void addSingleError(androidx.constraintlayout.solver.ArrayRow,int,int)
    public void minimize()
    public androidx.constraintlayout.solver.Cache getCache()
    public void addGreaterBarrier(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,boolean)
    public void addLowerBarrier(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,boolean)
    public void addCenterPoint(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidget,float,int)
    public final void addError(androidx.constraintlayout.solver.ArrayRow)
    public final int enforceBFS()
    public androidx.constraintlayout.solver.ArrayRow[] tempClientsCopy
    public static androidx.constraintlayout.solver.Metrics sMetrics
androidx.transition.ChangeBounds$5:
    public void set(android.view.View,android.graphics.PointF)
    public android.graphics.PointF get()
com.eptonic.photocollage.ui.wrapper.dah.ghjf.gfhs.fhsj.ghsj.hfjsh.fhsj.fhsj.hfjs.fdj.sjhfs.fgsj.jgks.vbb.uiManager.FreePhotoUiManager$6:
    public varargs android.graphics.Bitmap[] doInBackground()
    public void onPostExecute(android.graphics.Bitmap[])
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo:
    public void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.exifinterface.media.ExifInterface$ExifAttribute:
    public static androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int[],java.nio.ByteOrder)
    public static androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long[],java.nio.ByteOrder)
    public static androidx.exifinterface.media.ExifInterface$ExifAttribute createURational(androidx.exifinterface.media.ExifInterface$Rational[],java.nio.ByteOrder)
androidx.fragment.app.FragmentActivity:
    public final android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
    public void onResumeFragments()
    public boolean onPrepareOptionsPanel(android.view.View,android.view.Menu)
    public void onAttachFragment()
    public androidx.fragment.app.FragmentManager getSupportFragmentManager()
    public final void markFragmentsCreated()
    public boolean mStartedIntentSenderFromFragment
    public boolean mStartedActivityFromFragment
com.yd.photoeditor.vv.FileUtils$2
androidx.appcompat.view.ViewPropertyAnimatorCompatSet:
    public androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat)
    public androidx.appcompat.view.ViewPropertyAnimatorCompatSet playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat)
    public void onAnimationsEnded()
    public androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long)
    public androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator)
    public androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener)
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1:
    public com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState[] newArray(int)
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key:
    public void init(int,android.graphics.Bitmap$Config)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState:
    public boolean hasPanelItems()
    public void setStyle(android.content.Context)
    public androidx.appcompat.view.menu.MenuView getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback)
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool:
    public final java.lang.Object getArrayForKey(com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key)
    public final boolean isSmallEnoughForReuse(int)
    public final boolean mayFillRequest(int,java.lang.Integer)
    public final boolean isNoMoreThanHalfFull()
    public final void evict()
    public final com.bumptech.glide.load.engine.bitmap_recycle.ArrayAdapterInterface getAdapterFromObject(java.lang.Object)
com.google.android.material.shadow.ShadowViewDelegate:
    public abstract void setShadowPadding(int,int,int,int)
    public abstract void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public abstract boolean isCompatPaddingEnabled()
com.bumptech.glide.load.engine.EngineJob$EngineResourceFactory:
    public com.bumptech.glide.load.engine.EngineResource build(com.bumptech.glide.load.engine.Resource,boolean,com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource$ResourceListener)
androidx.core.view.ViewCompat$4:
    public java.lang.CharSequence frameworkGet(android.view.View)
    public void frameworkSet(android.view.View,java.lang.CharSequence)
    public boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence)
androidx.arch.core.internal.FastSafeIterableMap:
    public java.util.Map$Entry ceil(java.lang.Object)
com.google.android.material.chip.ChipGroup$CheckedStateTracker:
    public void <init>(com.google.android.material.chip.ChipGroup)
androidx.appcompat.widget.Toolbar:
    public boolean canShowOverflowMenu()
    public boolean isOverflowMenuShowPending()
    public boolean hideOverflowMenu()
    public void setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)
    public void dismissPopupMenus()
    public boolean hasExpandedActionView()
    public void collapseActionView()
    public void setTitleTextAppearance(android.content.Context,int)
    public void setSubtitleTextAppearance(android.content.Context,int)
    public void inflateMenu(int)
    public void setContentInsetsRelative(int,int)
    public androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet)
    public void removeChildrenForExpandedActionView()
    public void addChildrenForExpandedActionView()
    public final void ensureLogoView()
    public final void postShowOverflowMenu()
    public final boolean shouldCollapse()
    public final int getViewListMeasuredWidth(java.util.List,int[])
    public final int getChildVerticalGravity(int)
    public androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback
    public androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback
com.google.android.material.shadow.ShadowRenderer:
    public void <init>(int)
    public void drawEdgeShadow(android.graphics.Canvas,android.graphics.Matrix,android.graphics.RectF,int)
    public void drawCornerShadow(android.graphics.Canvas,android.graphics.Matrix,android.graphics.RectF,int,float,float)
    public android.graphics.Paint getShadowPaint()
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3:
    public android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix)
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton:
    public final float[] mTempPts
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream:
    public void setByteOrder(java.nio.ByteOrder)
    public int peek()
androidx.transition.ViewOverlayApi14
androidx.fragment.app.FragmentManagerViewModel:
    public static androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore)
    public boolean isCleared()
    public boolean addRetainedFragment(androidx.fragment.app.Fragment)
    public java.util.Collection getRetainedFragments()
    public boolean removeRetainedFragment(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)
    public androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)
    public void clearNonConfigState(androidx.fragment.app.Fragment)
com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener:
    public abstract void onConnectivityChanged(boolean)
com.yd.photoeditor.vv.TempDataContainer:
    public static com.yd.photoeditor.vv.TempDataContainer getInstance()
    public java.util.List getOnInstallStoreItemListeners()
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale
com.eptonic.photocollage.ui.view.TransitionImageView$OnImageClickListener:
    public abstract void onDoubleClickImage(com.eptonic.photocollage.ui.view.TransitionImageView)
    public abstract void onLongClickImage(com.eptonic.photocollage.ui.view.TransitionImageView)
androidx.appcompat.widget.AppCompatHintHelper
com.google.android.material.datepicker.DateStrings
androidx.transition.AnimatorUtils
androidx.recyclerview.widget.RecyclerView$LayoutManager:
    public final boolean isItemPrefetchEnabled()
    public void dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView)
    public void dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler)
    public boolean isAttachedToWindow()
    public boolean removeCallbacks(java.lang.Runnable)
    public void onAttachedToWindow()
    public void onDetachedFromWindow()
    public boolean getClipToPadding()
    public boolean isSmoothScrolling()
    public void addDisappearingView(android.view.View)
    public void addDisappearingView(android.view.View,int)
    public void addView(android.view.View,int)
    public void removeView(android.view.View)
    public int getBaseline()
    public void detachViewAt(int)
    public void attachView(android.view.View,int,androidx.recyclerview.widget.RecyclerView$LayoutParams)
    public void attachView(android.view.View,int)
    public void moveView(int,int)
    public int getWidthMode()
    public int getHeightMode()
    public int getWidth()
    public int getHeight()
    public int getItemCount()
    public void measureChildWithMargins(android.view.View,int,int)
    public void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)
    public void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect)
    public int getTopDecorationHeight(android.view.View)
    public int getBottomDecorationHeight(android.view.View)
    public int getLeftDecorationWidth(android.view.View)
    public int getRightDecorationWidth(android.view.View)
    public android.view.View onInterceptFocusSearch()
    public boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean)
    public boolean isViewPartiallyVisible(android.view.View,boolean)
    public boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView)
    public boolean onRequestChildFocus1(androidx.recyclerview.widget.RecyclerView,android.view.View,android.view.View)
    public void onAdapterChanged()
    public boolean onAddFocusables()
    public void onItemsUpdated()
    public void onMeasure(int,int)
    public void setMeasuredDimension(int,int)
    public void stopSmoothScroller()
    public void onSmoothScrollerStopped(androidx.recyclerview.widget.RecyclerView$SmoothScroller)
    public void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    public void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    public void onInitializeAccessibilityEvent1(android.view.accessibility.AccessibilityEvent)
    public void requestSimpleAnimationsInNextLayout()
    public int getSelectionModeForAccessibility()
    public boolean isLayoutHierarchical()
    public boolean performAccessibilityAction(int,android.os.Bundle)
    public boolean performAccessibilityAction(int)
    public boolean performAccessibilityActionForItem(android.view.View,int,android.os.Bundle)
    public boolean performAccessibilityActionForItem()
    public boolean hasFlexibleChildInBothOrientations()
    public final void detachViewInternal(int)
    public final void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$Recycler,int,android.view.View)
    public final int[] getChildRectangleOnScreenScrollAmount(android.view.View,android.graphics.Rect)
    public final boolean isFocusedChildVisibleAfterScrolling(androidx.recyclerview.widget.RecyclerView,int,int)
com.bumptech.glide.load.engine.Engine$DecodeJobFactory$1:
    public com.bumptech.glide.load.engine.DecodeJob create()
com.google.android.material.animation.ImageMatrixProperty:
    public void set(android.widget.ImageView,android.graphics.Matrix)
    public android.graphics.Matrix get(android.widget.ImageView)
com.bumptech.glide.load.resource.bitmap.HardwareConfigState:
    public static boolean isHardwareConfigAllowedByDeviceModel()
    public boolean setHardwareConfigIfAllowed(int,int,android.graphics.BitmapFactory$Options,boolean,boolean)
com.bumptech.glide.load.resource.drawable.DrawableDecoderCompat:
    public static android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.Context,int)
    public static android.graphics.drawable.Drawable getDrawable(android.content.Context,int,android.content.res.Resources$Theme)
    public static android.graphics.drawable.Drawable loadDrawableV7(android.content.Context,int,android.content.res.Resources$Theme)
    public static android.graphics.drawable.Drawable loadDrawableV4(android.content.Context,int,android.content.res.Resources$Theme)
    public static void <clinit>()
androidx.transition.WindowIdApi14
com.google.android.material.appbar.AppBarLayout:
    public com.google.android.material.appbar.AppBarLayout$LayoutParams generateDefaultLayoutParams()
    public com.google.android.material.appbar.AppBarLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    public boolean hasChildWithInterpolator()
    public boolean hasScrollableChildren()
    public void onOffsetChanged(int)
    public boolean isLiftOnScroll()
    public void resetPendingAction()
    public final void updateWillNotDraw()
    public final boolean shouldDrawStatusBarForeground()
    public final boolean hasCollapsibleChild()
    public final void invalidateScrollRanges()
    public final void setExpanded(boolean,boolean,boolean)
    public final boolean setLiftableState(boolean)
    public final void startLiftOnScrollElevationOverlayAnimation(com.google.android.material.shape.MaterialShapeDrawable,boolean)
    public final android.view.View findLiftOnScrollTargetView(android.view.View)
    public final void clearLiftOnScrollTargetView()
    public androidx.core.view.WindowInsetsCompat lastInsets
    public java.util.List listeners
    public boolean liftableOverride
com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder:
    public com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()
com.yd.photoeditor.imageprocessing.temp.ImageFilter5
com.yd.photoeditor.view.DrawableCropImageView:
    public android.graphics.Bitmap cropImage(boolean)
    public float calculateScaleRatio(int,int)
    public int[] calculateThumbnailSize(int,int)
    public final boolean insideCircle(float,float,float,float,float)
    public final void setCameraPosition(float,float)
    public final android.graphics.Bitmap cropImage(android.graphics.Bitmap,boolean)
    public final android.graphics.Bitmap createBitmapMask(java.util.ArrayList)
    public final android.graphics.Bitmap cropImage(android.graphics.Bitmap,android.graphics.Bitmap,boolean)
com.bumptech.glide.load.model.ResourceLoader:
    public com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Integer,int,int,com.bumptech.glide.load.Options)
    public boolean handles()
    public final android.net.Uri getResourceUri(java.lang.Integer)
androidx.core.view.GravityCompat
androidx.appcompat.app.AlertController$AlertParams$1
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState:
    public void invalidateCache()
    public final int getCapacity()
    public final int getChildCount()
    public final boolean setLayoutDirection(int,int)
    public final void applyTheme(android.content.res.Resources$Theme)
    public final void setVariablePadding(boolean)
    public final android.graphics.Rect getConstantPadding()
    public final void setConstantSize(boolean)
    public final boolean isConstantSize()
    public final int getConstantWidth()
    public final int getConstantHeight()
    public final int getConstantMinimumWidth()
    public final int getConstantMinimumHeight()
    public final void setEnterFadeDuration(int)
    public final void setExitFadeDuration(int)
    public final int getOpacity()
    public void growArray(int,int)
    public final android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.ScrollbarHelper
com.google.android.material.internal.StateListAnimator:
    public void setState(int[])
    public void jumpToCurrentState()
    public final void start(com.google.android.material.internal.StateListAnimator$Tuple)
    public final void cancel()
com.yd.photoeditor.imageprocessing.filter.colour.P5:
    public void <init>(float)
    public void setHue(float)
com.bumptech.glide.module.ManifestParser:
    public void <init>(android.content.Context)
    public java.util.List parse()
    public final android.content.Context context
androidx.arch.core.executor.DefaultTaskExecutor:
    public void executeOnDiskIO(java.lang.Runnable)
    public void postToMainThread(java.lang.Runnable)
    public volatile android.os.Handler mMainHandler
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener:
    public androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior:
    public int getScrimColor()
    public float getScrimOpacity()
    public boolean blocksInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
    public void onDependentViewRemoved()
    public void onNestedScrollAccepted()
    public void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)
    public void onStopNestedScroll()
    public void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int)
    public void onNestedPreScroll()
    public boolean onNestedFling()
    public androidx.core.view.WindowInsetsCompat onApplyWindowInsets(androidx.core.view.WindowInsetsCompat)
androidx.core.view.NestedScrollingParent
androidx.appcompat.widget.MenuPopupWindow:
    public void setEnterTransition(java.lang.Object)
    public void setExitTransition(java.lang.Object)
    public void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
    public void setTouchModal(boolean)
androidx.appcompat.app.AppCompatDelegateImpl$4:
    public void <init>(androidx.appcompat.app.AppCompatDelegateImpl)
    public void onFitSystemWindows(android.graphics.Rect)
androidx.appcompat.view.menu.MenuPopup:
    public static androidx.appcompat.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter)
    public void setEpicenterBounds(android.graphics.Rect)
    public android.graphics.Rect getEpicenterBounds()
androidx.transition.ObjectAnimatorUtils
com.bumptech.glide.load.model.stream.HttpUriLoader:
    public com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options)
    public boolean handles(android.net.Uri)
com.google.android.material.elevation.ElevationOverlayProvider:
    public int compositeOverlayIfNeeded(int,float)
    public int compositeOverlay(int,float)
    public float calculateOverlayAlphaFraction(float)
    public boolean isThemeElevationOverlayEnabled()
    public final boolean isThemeSurfaceColor(int)
androidx.core.graphics.drawable.DrawableCompat
com.bumptech.glide.load.data.FileDescriptorAssetPathFetcher:
    public android.os.ParcelFileDescriptor loadResource(android.content.res.AssetManager,java.lang.String)
    public void close(android.os.ParcelFileDescriptor)
com.eptonic.photocollage.model.ImageTemplate
com.google.android.material.floatingactionbutton.FloatingActionButton:
    public static synthetic int access$000(com.google.android.material.floatingactionbutton.FloatingActionButton)
    public static void <clinit>()
    public void show(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)
    public void hide(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)
    public void getMeasuredContentRect(android.graphics.Rect)
    public final com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener wrapOnVisibilityChangedListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)
    public final void offsetRectWithShadow(android.graphics.Rect)
    public final com.google.android.material.floatingactionbutton.FloatingActionButtonImpl createImpl()
    public int maxImageSize
    public final android.graphics.Rect touchArea
    public final androidx.appcompat.widget.AppCompatImageHelper imageHelper
    public final com.google.android.material.expandable.ExpandableWidgetHelper expandableWidgetHelper
    public static final int DEF_STYLE_RES
com.bumptech.glide.disklrucache.DiskLruCache:
    public static synthetic java.io.Writer access$100(com.bumptech.glide.disklrucache.DiskLruCache)
    public static synthetic void access$200(com.bumptech.glide.disklrucache.DiskLruCache)
    public static synthetic boolean access$300(com.bumptech.glide.disklrucache.DiskLruCache)
    public static synthetic void access$400(com.bumptech.glide.disklrucache.DiskLruCache)
    public static synthetic int access$502(com.bumptech.glide.disklrucache.DiskLruCache,int)
    public static synthetic int access$1900(com.bumptech.glide.disklrucache.DiskLruCache)
    public static synthetic java.io.File access$2000(com.bumptech.glide.disklrucache.DiskLruCache)
    public static synthetic void access$2100(com.bumptech.glide.disklrucache.DiskLruCache,com.bumptech.glide.disklrucache.DiskLruCache$Editor,boolean)
    public com.bumptech.glide.disklrucache.DiskLruCache$Editor edit(java.lang.String)
    public void delete()
androidx.constraintlayout.solver.widgets.Guideline:
    public int getOrientation()
    public void setGuidePercent(float)
    public void setGuideBegin(int)
    public void setGuideEnd(int)
    public int mMinimumPosition
    public androidx.constraintlayout.solver.widgets.Rectangle mHead
    public int mHeadSize
com.google.android.material.transformation.ExpandableTransformationBehavior:
    public static synthetic android.animation.AnimatorSet access$002(com.google.android.material.transformation.ExpandableTransformationBehavior,android.animation.AnimatorSet)
com.bumptech.glide.load.engine.ActiveResources$1$1:
    public final synthetic com.bumptech.glide.load.engine.ActiveResources$1 this$1
org.greenrobot.greendao.internal.TableStatements:
    public final java.lang.String[] pkColumns
com.eptonic.photocollage.ui.mutitouchh.MultiTouchController:
    public void <init>(com.eptonic.photocollage.ui.mutitouchh.MultiTouchController$MultiTouchObjectCanvas,boolean)
    public final boolean pastThreshold(float,float,float)
    public final void multiTouchController()
androidx.appcompat.view.menu.ExpandedMenuView:
    public int mAnimations
com.bumptech.glide.load.resource.bitmap.DrawableToBitmapConverter:
    public static android.graphics.Bitmap drawToBitmap(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.drawable.Drawable,int,int)
androidx.collection.MapCollections$EntrySet:
    public boolean add()
androidx.recyclerview.widget.RecyclerView$6:
    public void offsetPositionsForRemovingInvisible(int,int)
    public void offsetPositionsForRemovingLaidOutOrNewView(int,int)
    public void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public void offsetPositionsForAdd(int,int)
    public void offsetPositionsForMove(int,int)
androidx.core.widget.AutoScrollHelper:
    public static int constrain(int,int,int)
    public androidx.core.widget.AutoScrollHelper setEnabled(boolean)
    public androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float)
    public androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float)
    public androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float)
    public androidx.core.widget.AutoScrollHelper setEdgeType(int)
    public androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float)
    public androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float)
    public androidx.core.widget.AutoScrollHelper setActivationDelay(int)
    public androidx.core.widget.AutoScrollHelper setRampUpDuration(int)
    public androidx.core.widget.AutoScrollHelper setRampDownDuration(int)
    public abstract void scrollTargetBy(int,int)
    public abstract boolean canTargetScrollHorizontally(int)
    public abstract boolean canTargetScrollVertically(int)
    public void cancelTargetTouch()
    public final void startAnimating()
    public final float getEdgeValue(float,float,float,float)
    public boolean mExclusive
com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$CacheDirectoryGetter:
    public abstract java.io.File getCacheDirectory()
androidx.transition.FragmentTransitionSupport$1:
    public final synthetic android.graphics.Rect val$epicenter
    public final synthetic androidx.transition.FragmentTransitionSupport this$0
com.bumptech.glide.load.data.StreamLocalUriFetcher:
    public java.io.InputStream loadResource(android.net.Uri,android.content.ContentResolver)
    public void close(java.io.InputStream)
    public final java.io.InputStream loadResourceFromUri(android.net.Uri,android.content.ContentResolver)
    public final java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri)
com.google.android.material.animation.ArgbEvaluatorCompat:
    public static com.google.android.material.animation.ArgbEvaluatorCompat getInstance()
    public java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer)
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment:
    public void getEdgePath(float,float,float,com.google.android.material.shape.ShapePath)
    public float getFabDiameter()
    public void setFabDiameter(float)
    public void setHorizontalOffset(float)
    public float getCradleVerticalOffset()
    public void setCradleVerticalOffset(float)
    public float getFabCradleMargin()
    public void setFabCradleMargin(float)
    public float getFabCradleRoundedCornerRadius()
    public void setFabCradleRoundedCornerRadius(float)
    public float fabDiameter
com.bumptech.glide.load.engine.ResourceCacheGenerator:
    public final boolean hasNextModelLoader()
com.google.android.material.datepicker.CalendarConstraints$1:
    public com.google.android.material.datepicker.CalendarConstraints createFromParcel(android.os.Parcel)
    public com.google.android.material.datepicker.CalendarConstraints[] newArray(int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.app.AlertController$5
androidx.core.view.accessibility.AccessibilityNodeInfoCompat:
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo)
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View)
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain()
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    public static java.lang.String getActionSymbolicName(int)
    public static void <clinit>()
    public android.view.accessibility.AccessibilityNodeInfo unwrap()
    public void setSource(android.view.View,int)
    public int getChildCount()
    public void addChild(android.view.View,int)
    public int getActions()
    public void addAction(int)
    public void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
    public boolean performAction(int,android.os.Bundle)
    public void setParent(android.view.View)
    public void setParent(android.view.View,int)
    public void getBoundsInParent(android.graphics.Rect)
    public void setBoundsInParent(android.graphics.Rect)
    public void getBoundsInScreen(android.graphics.Rect)
    public void setBoundsInScreen(android.graphics.Rect)
    public boolean isCheckable()
    public void setCheckable(boolean)
    public boolean isChecked()
    public void setChecked(boolean)
    public boolean isFocusable()
    public void setFocusable(boolean)
    public boolean isFocused()
    public void setFocused(boolean)
    public void setVisibleToUser(boolean)
    public void setAccessibilityFocused(boolean)
    public boolean isSelected()
    public boolean isClickable()
    public void setClickable(boolean)
    public boolean isLongClickable()
    public boolean isEnabled()
    public void setEnabled(boolean)
    public boolean isPassword()
    public boolean isScrollable()
    public void setScrollable(boolean)
    public java.lang.CharSequence getPackageName()
    public void setPackageName(java.lang.CharSequence)
    public java.lang.CharSequence getClassName()
    public void setClassName(java.lang.CharSequence)
    public void setText(java.lang.CharSequence)
    public void addSpansToExtras(java.lang.CharSequence,android.view.View)
    public void setContentDescription(java.lang.CharSequence)
    public void recycle()
    public java.lang.String getViewIdResourceName()
    public void setContentInvalid(boolean)
    public void setError(java.lang.CharSequence)
    public void setPaneTitle(java.lang.CharSequence)
    public void setScreenReaderFocusable(boolean)
    public boolean isShowingHintText()
    public void setShowingHintText(boolean)
    public void setHeading(boolean)
    public final android.util.SparseArray getOrCreateSpansFromViewTags(android.view.View)
    public final android.util.SparseArray getSpansFromViewTags(android.view.View)
    public final int idForClickableSpan(android.text.style.ClickableSpan,android.util.SparseArray)
    public final boolean hasSpans()
    public final void clearExtrasSpans()
    public final void addSpanLocationToExtras(android.text.style.ClickableSpan,android.text.Spanned,int)
    public final void removeCollectedSpans(android.view.View)
    public final boolean getBooleanProperty(int)
androidx.appcompat.widget.SuggestionsAdapter:
    public void setQueryRefinement(int)
    public android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)
    public final java.lang.CharSequence formatUrl(java.lang.CharSequence)
    public final void setViewText(android.widget.TextView,java.lang.CharSequence)
    public final android.graphics.drawable.Drawable getIcon1(android.database.Cursor)
    public final android.graphics.drawable.Drawable getIcon2(android.database.Cursor)
    public final void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int)
    public final android.graphics.drawable.Drawable getDrawable(android.net.Uri)
    public final android.graphics.drawable.Drawable checkIconCache(java.lang.String)
    public final void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable)
    public final android.graphics.drawable.Drawable getDefaultIcon1()
    public final android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName)
    public final android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)
    public final android.app.SearchManager mSearchManager
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$3:
    public final synthetic com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton this$0
com.bumptech.glide.load.engine.DecodeJob$Callback:
    public abstract void onResourceReady(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource)
    public abstract void onLoadFailed(com.bumptech.glide.load.engine.GlideException)
    public abstract void reschedule(com.bumptech.glide.load.engine.DecodeJob)
com.yd.photoeditor.imageprocessing.filter.effect.F111:
    public void <init>(float,float)
    public void setThreshold(float)
    public void setQuantizationLevels(float)
androidx.viewpager2.adapter.FragmentStateAdapter$5:
    public final synthetic android.os.Handler val$handler
    public final synthetic java.lang.Runnable val$runnable
com.eptonic.photocollage.util.TemplateUtils
androidx.core.view.WindowInsetsCompat:
    public static androidx.core.view.WindowInsetsCompat wrap(java.lang.Object)
    public static java.lang.Object unwrap(androidx.core.view.WindowInsetsCompat)
    public boolean isConsumed()
    public androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int)
androidx.appcompat.widget.TooltipPopup:
    public static android.view.View getAppRootView(android.view.View)
    public void show(android.view.View,int,int,boolean,java.lang.CharSequence)
    public boolean isShowing()
    public final void computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)
androidx.appcompat.app.AppCompatActivity:
    public void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder)
    public void onPrepareSupportNavigateUpTaskStack()
    public boolean onSupportNavigateUp()
    public boolean supportShouldUpRecreateTask(android.content.Intent)
    public void supportNavigateUpTo(android.content.Intent)
    public void onSupportContentChanged()
    public void onNightModeChanged()
    public final boolean performMenuItemShortcut(android.view.KeyEvent)
androidx.appcompat.widget.ForwardingListener:
    public static boolean pointInView(android.view.View,float,float,float)
    public void onLongPress()
    public final boolean onTouchObserved(android.view.MotionEvent)
    public final boolean onTouchForwarded(android.view.MotionEvent)
    public final boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent)
    public final boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent)
androidx.recyclerview.widget.ViewInfoStore$InfoRecord:
    public static void drainCache()
com.eptonic.photocollage.resEncryption.utils.StreamUtils
com.bumptech.glide.load.data.InputStreamRewinder$Factory:
    public com.bumptech.glide.load.data.DataRewinder build(java.io.InputStream)
com.google.android.material.radiobutton.MaterialRadioButton:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.AppCompatRatingBar:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.transition.ViewUtils$1:
    public java.lang.Float get(android.view.View)
    public void set(android.view.View,java.lang.Float)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$4:
    public void set(android.view.View,java.lang.Float)
    public java.lang.Float get(android.view.View)
com.bumptech.glide.request.ThumbnailRequestCoordinator
androidx.appcompat.widget.ScrollingTabContainerView$1
androidx.core.text.BidiFormatter:
    public static boolean isRtlLocale(java.util.Locale)
    public boolean getStereoReset()
    public java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat,boolean)
    public java.lang.CharSequence unicodeWrap(java.lang.CharSequence)
    public final java.lang.String markAfter(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat)
    public final java.lang.String markBefore(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat)
com.bumptech.glide.load.model.LazyHeaders$Builder:
    public static java.lang.String getSanitizedUserAgent()
    public com.bumptech.glide.load.model.LazyHeaders build()
    public boolean copyOnModify
    public boolean isUserAgentDefault
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1:
    public void onEnd()
androidx.constraintlayout.widget.ConstraintSet$Constraint:
    public synthetic void <init>(androidx.constraintlayout.widget.ConstraintSet$1)
    public static synthetic void access$200(androidx.constraintlayout.widget.ConstraintSet$Constraint,androidx.constraintlayout.widget.ConstraintHelper,int,androidx.constraintlayout.widget.Constraints$LayoutParams)
    public static synthetic void access$300(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,androidx.constraintlayout.widget.Constraints$LayoutParams)
    public androidx.constraintlayout.widget.ConstraintSet$Constraint clone()
    public final void fillFromConstraints(androidx.constraintlayout.widget.ConstraintHelper,int,androidx.constraintlayout.widget.Constraints$LayoutParams)
    public final void fillFrom(int,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams)
com.bumptech.glide.load.engine.GlideException$IndentedAppendable:
    public final java.lang.CharSequence safeSequence(java.lang.CharSequence)
com.google.android.material.textfield.PasswordToggleEndIconDelegate$3:
    public final synthetic com.google.android.material.textfield.PasswordToggleEndIconDelegate this$0
androidx.transition.FragmentTransitionSupport$2:
    public final synthetic androidx.transition.FragmentTransitionSupport this$0
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener:
    public void onStartEnterTransition()
    public void startListening()
    public boolean isReady()
    public void cancelTransaction()
com.google.android.material.transformation.FabTransformationScrimBehavior:
    public final void createScrimAnimation(android.view.View,boolean,boolean,java.util.List)
com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder:
    public boolean handles(android.net.Uri)
    public final android.content.Context findContextForPackage(android.net.Uri,java.lang.String)
    public final int findResourceIdFromUri(android.content.Context,android.net.Uri)
    public final int findResourceIdFromTypeAndNameResourceUri(android.content.Context,android.net.Uri)
    public final int findResourceIdFromResourceIdUri(android.net.Uri)
androidx.core.graphics.TypefaceCompatApi21Impl:
    public static java.lang.Object newFamily()
    public static android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
    public static void <clinit>()
    public final java.io.File getFile(android.os.ParcelFileDescriptor)
androidx.lifecycle.LiveData$1
androidx.appcompat.widget.AppCompatDrawableManager:
    public static synthetic android.graphics.PorterDuff$Mode access$000()
com.yd.photoeditor.vv.ImageDecoder:
    public static void <clinit>()
androidx.core.view.ViewCompat:
    public static android.graphics.Rect getEmptyTempRect()
    public static void setImportantForAutofill(android.view.View,int)
    public static androidx.core.view.AccessibilityDelegateCompat getOrCreateAccessibilityDelegateCompat(android.view.View)
    public static void addAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
    public static java.util.List getActionList(android.view.View)
    public static android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
    public static void compatOffsetTopAndBottom(android.view.View,int)
    public static void compatOffsetLeftAndRight(android.view.View,int)
    public static void tickleInvalidationFlag(android.view.View)
    public static androidx.core.view.ViewCompat$AccessibilityViewProperty screenReaderFocusableProperty()
    public static java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
    public static androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty()
    public static boolean isAccessibilityHeading(android.view.View)
    public static androidx.core.view.ViewCompat$AccessibilityViewProperty accessibilityHeadingProperty()
    public static final java.util.concurrent.atomic.AtomicInteger sNextGeneratedId
    public static java.lang.reflect.Field sMinWidthField
    public static boolean sMinWidthFieldFetched
    public static java.lang.reflect.Field sMinHeightField
    public static boolean sMinHeightFieldFetched
    public static java.util.WeakHashMap sTransitionNameMap
    public static java.lang.ThreadLocal sThreadLocalRect
    public static final int[] ACCESSIBILITY_ACTIONS_RESOURCE_IDS
    public static androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager sAccessibilityPaneVisibilityManager
com.bumptech.glide.manager.DefaultConnectivityMonitor:
    public final void register()
    public final void unregister()
com.bumptech.glide.load.engine.bitmap_recycle.ByteArrayAdapter:
    public int getArrayLength(byte[])
    public byte[] newArray(int)
androidx.appcompat.widget.ResourcesWrapper:
    public void <init>(android.content.res.Resources)
    public java.lang.CharSequence getText(int)
    public java.lang.CharSequence getQuantityText(int,int)
    public java.lang.String getString(int)
    public varargs java.lang.String getString(int,java.lang.Object[])
    public varargs java.lang.String getQuantityString(int,int,java.lang.Object[])
    public java.lang.String getQuantityString(int,int)
    public java.lang.CharSequence getText(int,java.lang.CharSequence)
    public java.lang.CharSequence[] getTextArray(int)
    public java.lang.String[] getStringArray(int)
    public int[] getIntArray(int)
    public android.content.res.TypedArray obtainTypedArray(int)
    public float getDimension(int)
    public int getDimensionPixelOffset(int)
    public int getDimensionPixelSize(int)
    public float getFraction(int,int,int)
    public android.graphics.drawable.Drawable getDrawable(int)
    public android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)
    public android.graphics.drawable.Drawable getDrawableForDensity(int,int)
    public android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme)
    public android.graphics.Movie getMovie(int)
    public int getColor(int)
    public android.content.res.ColorStateList getColorStateList(int)
    public boolean getBoolean(int)
    public int getInteger(int)
    public android.content.res.XmlResourceParser getLayout(int)
    public android.content.res.XmlResourceParser getAnimation(int)
    public android.content.res.XmlResourceParser getXml(int)
    public java.io.InputStream openRawResource(int)
    public java.io.InputStream openRawResource(int,android.util.TypedValue)
    public android.content.res.AssetFileDescriptor openRawResourceFd(int)
    public void getValue(int,android.util.TypedValue,boolean)
    public void getValueForDensity(int,int,android.util.TypedValue,boolean)
    public void getValue(java.lang.String,android.util.TypedValue,boolean)
    public android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])
    public void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)
    public android.util.DisplayMetrics getDisplayMetrics()
    public android.content.res.Configuration getConfiguration()
    public int getIdentifier(java.lang.String,java.lang.String,java.lang.String)
    public java.lang.String getResourceName(int)
    public java.lang.String getResourcePackageName(int)
    public java.lang.String getResourceTypeName(int)
    public java.lang.String getResourceEntryName(int)
    public void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle)
    public void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle)
    public final android.content.res.Resources mResources
com.bumptech.glide.load.engine.cache.DiskLruCacheFactory:
    public com.bumptech.glide.load.engine.cache.DiskCache build()
com.eptonic.photocollage.ui.view.PhotoLayout$5
androidx.recyclerview.widget.RecyclerView$SmoothScroller:
    public void start(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$LayoutManager)
    public void setTargetPosition(int)
    public androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
    public boolean isPendingInitialRun()
    public boolean isRunning()
    public int getTargetPosition()
    public int getChildPosition(android.view.View)
    public int getChildCount()
    public android.view.View findViewByPosition(int)
    public void onChildAttachedToWindow(android.view.View)
    public void normalize(android.graphics.PointF)
    public abstract void onStart()
    public abstract void onStop()
    public abstract void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
com.yd.photoeditor.imageprocessing.filter.effect.VVVVVVVVVVVVVVVV:
    public void <init>(float)
    private void constructor$com$yd$photoeditor$imageprocessing$filter$colour$P11(float[])
    private void setConvolutionKernel$com$yd$photoeditor$imageprocessing$filter$colour$P11(float[])
    private void constructor$com$yd$photoeditor$imageprocessing$filter$colour$P11()
    private void onInit$com$yd$photoeditor$imageprocessing$filter$colour$P11()
    public void setConvolutionKernel(float[])
androidx.appcompat.widget.Toolbar$LayoutParams:
    public void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams)
androidx.transition.Fade:
    public static float getStartAlpha(androidx.transition.TransitionValues,float)
    public android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)
androidx.fragment.app.FragmentState:
    public androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,androidx.fragment.app.FragmentFactory)
com.bumptech.glide.load.resource.SimpleResource
com.bumptech.glide.load.resource.bytes.BytesResource:
    public byte[] get()
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup:
    public boolean isVisibleToUser(android.view.View)
    public int getHorizontalOriginalOffset()
androidx.appcompat.app.WindowDecorActionBar:
    public static boolean checkShowingFlags(boolean,boolean,boolean)
    public void setElevation(float)
    public void completeDeferredDestroyActionMode()
    public void onWindowVisibilityChanged(int)
    public void setDisplayHomeAsUpEnabled(boolean)
    public void setHomeButtonEnabled(boolean)
    public void setDisplayOptions(int,int)
    public int getNavigationMode()
    public void enableContentAnimations(boolean)
    public void showForSystem()
    public void hideForSystem()
    public void setHideOnContentScrollEnabled(boolean)
    public void doShow(boolean)
    public void doHide(boolean)
    public void onContentScrollStarted()
    public void onContentScrollStopped()
    public final androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)
    public final void showForActionMode()
    public final void hideForActionMode()
    public final boolean shouldAnimateContextView()
    public android.app.Activity mActivity
    public android.app.Dialog mDialog
    public androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView
    public java.util.ArrayList mTabs
    public int mSavedTabPosition
    public static final synthetic boolean $assertionsDisabled
androidx.lifecycle.ClassesInfoCache$MethodReference:
    public void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)
com.eptonic.photocollage.resEncryption.utils.Reflect:
    public static com.eptonic.photocollage.resEncryption.utils.Reflect onClass(java.lang.String)
    public static com.eptonic.photocollage.resEncryption.utils.Reflect onClass(java.lang.Class)
    public static com.eptonic.photocollage.resEncryption.utils.Reflect on(java.lang.Class,java.lang.Object)
    public static java.lang.Object unwrap(java.lang.Object)
    public static varargs java.lang.Class[] types(java.lang.Object[])
    public static java.lang.Class forName(java.lang.String)
    public java.lang.Object get()
    public com.eptonic.photocollage.resEncryption.utils.Reflect set(java.lang.String,java.lang.Object)
    public com.eptonic.photocollage.resEncryption.utils.Reflect field(java.lang.String)
    public varargs com.eptonic.photocollage.resEncryption.utils.Reflect call(java.lang.String,java.lang.Object[])
    public java.lang.Class type()
    public final java.lang.reflect.Method exactMethod(java.lang.String,java.lang.Class[])
    public final boolean match(java.lang.Class[],java.lang.Class[])
com.google.android.material.ripple.RippleUtils:
    public static final int[] PRESSED_STATE_SET
    public static final int[] HOVERED_FOCUSED_STATE_SET
    public static final int[] FOCUSED_STATE_SET
    public static final int[] HOVERED_STATE_SET
    public static final int[] SELECTED_PRESSED_STATE_SET
    public static final int[] SELECTED_HOVERED_FOCUSED_STATE_SET
    public static final int[] SELECTED_FOCUSED_STATE_SET
    public static final int[] SELECTED_HOVERED_STATE_SET
    public static final int[] SELECTED_STATE_SET
androidx.core.view.ViewCompat$UnhandledKeyEventManager:
    public boolean dispatch(android.view.View,android.view.KeyEvent)
    public boolean preDispatch(android.view.KeyEvent)
    public final android.util.SparseArray getCapturedKeys()
androidx.appcompat.widget.AppCompatToggleButton:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
com.eptonic.photocollage.adapter.SaveAdapter:
    public com.eptonic.photocollage.adapter.SaveAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup)
    public void onBindViewHolder(com.eptonic.photocollage.adapter.SaveAdapter$ViewHolder,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState:
    public void invalidateSpanInfo()
    public void invalidateAnchorPositionInfo()
androidx.recyclerview.widget.RecyclerView$SavedState$1:
    public androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel)
    public androidx.recyclerview.widget.RecyclerView$SavedState[] newArray(int)
com.bumptech.glide.request.RequestOptions:
    public static com.bumptech.glide.request.RequestOptions diskCacheStrategyOf(com.bumptech.glide.load.engine.DiskCacheStrategy)
    public static com.bumptech.glide.request.RequestOptions signatureOf(com.bumptech.glide.load.Key)
    public static com.bumptech.glide.request.RequestOptions decodeTypeOf(java.lang.Class)
androidx.core.app.NavUtils
com.yd.photoeditor.imageprocessing.filter.ImageRender$2:
    public final synthetic com.yd.photoeditor.imageprocessing.filter.ImageRender this$0
com.eptonic.photocollage.presenter.listener.EditEventListener:
    public abstract void onImageEdit()
androidx.core.graphics.ColorUtils:
    public static int compositeAlpha(int,int)
    public static final java.lang.ThreadLocal TEMP_ARRAY
com.bumptech.glide.load.Options:
    public static void updateDiskCacheKey(com.bumptech.glide.load.Option,java.lang.Object,java.security.MessageDigest)
    public com.bumptech.glide.load.Options set(com.bumptech.glide.load.Option,java.lang.Object)
androidx.constraintlayout.widget.Placeholder:
    public void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout)
    public void updatePostMeasure()
androidx.coordinatorlayout.widget.DirectedAcyclicGraph:
    public boolean contains(java.lang.Object)
    public void addEdge(java.lang.Object,java.lang.Object)
    public java.util.List getIncomingEdges(java.lang.Object)
    public java.util.List getOutgoingEdges(java.lang.Object)
    public boolean hasOutgoingEdges(java.lang.Object)
    public void clear()
    public java.util.ArrayList getSortedList()
    public final java.util.ArrayList getEmptyList()
    public final void poolList(java.util.ArrayList)
androidx.core.content.res.ResourcesCompat
androidx.fragment.app.FragmentTransitionImpl:
    public static java.lang.String findKeyForValue(java.util.Map,java.lang.String)
    public java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList)
    public void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map)
    public void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map)
    public void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map)
androidx.core.view.ViewCompat$3:
    public java.lang.Boolean frameworkGet(android.view.View)
    public void frameworkSet(android.view.View,java.lang.Boolean)
    public boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean)
androidx.arch.core.executor.TaskExecutor:
    public abstract void executeOnDiskIO(java.lang.Runnable)
    public abstract void postToMainThread(java.lang.Runnable)
androidx.constraintlayout.solver.widgets.Helper:
    public void add(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public void removeAllIds()
com.google.android.material.transformation.FabTransformationBehavior$1:
    public final synthetic com.google.android.material.transformation.FabTransformationBehavior this$0
androidx.recyclerview.widget.RecyclerView$ItemDecoration:
    public void onDraw()
    public void onDrawOver()
    public void getItemOffsets(android.graphics.Rect)
    public void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView)
androidx.constraintlayout.widget.Constraints:
    public androidx.constraintlayout.widget.Constraints$LayoutParams generateLayoutParams(android.util.AttributeSet)
    public androidx.constraintlayout.widget.Constraints$LayoutParams generateDefaultLayoutParams()
com.bumptech.glide.Glide:
    public static void initializeGlide(android.content.Context,com.bumptech.glide.GeneratedAppGlideModule)
    public static void initializeGlide(android.content.Context,com.bumptech.glide.GlideBuilder,com.bumptech.glide.GeneratedAppGlideModule)
    public static com.bumptech.glide.GeneratedAppGlideModule getAnnotationGeneratedGlideModules(android.content.Context)
    public static com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context)
    public com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool getBitmapPool()
    public com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool getArrayPool()
    public android.content.Context getContext()
    public com.bumptech.glide.manager.ConnectivityMonitorFactory getConnectivityMonitorFactory()
    public com.bumptech.glide.GlideContext getGlideContext()
    public void clearMemory()
    public void trimMemory(int)
    public com.bumptech.glide.manager.RequestManagerRetriever getRequestManagerRetriever()
    public com.bumptech.glide.Registry getRegistry()
    public final com.bumptech.glide.load.engine.Engine engine
    public final com.bumptech.glide.Glide$RequestOptionsFactory defaultRequestOptionsFactory
    public com.bumptech.glide.MemoryCategory memoryCategory
androidx.core.view.ViewCompat$AccessibilityViewProperty:
    public void set(android.view.View,java.lang.Object)
    public final boolean frameworkAvailable()
    public final boolean extrasAvailable()
    public final int mContentChangeType
androidx.appcompat.widget.ListPopupWindow$2
androidx.activity.ImmLeaksCleaner:
    public static void initializeReflectiveFields()
    public static void <clinit>()
androidx.appcompat.widget.ScrollingTabContainerView$TabView:
    public void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.content.Context,androidx.appcompat.app.ActionBar$Tab,boolean)
    public void bindTab(androidx.appcompat.app.ActionBar$Tab)
    public void update()
    public androidx.appcompat.app.ActionBar$Tab getTab()
    public final int[] BG_ATTRS
    public android.widget.TextView mTextView
    public android.widget.ImageView mIconView
    public android.view.View mCustomView
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$4:
    public java.lang.Float evaluate(float,java.lang.Float,java.lang.Float)
    public final synthetic com.google.android.material.floatingactionbutton.FloatingActionButtonImpl this$0
androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry:
    public abstract void addPosition(int,int)
com.google.android.material.shape.ShapePath$PathArcOperation:
    public static synthetic void access$600(com.google.android.material.shape.ShapePath$PathArcOperation,float)
    public static synthetic void access$700(com.google.android.material.shape.ShapePath$PathArcOperation,float)
    public static synthetic float access$800(com.google.android.material.shape.ShapePath$PathArcOperation)
    public static synthetic float access$900(com.google.android.material.shape.ShapePath$PathArcOperation)
    public static synthetic float access$1000(com.google.android.material.shape.ShapePath$PathArcOperation)
    public static synthetic float access$1100(com.google.android.material.shape.ShapePath$PathArcOperation)
    public static synthetic float access$1200(com.google.android.material.shape.ShapePath$PathArcOperation)
    public static synthetic float access$1300(com.google.android.material.shape.ShapePath$PathArcOperation)
    public final float getLeft()
    public final float getTop()
    public final float getRight()
    public final float getBottom()
    public final void setLeft(float)
    public final void setTop(float)
    public final void setRight(float)
    public final void setBottom(float)
    public final float getStartAngle()
    public final float getSweepAngle()
    public final void setStartAngle(float)
    public final void setSweepAngle(float)
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags:
    public void setBounds(int,int,int,int)
    public void addFlags(int)
    public void resetFlags()
androidx.transition.ChangeBounds$6:
    public void set(android.view.View,android.graphics.PointF)
    public android.graphics.PointF get()
com.eptonic.photocollage.ui.wrapper.dah.ghjf.gfhs.fhsj.ghsj.hfjsh.fhsj.fhsj.hfjs.fdj.sjhfs.fgsj.jgks.vbb.uiManager.FreePhotoUiManager$7:
    public varargs java.io.File doInBackground()
    public void onPostExecute(java.io.File)
    public final synthetic com.eptonic.photocollage.ui.wrapper.dah.ghjf.gfhs.fhsj.ghsj.hfjsh.fhsj.fhsj.hfjs.fdj.sjhfs.fgsj.jgks.vbb.uiManager.FreePhotoUiManager this$0
com.bumptech.glide.load.model.Headers:
    public static final com.bumptech.glide.load.model.Headers NONE
com.google.android.material.resources.TextAppearance:
    public static synthetic android.graphics.Typeface access$002(com.google.android.material.resources.TextAppearance,android.graphics.Typeface)
    public static synthetic boolean access$102(com.google.android.material.resources.TextAppearance,boolean)
    public static synthetic android.graphics.Typeface access$000(com.google.android.material.resources.TextAppearance)
    public android.graphics.Typeface getFont(android.content.Context)
    public void getFontAsync(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback)
    public android.graphics.Typeface getFallbackFont()
    public void updateMeasureState(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback)
    public final android.content.res.ColorStateList textColorHint
    public final android.content.res.ColorStateList textColorLink
    public final boolean textAllCaps
androidx.appcompat.view.menu.BaseMenuPresenter:
    public void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
    public androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
    public void addItemView(android.view.View,int)
    public boolean filterLeftoverView(android.view.ViewGroup,int)
    public androidx.appcompat.view.menu.MenuPresenter$Callback getCallback()
    public androidx.appcompat.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup)
    public abstract void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)
    public abstract boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl)
    public void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
    public void setId(int)
    public android.view.LayoutInflater mInflater
    public int mId
com.bumptech.glide.load.HttpException:
    public void <init>(java.lang.String,int,java.lang.Throwable)
    public final int statusCode
com.eptonic.photocollage.model.PhotoStickerSaveData:
    public java.lang.String getFilename()
    public int getIdx()
    public java.lang.String getFilenamex()
com.bumptech.glide.GlideBuilder:
    public void setRequestManagerFactory(com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory)
    public com.bumptech.glide.Glide build(android.content.Context)
    public boolean isActiveResourceRetentionAllowed
    public boolean isLoggingRequestOriginsEnabled
    public boolean isImageDecoderEnabledForBitmaps
androidx.appcompat.view.StandaloneActionMode:
    public boolean mFocusable
androidx.core.view.AccessibilityDelegateCompat:
    public static java.util.List getActionList(android.view.View)
    public android.view.View$AccessibilityDelegate getBridge()
    public final boolean performClickableSpanAction(int,android.view.View)
    public final boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)
com.yd.photoeditor.vv.FileUtils$1
com.google.android.material.transformation.ExpandableBehavior:
    public static synthetic int access$000(com.google.android.material.transformation.ExpandableBehavior)
    public com.google.android.material.expandable.ExpandableWidget findExpandableWidget(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
